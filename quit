[33mcommit 5b47e25b1561fb66627fa7dae29803e64204aea1[m
Author: Alan Tian <tianheth@gmail.com>
Date:   Sat Apr 18 16:26:14 2015 +1200

    the runnable version with both cui and gui.
    cui is working properly with actions including shuffle, draw card, deck to,  cut and link.
    gui can display deck, stacks and lists, along with a functioning 'new game' button, and draw card.
    
    this version implemented abstract linked list separately. this classes can be used later for other projects.

[1mdiff --git a/.gitignore b/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..f3d6549[m
[1m--- /dev/null[m
[1m+++ b/.gitignore[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m/build/[m
\ No newline at end of file[m
[1mdiff --git a/build.xml b/build.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..dff60da[m
[1m--- /dev/null[m
[1m+++ b/build.xml[m
[36m@@ -0,0 +1,73 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<!-- You may freely edit this file. See commented blocks below for -->[m
[32m+[m[32m<!-- some examples of how to customize the build. -->[m
[32m+[m[32m<!-- (If you delete it and reopen the project it will be recreated.) -->[m
[32m+[m[32m<!-- By default, only the Clean and Build commands use this build script. -->[m
[32m+[m[32m<!-- Commands such as Run, Debug, and Test only use this build script if -->[m
[32m+[m[32m<!-- the Compile on Save feature is turned off for the project. -->[m
[32m+[m[32m<!-- You can turn off the Compile on Save (or Deploy on Save) setting -->[m
[32m+[m[32m<!-- in the project's Project Properties dialog box.-->[m
[32m+[m[32m<project name="solitaire" default="default" basedir=".">[m
[32m+[m[32m    <description>Builds, tests, and runs the project solitaire.</description>[m
[32m+[m[32m    <import file="nbproject/build-impl.xml"/>[m
[32m+[m[32m    <!--[m
[32m+[m
[32m+[m[32m    There exist several targets which are by default empty and which can be[m[41m [m
[32m+[m[32m    used for execution of your tasks. These targets are usually executed[m[41m [m
[32m+[m[32m    before and after some main targets. They are:[m[41m [m
[32m+[m
[32m+[m[32m      -pre-init:                 called before initialization of project properties[m
[32m+[m[32m      -post-init:                called after initialization of project properties[m
[32m+[m[32m      -pre-compile:              called before javac compilation[m
[32m+[m[32m      -post-compile:             called after javac compilation[m
[32m+[m[32m      -pre-compile-single:       called before javac compilation of single file[m
[32m+[m[32m      -post-compile-single:      called after javac compilation of single file[m
[32m+[m[32m      -pre-compile-test:         called before javac compilation of JUnit tests[m
[32m+[m[32m      -post-compile-test:        called after javac compilation of JUnit tests[m
[32m+[m[32m      -pre-compile-test-single:  called before javac compilation of single JUnit test[m
[32m+[m[32m      -post-compile-test-single: called after javac compilation of single JUunit test[m
[32m+[m[32m      -pre-jar:                  called before JAR building[m
[32m+[m[32m      -post-jar:                 called after JAR building[m
[32m+[m[32m      -post-clean:               called after cleaning build products[m
[32m+[m
[32m+[m[32m    (Targets beginning with '-' are not intended to be called on their own.)[m
[32m+[m
[32m+[m[32m    Example of inserting an obfuscator after compilation could look like this:[m
[32m+[m
[32m+[m[32m        <target name="-post-compile">[m
[32m+[m[32m            <obfuscate>[m
[32m+[m[32m                <fileset dir="${build.classes.dir}"/>[m
[32m+[m[32m            </obfuscate>[m
[32m+[m[32m        </target>[m
[32m+[m
[32m+[m[32m    For list of available properties check the imported[m[41m [m
[32m+[m[32m    nbproject/build-impl.xml file.[m[41m [m
[32m+[m
[32m+[m
[32m+[m[32m    Another way to customize the build is by overriding existing main targets.[m
[32m+[m[32m    The targets of interest are:[m[41m [m
[32m+[m
[32m+[m[32m      -init-macrodef-javac:     defines macro for javac compilation[m
[32m+[m[32m      -init-macrodef-junit:     defines macro for junit execution[m
[32m+[m[32m      -init-macrodef-debug:     defines macro for class debugging[m
[32m+[m[32m      -init-macrodef-java:      defines macro for class execution[m
[32m+[m[32m      -do-jar:                  JAR building[m
[32m+[m[32m      run:                      execution of project[m[41m [m
[32m+[m[32m      -javadoc-build:           Javadoc generation[m
[32m+[m[32m      test-report:              JUnit report generation[m
[32m+[m
[32m+[m[32m    An example of overriding the target for project execution could look like this:[m
[32m+[m
[32m+[m[32m        <target name="run" depends="solitaire-impl.jar">[m
[32m+[m[32m            <exec dir="bin" executable="launcher.exe">[m
[32m+[m[32m                <arg file="${dist.jar}"/>[m
[32m+[m[32m            </exec>[m
[32m+[m[32m        </target>[m
[32m+[m
[32m+[m[32m    Notice that the overridden target depends on the jar target and not only on[m[41m [m
[32m+[m[32m    the compile target as the regular run target does. Again, for a list of available[m[41m [m
[32m+[m[32m    properties which you can use, check the target you are overriding in the[m
[32m+[m[32m    nbproject/build-impl.xml file.[m[41m [m
[32m+[m
[32m+[m[32m    -->[m
[32m+[m[32m</project>[m
[1mdiff --git a/images/101.gif b/images/101.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..7989f8c[m
Binary files /dev/null and b/images/101.gif differ
[1mdiff --git a/images/102.gif b/images/102.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..e2928e5[m
Binary files /dev/null and b/images/102.gif differ
[1mdiff --git a/images/103.gif b/images/103.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..bb13a36[m
Binary files /dev/null and b/images/103.gif differ
[1mdiff --git a/images/104.gif b/images/104.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..8ea434c[m
Binary files /dev/null and b/images/104.gif differ
[1mdiff --git a/images/105.gif b/images/105.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..6e29006[m
Binary files /dev/null and b/images/105.gif differ
[1mdiff --git a/images/106.gif b/images/106.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..fc39037[m
Binary files /dev/null and b/images/106.gif differ
[1mdiff --git a/images/107.gif b/images/107.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..993eefc[m
Binary files /dev/null and b/images/107.gif differ
[1mdiff --git a/images/108.gif b/images/108.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..0623339[m
Binary files /dev/null and b/images/108.gif differ
[1mdiff --git a/images/109.gif b/images/109.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..988a6ad[m
Binary files /dev/null and b/images/109.gif differ
[1mdiff --git a/images/110.gif b/images/110.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..7584040[m
Binary files /dev/null and b/images/110.gif differ
[1mdiff --git a/images/111.gif b/images/111.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..c6a51ef[m
Binary files /dev/null and b/images/111.gif differ
[1mdiff --git a/images/112.gif b/images/112.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..4bfb952[m
Binary files /dev/null and b/images/112.gif differ
[1mdiff --git a/images/113.gif b/images/113.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..5e63583[m
Binary files /dev/null and b/images/113.gif differ
[1mdiff --git a/images/201.gif b/images/201.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..4fb94d4[m
Binary files /dev/null and b/images/201.gif differ
[1mdiff --git a/images/202.gif b/images/202.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..0f1565a[m
Binary files /dev/null and b/images/202.gif differ
[1mdiff --git a/images/203.gif b/images/203.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..6e327d5[m
Binary files /dev/null and b/images/203.gif differ
[1mdiff --git a/images/204.gif b/images/204.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..2966f12[m
Binary files /dev/null and b/images/204.gif differ
[1mdiff --git a/images/205.gif b/images/205.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..b049f4c[m
Binary files /dev/null and b/images/205.gif differ
[1mdiff --git a/images/206.gif b/images/206.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..66a6cfc[m
Binary files /dev/null and b/images/206.gif differ
[1mdiff --git a/images/207.gif b/images/207.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..e093180[m
Binary files /dev/null and b/images/207.gif differ
[1mdiff --git a/images/208.gif b/images/208.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..a7248fe[m
Binary files /dev/null and b/images/208.gif differ
[1mdiff --git a/images/209.gif b/images/209.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..7c0d075[m
Binary files /dev/null and b/images/209.gif differ
[1mdiff --git a/images/210.gif b/images/210.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..fe252e3[m
Binary files /dev/null and b/images/210.gif differ
[1mdiff --git a/images/211.gif b/images/211.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..ff04634[m
Binary files /dev/null and b/images/211.gif differ
[1mdiff --git a/images/212.gif b/images/212.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..272b183[m
Binary files /dev/null and b/images/212.gif differ
[1mdiff --git a/images/213.gif b/images/213.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..e5ed20c[m
Binary files /dev/null and b/images/213.gif differ
[1mdiff --git a/images/301.gif b/images/301.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..6a4b271[m
Binary files /dev/null and b/images/301.gif differ
[1mdiff --git a/images/302.gif b/images/302.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..671093f[m
Binary files /dev/null and b/images/302.gif differ
[1mdiff --git a/images/303.gif b/images/303.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..78b5911[m
Binary files /dev/null and b/images/303.gif differ
[1mdiff --git a/images/304.gif b/images/304.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..dcf41e7[m
Binary files /dev/null and b/images/304.gif differ
[1mdiff --git a/images/305.gif b/images/305.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..14d8b2e[m
Binary files /dev/null and b/images/305.gif differ
[1mdiff --git a/images/306.gif b/images/306.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..a9f2d2a[m
Binary files /dev/null and b/images/306.gif differ
[1mdiff --git a/images/307.gif b/images/307.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..2316aff[m
Binary files /dev/null and b/images/307.gif differ
[1mdiff --git a/images/308.gif b/images/308.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..d738908[m
Binary files /dev/null and b/images/308.gif differ
[1mdiff --git a/images/309.gif b/images/309.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..fb9701d[m
Binary files /dev/null and b/images/309.gif differ
[1mdiff --git a/images/310.gif b/images/310.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..f5503c9[m
Binary files /dev/null and b/images/310.gif differ
[1mdiff --git a/images/311.gif b/images/311.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..a84fd90[m
Binary files /dev/null and b/images/311.gif differ
[1mdiff --git a/images/312.gif b/images/312.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..205e53e[m
Binary files /dev/null and b/images/312.gif differ
[1mdiff --git a/images/313.gif b/images/313.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..9e55e4c[m
Binary files /dev/null and b/images/313.gif differ
[1mdiff --git a/images/401.gif b/images/401.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..bb539f4[m
Binary files /dev/null and b/images/401.gif differ
[1mdiff --git a/images/402.gif b/images/402.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..9e44cb4[m
Binary files /dev/null and b/images/402.gif differ
[1mdiff --git a/images/403.gif b/images/403.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..9b7b9b8[m
Binary files /dev/null and b/images/403.gif differ
[1mdiff --git a/images/404.gif b/images/404.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..ee6e973[m
Binary files /dev/null and b/images/404.gif differ
[1mdiff --git a/images/405.gif b/images/405.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..2d5ac03[m
Binary files /dev/null and b/images/405.gif differ
[1mdiff --git a/images/406.gif b/images/406.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..c969464[m
Binary files /dev/null and b/images/406.gif differ
[1mdiff --git a/images/407.gif b/images/407.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..982b37f[m
Binary files /dev/null and b/images/407.gif differ
[1mdiff --git a/images/408.gif b/images/408.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..bf55815[m
Binary files /dev/null and b/images/408.gif differ
[1mdiff --git a/images/409.gif b/images/409.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..670f1cb[m
Binary files /dev/null and b/images/409.gif differ
[1mdiff --git a/images/410.gif b/images/410.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..745af7b[m
Binary files /dev/null and b/images/410.gif differ
[1mdiff --git a/images/411.gif b/images/411.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..816f0a2[m
Binary files /dev/null and b/images/411.gif differ
[1mdiff --git a/images/412.gif b/images/412.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..aac6293[m
Binary files /dev/null and b/images/412.gif differ
[1mdiff --git a/images/413.gif b/images/413.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..925cfb4[m
Binary files /dev/null and b/images/413.gif differ
[1mdiff --git a/images/B-Joker.png b/images/B-Joker.png[m
[1mnew file mode 100644[m
[1mindex 0000000..27895bc[m
Binary files /dev/null and b/images/B-Joker.png differ
[1mdiff --git a/images/R-Joker.png b/images/R-Joker.png[m
[1mnew file mode 100644[m
[1mindex 0000000..b1a887d[m
Binary files /dev/null and b/images/R-Joker.png differ
[1mdiff --git a/images/Summit.jpg b/images/Summit.jpg[m
[1mnew file mode 100644[m
[1mindex 0000000..8ee00dc[m
Binary files /dev/null and b/images/Summit.jpg differ
[1mdiff --git a/images/back.png b/images/back.png[m
[1mnew file mode 100644[m
[1mindex 0000000..1b2f3e4[m
Binary files /dev/null and b/images/back.png differ
[1mdiff --git a/images/background.jpg b/images/background.jpg[m
[1mnew file mode 100644[m
[1mindex 0000000..0e45af7[m
Binary files /dev/null and b/images/background.jpg differ
[1mdiff --git a/images/blank.gif b/images/blank.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..c624b5e[m
Binary files /dev/null and b/images/blank.gif differ
[1mdiff --git a/images/empty.gif b/images/empty.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..4ac6341[m
Binary files /dev/null and b/images/empty.gif differ
[1mdiff --git a/images/held.gif b/images/held.gif[m
[1mnew file mode 100644[m
[1mindex 0000000..26bac6a[m
Binary files /dev/null and b/images/held.gif differ
[1mdiff --git a/images/noimg.jpg b/images/noimg.jpg[m
[1mnew file mode 100644[m
[1mindex 0000000..8c1a57c[m
Binary files /dev/null and b/images/noimg.jpg differ
[1mdiff --git a/images/summit.png b/images/summit.png[m
[1mnew file mode 100644[m
[1mindex 0000000..525a82d[m
Binary files /dev/null and b/images/summit.png differ
[1mdiff --git a/images/table1.jpg b/images/table1.jpg[m
[1mnew file mode 100644[m
[1mindex 0000000..4a29bf6[m
Binary files /dev/null and b/images/table1.jpg differ
[1mdiff --git a/manifest.mf b/manifest.mf[m
[1mnew file mode 100644[m
[1mindex 0000000..328e8e5[m
[1m--- /dev/null[m
[1m+++ b/manifest.mf[m
[36m@@ -0,0 +1,3 @@[m
[32m+[m[32mManifest-Version: 1.0[m
[32m+[m[32mX-COMMENT: Main-Class will be added automatically by build[m
[32m+[m
[1mdiff --git a/nbproject/build-impl.xml b/nbproject/build-impl.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..e4175a7[m
[1m--- /dev/null[m
[1m+++ b/nbproject/build-impl.xml[m
[36m@@ -0,0 +1,1413 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<!--[m
[32m+[m[32m*** GENERATED FROM project.xml - DO NOT EDIT  ***[m
[32m+[m[32m***         EDIT ../build.xml INSTEAD         ***[m
[32m+[m
[32m+[m[32mFor the purpose of easier reading the script[m
[32m+[m[32mis divided into following sections:[m
[32m+[m
[32m+[m[32m  - initialization[m
[32m+[m[32m  - compilation[m
[32m+[m[32m  - jar[m
[32m+[m[32m  - execution[m
[32m+[m[32m  - debugging[m
[32m+[m[32m  - javadoc[m
[32m+[m[32m  - test compilation[m
[32m+[m[32m  - test execution[m
[32m+[m[32m  - test debugging[m
[32m+[m[32m  - applet[m
[32m+[m[32m  - cleanup[m
[32m+[m
[32m+[m[32m        -->[m
[32m+[m[32m<project xmlns:j2seproject1="http://www.netbeans.org/ns/j2se-project/1" xmlns:j2seproject3="http://www.netbeans.org/ns/j2se-project/3" xmlns:jaxrpc="http://www.netbeans.org/ns/j2se-project/jax-rpc" basedir=".." default="default" name="solitaire-impl">[m
[32m+[m[32m    <fail message="Please build using Ant 1.8.0 or higher.">[m
[32m+[m[32m        <condition>[m
[32m+[m[32m            <not>[m
[32m+[m[32m                <antversion atleast="1.8.0"/>[m
[32m+[m[32m            </not>[m
[32m+[m[32m        </condition>[m
[32m+[m[32m    </fail>[m
[32m+[m[32m    <target depends="test,jar,javadoc" description="Build and test whole project." name="default"/>[m
[32m+[m[32m    <!--[m[41m [m
[32m+[m[32m                ======================[m
[32m+[m[32m                INITIALIZATION SECTION[m[41m [m
[32m+[m[32m                ======================[m
[32m+[m[32m            -->[m
[32m+[m[32m    <target name="-pre-init">[m
[32m+[m[32m        <!-- Empty placeholder for easier customization. -->[m
[32m+[m[32m        <!-- You can override this target in the ../build.xml file. -->[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="-pre-init" name="-init-private">[m
[32m+[m[32m        <property file="nbproject/private/config.properties"/>[m
[32m+[m[32m        <property file="nbproject/private/configs/${config}.properties"/>[m
[32m+[m[32m        <property file="nbproject/private/private.properties"/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="-pre-init,-init-private" name="-init-user">[m
[32m+[m[32m        <property file="${user.properties.file}"/>[m
[32m+[m[32m        <!-- The two properties below are usually overridden -->[m
[32m+[m[32m        <!-- by the active platform. Just a fallback. -->[m
[32m+[m[32m        <property name="default.javac.source" value="1.4"/>[m
[32m+[m[32m        <property name="default.javac.target" value="1.4"/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="-pre-init,-init-private,-init-user" name="-init-project">[m
[32m+[m[32m        <property file="nbproject/configs/${config}.properties"/>[m
[32m+[m[32m        <property file="nbproject/project.properties"/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="-pre-init,-init-private,-init-user,-init-project,-init-macrodef-property" name="-do-init">[m
[32m+[m[32m        <property name="platform.java" value="${java.home}/bin/java"/>[m
[32m+[m[32m        <available file="${manifest.file}" property="manifest.available"/>[m
[32m+[m[32m        <condition property="splashscreen.available">[m
[32m+[m[32m            <and>[m
[32m+[m[32m                <not>[m
[32m+[m[32m                    <equals arg1="${application.splash}" arg2="" trim="true"/>[m
[32m+[m[32m                </not>[m
[32m+[m[32m                <available file="${application.splash}"/>[m
[32m+[m[32m            </and>[m
[32m+[m[32m        </condition>[m
[32m+[m[32m        <condition property="main.class.available">[m
[32m+[m[32m            <and>[m
[32m+[m[32m                <isset property="main.class"/>[m
[32m+[m[32m                <not>[m
[32m+[m[32m                    <equals arg1="${main.class}" arg2="" trim="true"/>[m
[32m+[m[32m                </not>[m
[32m+[m[32m            </and>[m
[32m+[m[32m        </condition>[m
[32m+[m[32m        <condition property="profile.available">[m
[32m+[m[32m            <and>[m
[32m+[m[32m                <isset property="javac.profile"/>[m
[32m+[m[32m                <length length="0" string="${javac.profile}" when="greater"/>[m
[32m+[m[32m                <matches pattern="1\.[89](\..*)?" string="${javac.source}"/>[m
[32m+[m[32m            </and>[m
[32m+[m[32m        </condition>[m
[32m+[m[32m        <condition property="do.archive">[m
[32m+[m[32m            <or>[m
[32m+[m[32m                <not>[m
[32m+[m[32m                    <istrue value="${jar.archive.disabled}"/>[m
[32m+[m[32m                </not>[m
[32m+[m[32m                <istrue value="${not.archive.disabled}"/>[m
[32m+[m[32m            </or>[m
[32m+[m[32m        </condition>[m
[32m+[m[32m        <condition property="do.mkdist">[m
[32m+[m[32m            <and>[m
[32m+[m[32m                <isset property="do.archive"/>[m
[32m+[m[32m                <isset property="libs.CopyLibs.classpath"/>[m
[32m+[m[32m                <not>[m
[32m+[m[32m                    <istrue value="${mkdist.disabled}"/>[m
[32m+[m[32m                </not>[m
[32m+[m[32m            </and>[m
[32m+[m[32m        </condition>[m
[32m+[m[32m        <condition property="do.archive+manifest.available">[m
[32m+[m[32m            <and>[m
[32m+[m[32m                <isset property="manifest.available"/>[m
[32m+[m[32m                <istrue value="${do.archive}"/>[m
[32m+[m[32m            </and>[m
[32m+[m[32m        </condition>[m
[32m+[m[32m        <condition property="do.archive+main.class.available">[m
[32m+[m[32m            <and>[m
[32m+[m[32m                <isset property="main.class.available"/>[m
[32m+[m[32m                <istrue value="${do.archive}"/>[m
[32m+[m[32m            </and>[m
[32m+[m[32m        </condition>[m
[32m+[m[32m        <condition property="do.archive+splashscreen.available">[m
[32m+[m[32m            <and>[m
[32m+[m[32m                <isset property="splashscreen.available"/>[m
[32m+[m[32m                <istrue value="${do.archive}"/>[m
[32m+[m[32m            </and>[m
[32m+[m[32m        </condition>[m
[32m+[m[32m        <condition property="do.archive+profile.available">[m
[32m+[m[32m            <and>[m
[32m+[m[32m                <isset property="profile.available"/>[m
[32m+[m[32m                <istrue value="${do.archive}"/>[m
[32m+[m[32m            </and>[m
[32m+[m[32m        </condition>[m
[32m+[m[32m        <condition property="have.tests">[m
[32m+[m[32m            <or>[m
[32m+[m[32m                <available file="${test.src.dir}"/>[m
[32m+[m[32m            </or>[m
[32m+[m[32m        </condition>[m
[32m+[m[32m        <condition property="have.sources">[m
[32m+[m[32m            <or>[m
[32m+[m[32m                <available file="${src.dir}"/>[m
[32m+[m[32m            </or>[m
[32m+[m[32m        </condition>[m
[32m+[m[32m        <condition property="netbeans.home+have.tests">[m
[32m+[m[32m            <and>[m
[32m+[m[32m                <isset property="netbeans.home"/>[m
[32m+[m[32m                <isset property="have.tests"/>[m
[32m+[m[32m            </and>[m
[32m+[m[32m        </condition>[m
[32m+[m[32m        <condition property="no.javadoc.preview">[m
[32m+[m[32m            <and>[m
[32m+[m[32m                <isset property="javadoc.preview"/>[m
[32m+[m[32m                <isfalse value="${javadoc.preview}"/>[m
[32m+[m[32m            </and>[m
[32m+[m[32m        </condition>[m
[32m+[m[32m        <property name="run.jvmargs" value=""/>[m
[32m+[m[32m        <property name="run.jvmargs.ide" value=""/>[m
[32m+[m[32m        <property name="javac.compilerargs" value=""/>[m
[32m+[m[32m        <property name="work.dir" value="${basedir}"/>[m
[32m+[m[32m        <condition property="no.deps">[m
[32m+[m[32m            <and>[m
[32m+[m[32m                <istrue value="${no.dependencies}"/>[m
[32m+[m[32m            </and>[m
[32m+[m[32m        </condition>[m
[32m+[m[32m        <property name="javac.debug" value="true"/>[m
[32m+[m[32m        <property name="javadoc.preview" value="true"/>[m
[32m+[m[32m        <property name="application.args" value=""/>[m
[32m+[m[32m        <property name="source.encoding" value="${file.encoding}"/>[m
[32m+[m[32m        <property name="runtime.encoding" value="${source.encoding}"/>[m
[32m+[m[32m        <condition property="javadoc.encoding.used" value="${javadoc.encoding}">[m
[32m+[m[32m            <and>[m
[32m+[m[32m                <isset property="javadoc.encoding"/>[m
[32m+[m[32m                <not>[m
[32m+[m[32m                    <equals arg1="${javadoc.encoding}" arg2=""/>[m
[32m+[m[32m                </not>[m
[32m+[m[32m            </and>[m
[32m+[m[32m        </condition>[m
[32m+[m[32m        <property name="javadoc.encoding.used" value="${source.encoding}"/>[m
[32m+[m[32m        <property name="includes" value="**"/>[m
[32m+[m[32m        <property name="excludes" value=""/>[m
[32m+[m[32m        <property name="do.depend" value="false"/>[m
[32m+[m[32m        <condition property="do.depend.true">[m
[32m+[m[32m            <istrue value="${do.depend}"/>[m
[32m+[m[32m        </condition>[m
[32m+[m[32m        <path id="endorsed.classpath.path" path="${endorsed.classpath}"/>[m
[32m+[m[32m        <condition else="" property="endorsed.classpath.cmd.line.arg" value="-Xbootclasspath/p:'${toString:endorsed.classpath.path}'">[m
[32m+[m[32m            <and>[m
[32m+[m[32m                <isset property="endorsed.classpath"/>[m
[32m+[m[32m                <not>[m
[32m+[m[32m                    <equals arg1="${endorsed.classpath}" arg2="" trim="true"/>[m
[32m+[m[32m                </not>[m
[32m+[m[32m            </and>[m
[32m+[m[32m        </condition>[m
[32m+[m[32m        <condition else="" property="javac.profile.cmd.line.arg" value="-profile ${javac.profile}">[m
[32m+[m[32m            <isset property="profile.available"/>[m
[32m+[m[32m        </condition>[m
[32m+[m[32m        <condition else="false" property="jdkBug6558476">[m
[32m+[m[32m            <and>[m
[32m+[m[32m                <matches pattern="1\.[56]" string="${java.specification.version}"/>[m
[32m+[m[32m                <not>[m
[32m+[m[32m                    <os family="unix"/>[m
[32m+[m[32m                </not>[m
[32m+[m[32m            </and>[m
[32m+[m[32m        </condition>[m
[32m+[m[32m        <property name="javac.fork" value="${jdkBug6558476}"/>[m
[32m+[m[32m        <property name="jar.index" value="false"/>[m
[32m+[m[32m        <property name="jar.index.metainf" value="${jar.index}"/>[m
[32m+[m[32m        <property name="copylibs.rebase" value="true"/>[m
[32m+[m[32m        <available file="${meta.inf.dir}/persistence.xml" property="has.persistence.xml"/>[m
[32m+[m[32m        <condition property="junit.available">[m
[32m+[m[32m            <or>[m
[32m+[m[32m                <available classname="org.junit.Test" classpath="${run.test.classpath}"/>[m
[32m+[m[32m                <available classname="junit.framework.Test" classpath="${run.test.classpath}"/>[m
[32m+[m[32m            </or>[m
[32m+[m[32m        </condition>[m
[32m+[m[32m        <condition property="testng.available">[m
[32m+[m[32m            <available classname="org.testng.annotations.Test" classpath="${run.test.classpath}"/>[m
[32m+[m[32m        </condition>[m
[32m+[m[32m        <condition property="junit+testng.available">[m
[32m+[m[32m            <and>[m
[32m+[m[32m                <istrue value="${junit.available}"/>[m
[32m+[m[32m                <istrue value="${testng.available}"/>[m
[32m+[m[32m            </and>[m
[32m+[m[32m        </condition>[m
[32m+[m[32m        <condition else="testng" property="testng.mode" value="mixed">[m
[32m+[m[32m            <istrue value="${junit+testng.available}"/>[m
[32m+[m[32m        </condition>[m
[32m+[m[32m        <condition else="" property="testng.debug.mode" value="-mixed">[m
[32m+[m[32m            <istrue value="${junit+testng.available}"/>[m
[32m+[m[32m        </condition>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target name="-post-init">[m
[32m+[m[32m        <!-- Empty placeholder for easier customization. -->[m
[32m+[m[32m        <!-- You can override this target in the ../build.xml file. -->[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="-pre-init,-init-private,-init-user,-init-project,-do-init" name="-init-check">[m
[32m+[m[32m        <fail unless="src.dir">Must set src.dir</fail>[m
[32m+[m[32m        <fail unless="test.src.dir">Must set test.src.dir</fail>[m
[32m+[m[32m        <fail unless="build.dir">Must set build.dir</fail>[m
[32m+[m[32m        <fail unless="dist.dir">Must set dist.dir</fail>[m
[32m+[m[32m        <fail unless="build.classes.dir">Must set build.classes.dir</fail>[m
[32m+[m[32m        <fail unless="dist.javadoc.dir">Must set dist.javadoc.dir</fail>[m
[32m+[m[32m        <fail unless="build.test.classes.dir">Must set build.test.classes.dir</fail>[m
[32m+[m[32m        <fail unless="build.test.results.dir">Must set build.test.results.dir</fail>[m
[32m+[m[32m        <fail unless="build.classes.excludes">Must set build.classes.excludes</fail>[m
[32m+[m[32m        <fail unless="dist.jar">Must set dist.jar</fail>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target name="-init-macrodef-property">[m
[32m+[m[32m        <macrodef name="property" uri="http://www.netbeans.org/ns/j2se-project/1">[m
[32m+[m[32m            <attribute name="name"/>[m
[32m+[m[32m            <attribute name="value"/>[m
[32m+[m[32m            <sequential>[m
[32m+[m[32m                <property name="@{name}" value="${@{value}}"/>[m
[32m+[m[32m            </sequential>[m
[32m+[m[32m        </macrodef>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="-init-ap-cmdline-properties" if="ap.supported.internal" name="-init-macrodef-javac-with-processors">[m
[32m+[m[32m        <macrodef name="javac" uri="http://www.netbeans.org/ns/j2se-project/3">[m
[32m+[m[32m            <attribute default="${src.dir}" name="srcdir"/>[m
[32m+[m[32m            <attribute default="${build.classes.dir}" name="destdir"/>[m
[32m+[m[32m            <attribute default="${javac.classpath}" name="classpath"/>[m
[32m+[m[32m            <attribute default="${javac.processorpath}" name="processorpath"/>[m
[32m+[m[32m            <attribute default="${build.generated.sources.dir}/ap-source-output" name="apgeneratedsrcdir"/>[m
[32m+[m[32m            <attribute default="${includes}" name="includes"/>[m
[32m+[m[32m            <attribute default="${excludes}" name="excludes"/>[m
[32m+[m[32m            <attribute default="${javac.debug}" name="debug"/>[m
[32m+[m[32m            <attribute default="${empty.dir}" name="sourcepath"/>[m
[32m+[m[32m            <attribute default="${empty.dir}" name="gensrcdir"/>[m
[32m+[m[32m            <element name="customize" optional="true"/>[m
[32m+[m[32m            <sequential>[m
[32m+[m[32m                <property location="${build.dir}/empty" name="empty.dir"/>[m
[32m+[m[32m                <mkdir dir="${empty.dir}"/>[m
[32m+[m[32m                <mkdir dir="@{apgeneratedsrcdir}"/>[m
[32m+[m[32m                <javac debug="@{debug}" deprecation="${javac.deprecation}" destdir="@{destdir}" encoding="${source.encoding}" excludes="@{excludes}" fork="${javac.fork}" includeantruntime="false" includes="@{includes}" source="${javac.source}" sourcepath="@{sourcepath}" srcdir="@{srcdir}" target="${javac.target}" tempdir="${java.io.tmpdir}">[m
[32m+[m[32m                    <src>[m
[32m+[m[32m                        <dirset dir="@{gensrcdir}" erroronmissingdir="false">[m
[32m+[m[32m                            <include name="*"/>[m
[32m+[m[32m                        </dirset>[m
[32m+[m[32m                    </src>[m
[32m+[m[32m                    <classpath>[m
[32m+[m[32m                        <path path="@{classpath}"/>[m
[32m+[m[32m                    </classpath>[m
[32m+[m[32m                    <compilerarg line="${endorsed.classpath.cmd.line.arg}"/>[m
[32m+[m[32m                    <compilerarg line="${javac.profile.cmd.line.arg}"/>[m
[32m+[m[32m                    <compilerarg line="${javac.compilerargs}"/>[m
[32m+[m[32m                    <compilerarg value="-processorpath"/>[m
[32m+[m[32m                    <compilerarg path="@{processorpath}:${empty.dir}"/>[m
[32m+[m[32m                    <compilerarg line="${ap.processors.internal}"/>[m
[32m+[m[32m                    <compilerarg line="${annotation.processing.processor.options}"/>[m
[32m+[m[32m                    <compilerarg value="-s"/>[m
[32m+[m[32m                    <compilerarg path="@{apgeneratedsrcdir}"/>[m
[32m+[m[32m                    <compilerarg line="${ap.proc.none.internal}"/>[m
[32m+[m[32m                    <customize/>[m
[32m+[m[32m                </javac>[m
[32m+[m[32m            </sequential>[m
[32m+[m[32m        </macrodef>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="-init-ap-cmdline-properties" name="-init-macrodef-javac-without-processors" unless="ap.supported.internal">[m
[32m+[m[32m        <macrodef name="javac" uri="http://www.netbeans.org/ns/j2se-project/3">[m
[32m+[m[32m            <attribute default="${src.dir}" name="srcdir"/>[m
[32m+[m[32m            <attribute default="${build.classes.dir}" name="destdir"/>[m
[32m+[m[32m            <attribute default="${javac.classpath}" name="classpath"/>[m
[32m+[m[32m            <attribute default="${javac.processorpath}" name="processorpath"/>[m
[32m+[m[32m            <attribute default="${build.generated.sources.dir}/ap-source-output" name="apgeneratedsrcdir"/>[m
[32m+[m[32m            <attribute default="${includes}" name="includes"/>[m
[32m+[m[32m            <attribute default="${excludes}" name="excludes"/>[m
[32m+[m[32m            <attribute default="${javac.debug}" name="debug"/>[m
[32m+[m[32m            <attribute default="${empty.dir}" name="sourcepath"/>[m
[32m+[m[32m            <attribute default="${empty.dir}" name="gensrcdir"/>[m
[32m+[m[32m            <element name="customize" optional="true"/>[m
[32m+[m[32m            <sequential>[m
[32m+[m[32m                <property location="${build.dir}/empty" name="empty.dir"/>[m
[32m+[m[32m                <mkdir dir="${empty.dir}"/>[m
[32m+[m[32m                <javac debug="@{debug}" deprecation="${javac.deprecation}" destdir="@{destdir}" encoding="${source.encoding}" excludes="@{excludes}" fork="${javac.fork}" includeantruntime="false" includes="@{includes}" source="${javac.source}" sourcepath="@{sourcepath}" srcdir="@{srcdir}" target="${javac.target}" tempdir="${java.io.tmpdir}">[m
[32m+[m[32m                    <src>[m
[32m+[m[32m                        <dirset dir="@{gensrcdir}" erroronmissingdir="false">[m
[32m+[m[32m                            <include name="*"/>[m
[32m+[m[32m                        </dirset>[m
[32m+[m[32m                    </src>[m
[32m+[m[32m                    <classpath>[m
[32m+[m[32m                        <path path="@{classpath}"/>[m
[32m+[m[32m                    </classpath>[m
[32m+[m[32m                    <compilerarg line="${endorsed.classpath.cmd.line.arg}"/>[m
[32m+[m[32m                    <compilerarg line="${javac.profile.cmd.line.arg}"/>[m
[32m+[m[32m                    <compilerarg line="${javac.compilerargs}"/>[m
[32m+[m[32m                    <customize/>[m
[32m+[m[32m                </javac>[m
[32m+[m[32m            </sequential>[m
[32m+[m[32m        </macrodef>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="-init-macrodef-javac-with-processors,-init-macrodef-javac-without-processors" name="-init-macrodef-javac">[m
[32m+[m[32m        <macrodef name="depend" uri="http://www.netbeans.org/ns/j2se-project/3">[m
[32m+[m[32m            <attribute default="${src.dir}" name="srcdir"/>[m
[32m+[m[32m            <attribute default="${build.classes.dir}" name="destdir"/>[m
[32m+[m[32m            <attribute default="${javac.classpath}" name="classpath"/>[m
[32m+[m[32m            <sequential>[m
[32m+[m[32m                <depend cache="${build.dir}/depcache" destdir="@{destdir}" excludes="${excludes}" includes="${includes}" srcdir="@{srcdir}">[m
[32m+[m[32m                    <classpath>[m
[32m+[m[32m                        <path path="@{classpath}"/>[m
[32m+[m[32m                    </classpath>[m
[32m+[m[32m                </depend>[m
[32m+[m[32m            </sequential>[m
[32m+[m[32m        </macrodef>[m
[32m+[m[32m        <macrodef name="force-recompile" uri="http://www.netbeans.org/ns/j2se-project/3">[m
[32m+[m[32m            <attribute default="${build.classes.dir}" name="destdir"/>[m
[32m+[m[32m            <sequential>[m
[32m+[m[32m                <fail unless="javac.includes">Must set javac.includes</fail>[m
[32m+[m[32m                <pathconvert pathsep="${line.separator}" property="javac.includes.binary">[m
[32m+[m[32m                    <path>[m
[32m+[m[32m                        <filelist dir="@{destdir}" files="${javac.includes}"/>[m
[32m+[m[32m                    </path>[m
[32m+[m[32m                    <globmapper from="*.java" to="*.class"/>[m
[32m+[m[32m                </pathconvert>[m
[32m+[m[32m                <tempfile deleteonexit="true" property="javac.includesfile.binary"/>[m
[32m+[m[32m                <echo file="${javac.includesfile.binary}" message="${javac.includes.binary}"/>[m
[32m+[m[32m                <delete>[m
[32m+[m[32m                    <files includesfile="${javac.includesfile.binary}"/>[m
[32m+[m[32m                </delete>[m
[32m+[m[32m                <delete>[m
[32m+[m[32m                    <fileset file="${javac.includesfile.binary}"/>[m
[32m+[m[32m                </delete>[m
[32m+[m[32m            </sequential>[m
[32m+[m[32m        </macrodef>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target if="${junit.available}" name="-init-macrodef-junit-init">[m
[32m+[m[32m        <condition else="false" property="nb.junit.batch" value="true">[m
[32m+[m[32m            <and>[m
[32m+[m[32m                <istrue value="${junit.available}"/>[m
[32m+[m[32m                <not>[m
[32m+[m[32m                    <isset property="test.method"/>[m
[32m+[m[32m                </not>[m
[32m+[m[32m            </and>[m
[32m+[m[32m        </condition>[m
[32m+[m[32m        <condition else="false" property="nb.junit.single" value="true">[m
[32m+[m[32m            <and>[m
[32m+[m[32m                <istrue value="${junit.available}"/>[m
[32m+[m[32m                <isset property="test.method"/>[m
[32m+[m[32m            </and>[m
[32m+[m[32m        </condition>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target name="-init-test-properties">[m
[32m+[m[32m        <property name="test.binaryincludes" value="&lt;nothing&gt;"/>[m
[32m+[m[32m        <property name="test.binarytestincludes" value=""/>[m
[32m+[m[32m        <property name="test.binaryexcludes" value=""/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target if="${nb.junit.single}" name="-init-macrodef-junit-single" unless="${nb.junit.batch}">[m
[32m+[m[32m        <macrodef name="junit" uri="http://www.netbeans.org/ns/j2se-project/3">[m
[32m+[m[32m            <attribute default="${includes}" name="includes"/>[m
[32m+[m[32m            <attribute default="${excludes}" name="excludes"/>[m
[32m+[m[32m            <attribute default="**" name="testincludes"/>[m
[32m+[m[32m            <attribute default="" name="testmethods"/>[m
[32m+[m[32m            <element name="customize" optional="true"/>[m
[32m+[m[32m            <sequential>[m
[32m+[m[32m                <property name="junit.forkmode" value="perTest"/>[m
[32m+[m[32m                <junit dir="${work.dir}" errorproperty="tests.failed" failureproperty="tests.failed" fork="true" forkmode="${junit.forkmode}" showoutput="true" tempdir="${build.dir}">[m
[32m+[m[32m                    <test methods="@{testmethods}" name="@{testincludes}" todir="${build.test.results.dir}"/>[m
[32m+[m[32m                    <syspropertyset>[m
[32m+[m[32m                        <propertyref prefix="test-sys-prop."/>[m
[32m+[m[32m                        <mapper from="test-sys-prop.*" to="*" type="glob"/>[m
[32m+[m[32m                    </syspropertyset>[m
[32m+[m[32m                    <formatter type="brief" usefile="false"/>[m
[32m+[m[32m                    <formatter type="xml"/>[m
[32m+[m[32m                    <jvmarg value="-ea"/>[m
[32m+[m[32m                    <customize/>[m
[32m+[m[32m                </junit>[m
[32m+[m[32m            </sequential>[m
[32m+[m[32m        </macrodef>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="-init-test-properties" if="${nb.junit.batch}" name="-init-macrodef-junit-batch" unless="${nb.junit.single}">[m
[32m+[m[32m        <macrodef name="junit" uri="http://www.netbeans.org/ns/j2se-project/3">[m
[32m+[m[32m            <attribute default="${includes}" name="includes"/>[m
[32m+[m[32m            <attribute default="${excludes}" name="excludes"/>[m
[32m+[m[32m            <attribute default="**" name="testincludes"/>[m
[32m+[m[32m            <attribute default="" name="testmethods"/>[m
[32m+[m[32m            <element name="customize" optional="true"/>[m
[32m+[m[32m            <sequential>[m
[32m+[m[32m                <property name="junit.forkmode" value="perTest"/>[m
[32m+[m[32m                <junit dir="${work.dir}" errorproperty="tests.failed" failureproperty="tests.failed" fork="true" forkmode="${junit.forkmode}" showoutput="true" tempdir="${build.dir}">[m
[32m+[m[32m                    <batchtest todir="${build.test.results.dir}">[m
[32m+[m[32m                        <fileset dir="${test.src.dir}" excludes="@{excludes},${excludes}" includes="@{includes}">[m
[32m+[m[32m                            <filename name="@{testincludes}"/>[m
[32m+[m[32m                        </fileset>[m
[32m+[m[32m                        <fileset dir="${build.test.classes.dir}" excludes="@{excludes},${excludes},${test.binaryexcludes}" includes="${test.binaryincludes}">[m
[32m+[m[32m                            <filename name="${test.binarytestincludes}"/>[m
[32m+[m[32m                        </fileset>[m
[32m+[m[32m                    </batchtest>[m
[32m+[m[32m                    <syspropertyset>[m
[32m+[m[32m                        <propertyref prefix="test-sys-prop."/>[m
[32m+[m[32m                        <mapper from="test-sys-prop.*" to="*" type="glob"/>[m
[32m+[m[32m                    </syspropertyset>[m
[32m+[m[32m                    <formatter type="brief" usefile="false"/>[m
[32m+[m[32m                    <formatter type="xml"/>[m
[32m+[m[32m                    <jvmarg value="-ea"/>[m
[32m+[m[32m                    <customize/>[m
[32m+[m[32m                </junit>[m
[32m+[m[32m            </sequential>[m
[32m+[m[32m        </macrodef>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="-init-macrodef-junit-init,-init-macrodef-junit-single, -init-macrodef-junit-batch" if="${junit.available}" name="-init-macrodef-junit"/>[m
[32m+[m[32m    <target if="${testng.available}" name="-init-macrodef-testng">[m
[32m+[m[32m        <macrodef name="testng" uri="http://www.netbeans.org/ns/j2se-project/3">[m
[32m+[m[32m            <attribute default="${includes}" name="includes"/>[m
[32m+[m[32m            <attribute default="${excludes}" name="excludes"/>[m
[32m+[m[32m            <attribute default="**" name="testincludes"/>[m
[32m+[m[32m            <attribute default="" name="testmethods"/>[m
[32m+[m[32m            <element name="customize" optional="true"/>[m
[32m+[m[32m            <sequential>[m
[32m+[m[32m                <condition else="" property="testng.methods.arg" value="@{testincludes}.@{testmethods}">[m
[32m+[m[32m                    <isset property="test.method"/>[m
[32m+[m[32m                </condition>[m
[32m+[m[32m                <union id="test.set">[m
[32m+[m[32m                    <fileset dir="${test.src.dir}" excludes="@{excludes},**/*.xml,${excludes}" includes="@{includes}">[m
[32m+[m[32m                        <filename name="@{testincludes}"/>[m
[32m+[m[32m                    </fileset>[m
[32m+[m[32m                </union>[m
[32m+[m[32m                <taskdef classname="org.testng.TestNGAntTask" classpath="${run.test.classpath}" name="testng"/>[m
[32m+[m[32m                <testng classfilesetref="test.set" failureProperty="tests.failed" listeners="org.testng.reporters.VerboseReporter" methods="${testng.methods.arg}" mode="${testng.mode}" outputdir="${build.test.results.dir}" suitename="solitaire" testname="TestNG tests" workingDir="${work.dir}">[m
[32m+[m[32m                    <xmlfileset dir="${build.test.classes.dir}" includes="@{testincludes}"/>[m
[32m+[m[32m                    <propertyset>[m
[32m+[m[32m                        <propertyref prefix="test-sys-prop."/>[m
[32m+[m[32m                        <mapper from="test-sys-prop.*" to="*" type="glob"/>[m
[32m+[m[32m                    </propertyset>[m
[32m+[m[32m                    <customize/>[m
[32m+[m[32m                </testng>[m
[32m+[m[32m            </sequential>[m
[32m+[m[32m        </macrodef>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target name="-init-macrodef-test-impl">[m
[32m+[m[32m        <macrodef name="test-impl" uri="http://www.netbeans.org/ns/j2se-project/3">[m
[32m+[m[32m            <attribute default="${includes}" name="includes"/>[m
[32m+[m[32m            <attribute default="${excludes}" name="excludes"/>[m
[32m+[m[32m            <attribute default="**" name="testincludes"/>[m
[32m+[m[32m            <attribute default="" name="testmethods"/>[m
[32m+[m[32m            <element implicit="true" name="customize" optional="true"/>[m
[32m+[m[32m            <sequential>[m
[32m+[m[32m                <echo>No tests executed.</echo>[m
[32m+[m[32m            </sequential>[m
[32m+[m[32m        </macrodef>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="-init-macrodef-junit" if="${junit.available}" name="-init-macrodef-junit-impl">[m
[32m+[m[32m        <macrodef name="test-impl" uri="http://www.netbeans.org/ns/j2se-project/3">[m
[32m+[m[32m            <attribute default="${includes}" name="includes"/>[m
[32m+[m[32m            <attribute default="${excludes}" name="excludes"/>[m
[32m+[m[32m            <attribute default="**" name="testincludes"/>[m
[32m+[m[32m            <attribute default="" name="testmethods"/>[m
[32m+[m[32m            <element implicit="true" name="customize" optional="true"/>[m
[32m+[m[32m            <sequential>[m
[32m+[m[32m                <j2seproject3:junit excludes="@{excludes}" includes="@{includes}" testincludes="@{testincludes}" testmethods="@{testmethods}">[m
[32m+[m[32m                    <customize/>[m
[32m+[m[32m                </j2seproject3:junit>[m
[32m+[m[32m            </sequential>[m
[32m+[m[32m        </macrodef>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="-init-macrodef-testng" if="${testng.available}" name="-init-macrodef-testng-impl">[m
[32m+[m[32m        <macrodef name="test-impl" uri="http://www.netbeans.org/ns/j2se-project/3">[m
[32m+[m[32m            <attribute default="${includes}" name="includes"/>[m
[32m+[m[32m            <attribute default="${excludes}" name="excludes"/>[m
[32m+[m[32m            <attribute default="**" name="testincludes"/>[m
[32m+[m[32m            <attribute default="" name="testmethods"/>[m
[32m+[m[32m            <element implicit="true" name="customize" optional="true"/>[m
[32m+[m[32m            <sequential>[m
[32m+[m[32m                <j2seproject3:testng excludes="@{excludes}" includes="@{includes}" testincludes="@{testincludes}" testmethods="@{testmethods}">[m
[32m+[m[32m                    <customize/>[m
[32m+[m[32m                </j2seproject3:testng>[m
[32m+[m[32m            </sequential>[m
[32m+[m[32m        </macrodef>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="-init-macrodef-test-impl,-init-macrodef-junit-impl,-init-macrodef-testng-impl" name="-init-macrodef-test">[m
[32m+[m[32m        <macrodef name="test" uri="http://www.netbeans.org/ns/j2se-project/3">[m
[32m+[m[32m            <attribute default="${includes}" name="includes"/>[m
[32m+[m[32m            <attribute default="${excludes}" name="excludes"/>[m
[32m+[m[32m            <attribute default="**" name="testincludes"/>[m
[32m+[m[32m            <attribute default="" name="testmethods"/>[m
[32m+[m[32m            <sequential>[m
[32m+[m[32m                <j2seproject3:test-impl excludes="@{excludes}" includes="@{includes}" testincludes="@{testincludes}" testmethods="@{testmethods}">[m
[32m+[m[32m                    <customize>[m
[32m+[m[32m                        <classpath>[m
[32m+[m[32m                            <path path="${run.test.classpath}"/>[m
[32m+[m[32m                        </classpath>[m
[32m+[m[32m                        <jvmarg line="${endorsed.classpath.cmd.line.arg}"/>[m
[32m+[m[32m                        <jvmarg line="${run.jvmargs}"/>[m
[32m+[m[32m                        <jvmarg line="${run.jvmargs.ide}"/>[m
[32m+[m[32m                    </customize>[m
[32m+[m[32m                </j2seproject3:test-impl>[m
[32m+[m[32m            </sequential>[m
[32m+[m[32m        </macrodef>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target if="${junit.available}" name="-init-macrodef-junit-debug" unless="${nb.junit.batch}">[m
[32m+[m[32m        <macrodef name="junit-debug" uri="http://www.netbeans.org/ns/j2se-project/3">[m
[32m+[m[32m            <attribute default="${includes}" name="includes"/>[m
[32m+[m[32m            <attribute default="${excludes}" name="excludes"/>[m
[32m+[m[32m            <attribute default="**" name="testincludes"/>[m
[32m+[m[32m            <attribute default="" name="testmethods"/>[m
[32m+[m[32m            <element name="customize" optional="true"/>[m
[32m+[m[32m            <sequential>[m
[32m+[m[32m                <property name="junit.forkmode" value="perTest"/>[m
[32m+[m[32m                <junit dir="${work.dir}" errorproperty="tests.failed" failureproperty="tests.failed" fork="true" forkmode="${junit.forkmode}" showoutput="true" tempdir="${build.dir}">[m
[32m+[m[32m                    <test methods="@{testmethods}" name="@{testincludes}" todir="${build.test.results.dir}"/>[m
[32m+[m[32m                    <syspropertyset>[m
[32m+[m[32m                        <propertyref prefix="test-sys-prop."/>[m
[32m+[m[32m                        <mapper from="test-sys-prop.*" to="*" type="glob"/>[m
[32m+[m[32m                    </syspropertyset>[m
[32m+[m[32m                    <formatter type="brief" usefile="false"/>[m
[32m+[m[32m                    <formatter type="xml"/>[m
[32m+[m[32m                    <jvmarg value="-ea"/>[m
[32m+[m[32m                    <jvmarg line="${debug-args-line}"/>[m
[32m+[m[32m                    <jvmarg value="-Xrunjdwp:transport=${debug-transport},address=${jpda.address}"/>[m
[32m+[m[32m                    <customize/>[m
[32m+[m[32m                </junit>[m
[32m+[m[32m            </sequential>[m
[32m+[m[32m        </macrodef>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="-init-test-properties" if="${nb.junit.batch}" name="-init-macrodef-junit-debug-batch">[m
[32m+[m[32m        <macrodef name="junit-debug" uri="http://www.netbeans.org/ns/j2se-project/3">[m
[32m+[m[32m            <attribute default="${includes}" name="includes"/>[m
[32m+[m[32m            <attribute default="${excludes}" name="excludes"/>[m
[32m+[m[32m            <attribute default="**" name="testincludes"/>[m
[32m+[m[32m            <attribute default="" name="testmethods"/>[m
[32m+[m[32m            <element name="customize" optional="true"/>[m
[32m+[m[32m            <sequential>[m
[32m+[m[32m                <property name="junit.forkmode" value="perTest"/>[m
[32m+[m[32m                <junit dir="${work.dir}" errorproperty="tests.failed" failureproperty="tests.failed" fork="true" forkmode="${junit.forkmode}" showoutput="true" tempdir="${build.dir}">[m
[32m+[m[32m                    <batchtest todir="${build.test.results.dir}">[m
[32m+[m[32m                        <fileset dir="${test.src.dir}" excludes="@{excludes},${excludes}" includes="@{includes}">[m
[32m+[m[32m                            <filename name="@{testincludes}"/>[m
[32m+[m[32m                        </fileset>[m
[32m+[m[32m                        <fileset dir="${build.test.classes.dir}" excludes="@{excludes},${excludes},${test.binaryexcludes}" includes="${test.binaryincludes}">[m
[32m+[m[32m                            <filename name="${test.binarytestincludes}"/>[m
[32m+[m[32m                        </fileset>[m
[32m+[m[32m                    </batchtest>[m
[32m+[m[32m                    <syspropertyset>[m
[32m+[m[32m                        <propertyref prefix="test-sys-prop."/>[m
[32m+[m[32m                        <mapper from="test-sys-prop.*" to="*" type="glob"/>[m
[32m+[m[32m                    </syspropertyset>[m
[32m+[m[32m                    <formatter type="brief" usefile="false"/>[m
[32m+[m[32m                    <formatter type="xml"/>[m
[32m+[m[32m                    <jvmarg value="-ea"/>[m
[32m+[m[32m                    <jvmarg line="${debug-args-line}"/>[m
[32m+[m[32m                    <jvmarg value="-Xrunjdwp:transport=${debug-transport},address=${jpda.address}"/>[m
[32m+[m[32m                    <customize/>[m
[32m+[m[32m                </junit>[m
[32m+[m[32m            </sequential>[m
[32m+[m[32m        </macrodef>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="-init-macrodef-junit-debug,-init-macrodef-junit-debug-batch" if="${junit.available}" name="-init-macrodef-junit-debug-impl">[m
[32m+[m[32m        <macrodef name="test-debug-impl" uri="http://www.netbeans.org/ns/j2se-project/3">[m
[32m+[m[32m            <attribute default="${includes}" name="includes"/>[m
[32m+[m[32m            <attribute default="${excludes}" name="excludes"/>[m
[32m+[m[32m            <attribute default="**" name="testincludes"/>[m
[32m+[m[32m            <attribute default="" name="testmethods"/>[m
[32m+[m[32m            <element implicit="true" name="customize" optional="true"/>[m
[32m+[m[32m            <sequential>[m
[32m+[m[32m                <j2seproject3:junit-debug excludes="@{excludes}" includes="@{includes}" testincludes="@{testincludes}" testmethods="@{testmethods}">[m
[32m+[m[32m                    <customize/>[m
[32m+[m[32m                </j2seproject3:junit-debug>[m
[32m+[m[32m            </sequential>[m
[32m+[m[32m        </macrodef>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target if="${testng.available}" name="-init-macrodef-testng-debug">[m
[32m+[m[32m        <macrodef name="testng-debug" uri="http://www.netbeans.org/ns/j2se-project/3">[m
[32m+[m[32m            <attribute default="${main.class}" name="testClass"/>[m
[32m+[m[32m            <attribute default="" name="testMethod"/>[m
[32m+[m[32m            <element name="customize2" optional="true"/>[m
[32m+[m[32m            <sequential>[m
[32m+[m[32m                <condition else="-testclass @{testClass}" property="test.class.or.method" value="-methods @{testClass}.@{testMethod}">[m
[32m+[m[32m                    <isset property="test.method"/>[m
[32m+[m[32m                </condition>[m
[32m+[m[32m                <condition else="-suitename solitaire -testname @{testClass} ${test.class.or.method}" property="testng.cmd.args" value="@{testClass}">[m
[32m+[m[32m                    <matches pattern=".*\.xml" string="@{testClass}"/>[m
[32m+[m[32m                </condition>[m
[32m+[m[32m                <delete dir="${build.test.results.dir}" quiet="true"/>[m
[32m+[m[32m                <mkdir dir="${build.test.results.dir}"/>[m
[32m+[m[32m                <j2seproject3:debug classname="org.testng.TestNG" classpath="${debug.test.classpath}">[m
[32m+[m[32m                    <customize>[m
[32m+[m[32m                        <customize2/>[m
[32m+[m[32m                        <jvmarg value="-ea"/>[m
[32m+[m[32m                        <arg line="${testng.debug.mode}"/>[m
[32m+[m[32m                        <arg line="-d ${build.test.results.dir}"/>[m
[32m+[m[32m                        <arg line="-listener org.testng.reporters.VerboseReporter"/>[m
[32m+[m[32m                        <arg line="${testng.cmd.args}"/>[m
[32m+[m[32m                    </customize>[m
[32m+[m[32m                </j2seproject3:debug>[m
[32m+[m[32m            </sequential>[m
[32m+[m[32m        </macrodef>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="-init-macrodef-testng-debug" if="${testng.available}" name="-init-macrodef-testng-debug-impl">[m
[32m+[m[32m        <macrodef name="testng-debug-impl" uri="http://www.netbeans.org/ns/j2se-project/3">[m
[32m+[m[32m            <attribute default="${main.class}" name="testClass"/>[m
[32m+[m[32m            <attribute default="" name="testMethod"/>[m
[32m+[m[32m            <element implicit="true" name="customize2" optional="true"/>[m
[32m+[m[32m            <sequential>[m
[32m+[m[32m                <j2seproject3:testng-debug testClass="@{testClass}" testMethod="@{testMethod}">[m
[32m+[m[32m                    <customize2/>[m
[32m+[m[32m                </j2seproject3:testng-debug>[m
[32m+[m[32m            </sequential>[m
[32m+[m[32m        </macrodef>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="-init-macrodef-junit-debug-impl" if="${junit.available}" name="-init-macrodef-test-debug-junit">[m
[32m+[m[32m        <macrodef name="test-debug" uri="http://www.netbeans.org/ns/j2se-project/3">[m
[32m+[m[32m            <attribute default="${includes}" name="includes"/>[m
[32m+[m[32m            <attribute default="${excludes}" name="excludes"/>[m
[32m+[m[32m            <attribute default="**" name="testincludes"/>[m
[32m+[m[32m            <attribute default="" name="testmethods"/>[m
[32m+[m[32m            <attribute default="${main.class}" name="testClass"/>[m
[32m+[m[32m            <attribute default="" name="testMethod"/>[m
[32m+[m[32m            <sequential>[m
[32m+[m[32m                <j2seproject3:test-debug-impl excludes="@{excludes}" includes="@{includes}" testincludes="@{testincludes}" testmethods="@{testmethods}">[m
[32m+[m[32m                    <customize>[m
[32m+[m[32m                        <classpath>[m
[32m+[m[32m                            <path path="${run.test.classpath}"/>[m
[32m+[m[32m                        </classpath>[m
[32m+[m[32m                        <jvmarg line="${endorsed.classpath.cmd.line.arg}"/>[m
[32m+[m[32m                        <jvmarg line="${run.jvmargs}"/>[m
[32m+[m[32m                        <jvmarg line="${run.jvmargs.ide}"/>[m
[32m+[m[32m                    </customize>[m
[32m+[m[32m                </j2seproject3:test-debug-impl>[m
[32m+[m[32m            </sequential>[m
[32m+[m[32m        </macrodef>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="-init-macrodef-testng-debug-impl" if="${testng.available}" name="-init-macrodef-test-debug-testng">[m
[32m+[m[32m        <macrodef name="test-debug" uri="http://www.netbeans.org/ns/j2se-project/3">[m
[32m+[m[32m            <attribute default="${includes}" name="includes"/>[m
[32m+[m[32m            <attribute default="${excludes}" name="excludes"/>[m
[32m+[m[32m            <attribute default="**" name="testincludes"/>[m
[32m+[m[32m            <attribute default="" name="testmethods"/>[m
[32m+[m[32m            <attribute default="${main.class}" name="testClass"/>[m
[32m+[m[32m            <attribute default="" name="testMethod"/>[m
[32m+[m[32m            <sequential>[m
[32m+[m[32m                <j2seproject3:testng-debug-impl testClass="@{testClass}" testMethod="@{testMethod}">[m
[32m+[m[32m                    <customize2>[m
[32m+[m[32m                        <syspropertyset>[m
[32m+[m[32m                            <propertyref prefix="test-sys-prop."/>[m
[32m+[m[32m                            <mapper from="test-sys-prop.*" to="*" type="glob"/>[m
[32m+[m[32m                        </syspropertyset>[m
[32m+[m[32m                    </customize2>[m
[32m+[m[32m                </j2seproject3:testng-debug-impl>[m
[32m+[m[32m            </sequential>[m
[32m+[m[32m        </macrodef>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="-init-macrodef-test-debug-junit,-init-macrodef-test-debug-testng" name="-init-macrodef-test-debug"/>[m
[32m+[m[32m    <!--[m
[32m+[m[32m                pre NB7.2 profiling section; consider it deprecated[m
[32m+[m[32m            -->[m
[32m+[m[32m    <target depends="-profile-pre-init, init, -profile-post-init, -profile-init-macrodef-profile, -profile-init-check" if="profiler.info.jvmargs.agent" name="profile-init"/>[m
[32m+[m[32m    <target if="profiler.info.jvmargs.agent" name="-profile-pre-init">[m
[32m+[m[32m        <!-- Empty placeholder for easier customization. -->[m
[32m+[m[32m        <!-- You can override this target in the ../build.xml file. -->[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target if="profiler.info.jvmargs.agent" name="-profile-post-init">[m
[32m+[m[32m        <!-- Empty placeholder for easier customization. -->[m
[32m+[m[32m        <!-- You can override this target in the ../build.xml file. -->[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target if="profiler.info.jvmargs.agent" name="-profile-init-macrodef-profile">[m
[32m+[m[32m        <macrodef name="resolve">[m
[32m+[m[32m            <attribute name="name"/>[m
[32m+[m[32m            <attribute name="value"/>[m
[32m+[m[32m            <sequential>[m
[32m+[m[32m                <property name="@{name}" value="${env.@{value}}"/>[m
[32m+[m[32m            </sequential>[m
[32m+[m[32m        </macrodef>[m
[32m+[m[32m        <macrodef name="profile">[m
[32m+[m[32m            <attribute default="${main.class}" name="classname"/>[m
[32m+[m[32m            <element name="customize" optional="true"/>[m
[32m+[m[32m            <sequential>[m
[32m+[m[32m                <property environment="env"/>[m
[32m+[m[32m                <resolve name="profiler.current.path" value="${profiler.info.pathvar}"/>[m
[32m+[m[32m                <java classname="@{classname}" dir="${profiler.info.dir}" fork="true" jvm="${profiler.info.jvm}">[m
[32m+[m[32m                    <jvmarg line="${endorsed.classpath.cmd.line.arg}"/>[m
[32m+[m[32m                    <jvmarg value="${profiler.info.jvmargs.agent}"/>[m
[32m+[m[32m                    <jvmarg line="${profiler.info.jvmargs}"/>[m
[32m+[m[32m                    <env key="${profiler.info.pathvar}" path="${profiler.info.agentpath}:${profiler.current.path}"/>[m
[32m+[m[32m                    <arg line="${application.args}"/>[m
[32m+[m[32m                    <classpath>[m
[32m+[m[32m                        <path path="${run.classpath}"/>[m
[32m+[m[32m                    </classpath>[m
[32m+[m[32m                    <syspropertyset>[m
[32m+[m[32m                        <propertyref prefix="run-sys-prop."/>[m
[32m+[m[32m                        <mapper from="run-sys-prop.*" to="*" type="glob"/>[m
[32m+[m[32m                    </syspropertyset>[m
[32m+[m[32m                    <customize/>[m
[32m+[m[32m                </java>[m
[32m+[m[32m            </sequential>[m
[32m+[m[32m        </macrodef>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="-profile-pre-init, init, -profile-post-init, -profile-init-macrodef-profile" if="profiler.info.jvmargs.agent" name="-profile-init-check">[m
[32m+[m[32m        <fail unless="profiler.info.jvm">Must set JVM to use for profiling in profiler.info.jvm</fail>[m
[32m+[m[32m        <fail unless="profiler.info.jvmargs.agent">Must set profiler agent JVM arguments in profiler.info.jvmargs.agent</fail>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <!--[m
[32m+[m[32m                end of pre NB7.2 profiling section[m
[32m+[m[32m            -->[m
[32m+[m[32m    <target depends="-init-debug-args" name="-init-macrodef-nbjpda">[m
[32m+[m[32m        <macrodef name="nbjpdastart" uri="http://www.netbeans.org/ns/j2se-project/1">[m
[32m+[m[32m            <attribute default="${main.class}" name="name"/>[m
[32m+[m[32m            <attribute default="${debug.classpath}" name="classpath"/>[m
[32m+[m[32m            <attribute default="" name="stopclassname"/>[m
[32m+[m[32m            <sequential>[m
[32m+[m[32m                <nbjpdastart addressproperty="jpda.address" name="@{name}" stopclassname="@{stopclassname}" transport="${debug-transport}">[m
[32m+[m[32m                    <classpath>[m
[32m+[m[32m                        <path path="@{classpath}"/>[m
[32m+[m[32m                    </classpath>[m
[32m+[m[32m                </nbjpdastart>[m
[32m+[m[32m            </sequential>[m
[32m+[m[32m        </macrodef>[m
[32m+[m[32m        <macrodef name="nbjpdareload" uri="http://www.netbeans.org/ns/j2se-project/1">[m
[32m+[m[32m            <attribute default="${build.classes.dir}" name="dir"/>[m
[32m+[m[32m            <sequential>[m
[32m+[m[32m                <nbjpdareload>[m
[32m+[m[32m                    <fileset dir="@{dir}" includes="${fix.classes}">[m
[32m+[m[32m                        <include name="${fix.includes}*.class"/>[m
[32m+[m[32m                    </fileset>[m
[32m+[m[32m                </nbjpdareload>[m
[32m+[m[32m            </sequential>[m
[32m+[m[32m        </macrodef>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target name="-init-debug-args">[m
[32m+[m[32m        <property name="version-output" value="java version &quot;${ant.java.version}"/>[m
[32m+[m[32m        <condition property="have-jdk-older-than-1.4">[m
[32m+[m[32m            <or>[m
[32m+[m[32m                <contains string="${version-output}" substring="java version &quot;1.0"/>[m
[32m+[m[32m                <contains string="${version-output}" substring="java version &quot;1.1"/>[m
[32m+[m[32m                <contains string="${version-output}" substring="java version &quot;1.2"/>[m
[32m+[m[32m                <contains string="${version-output}" substring="java version &quot;1.3"/>[m
[32m+[m[32m            </or>[m
[32m+[m[32m        </condition>[m
[32m+[m[32m        <condition else="-Xdebug" property="debug-args-line" value="-Xdebug -Xnoagent -Djava.compiler=none">[m
[32m+[m[32m            <istrue value="${have-jdk-older-than-1.4}"/>[m
[32m+[m[32m        </condition>[m
[32m+[m[32m        <condition else="dt_socket" property="debug-transport-by-os" value="dt_shmem">[m
[32m+[m[32m            <os family="windows"/>[m
[32m+[m[32m        </condition>[m
[32m+[m[32m        <condition else="${debug-transport-by-os}" property="debug-transport" value="${debug.transport}">[m
[32m+[m[32m            <isset property="debug.transport"/>[m
[32m+[m[32m        </condition>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="-init-debug-args" name="-init-macrodef-debug">[m
[32m+[m[32m        <macrodef name="debug" uri="http://www.netbeans.org/ns/j2se-project/3">[m
[32m+[m[32m            <attribute default="${main.class}" name="classname"/>[m
[32m+[m[32m            <attribute default="${debug.classpath}" name="classpath"/>[m
[32m+[m[32m            <element name="customize" optional="true"/>[m
[32m+[m[32m            <sequential>[m
[32m+[m[32m                <java classname="@{classname}" dir="${work.dir}" fork="true">[m
[32m+[m[32m                    <jvmarg line="${endorsed.classpath.cmd.line.arg}"/>[m
[32m+[m[32m                    <jvmarg line="${debug-args-line}"/>[m
[32m+[m[32m                    <jvmarg value="-Xrunjdwp:transport=${debug-transport},address=${jpda.address}"/>[m
[32m+[m[32m                    <jvmarg value="-Dfile.encoding=${runtime.encoding}"/>[m
[32m+[m[32m                    <redirector errorencoding="${runtime.encoding}" inputencoding="${runtime.encoding}" outputencoding="${runtime.encoding}"/>[m
[32m+[m[32m                    <jvmarg line="${run.jvmargs}"/>[m
[32m+[m[32m                    <jvmarg line="${run.jvmargs.ide}"/>[m
[32m+[m[32m                    <classpath>[m
[32m+[m[32m                        <path path="@{classpath}"/>[m
[32m+[m[32m                    </classpath>[m
[32m+[m[32m                    <syspropertyset>[m
[32m+[m[32m                        <propertyref prefix="run-sys-prop."/>[m
[32m+[m[32m                        <mapper from="run-sys-prop.*" to="*" type="glob"/>[m
[32m+[m[32m                    </syspropertyset>[m
[32m+[m[32m                    <customize/>[m
[32m+[m[32m                </java>[m
[32m+[m[32m            </sequential>[m
[32m+[m[32m        </macrodef>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target name="-init-macrodef-java">[m
[32m+[m[32m        <macrodef name="java" uri="http://www.netbeans.org/ns/j2se-project/1">[m
[32m+[m[32m            <attribute default="${main.class}" name="classname"/>[m
[32m+[m[32m            <attribute default="${run.classpath}" name="classpath"/>[m
[32m+[m[32m            <attribute default="jvm" name="jvm"/>[m
[32m+[m[32m            <element name="customize" optional="true"/>[m
[32m+[m[32m            <sequential>[m
[32m+[m[32m                <java classname="@{classname}" dir="${work.dir}" fork="true">[m
[32m+[m[32m                    <jvmarg line="${endorsed.classpath.cmd.line.arg}"/>[m
[32m+[m[32m                    <jvmarg value="-Dfile.encoding=${runtime.encoding}"/>[m
[32m+[m[32m                    <redirector errorencoding="${runtime.encoding}" inputencoding="${runtime.encoding}" outputencoding="${runtime.encoding}"/>[m
[32m+[m[32m                    <jvmarg line="${run.jvmargs}"/>[m
[32m+[m[32m                    <jvmarg line="${run.jvmargs.ide}"/>[m
[32m+[m[32m                    <classpath>[m
[32m+[m[32m                        <path path="@{classpath}"/>[m
[32m+[m[32m                    </classpath>[m
[32m+[m[32m                    <syspropertyset>[m
[32m+[m[32m                        <propertyref prefix="run-sys-prop."/>[m
[32m+[m[32m                        <mapper from="run-sys-prop.*" to="*" type="glob"/>[m
[32m+[m[32m                    </syspropertyset>[m
[32m+[m[32m                    <customize/>[m
[32m+[m[32m                </java>[m
[32m+[m[32m            </sequential>[m
[32m+[m[32m        </macrodef>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target name="-init-macrodef-copylibs">[m
[32m+[m[32m        <macrodef name="copylibs" uri="http://www.netbeans.org/ns/j2se-project/3">[m
[32m+[m[32m            <attribute default="${manifest.file}" name="manifest"/>[m
[32m+[m[32m            <element name="customize" optional="true"/>[m
[32m+[m[32m            <sequential>[m
[32m+[m[32m                <property location="${build.classes.dir}" name="build.classes.dir.resolved"/>[m
[32m+[m[32m                <pathconvert property="run.classpath.without.build.classes.dir">[m
[32m+[m[32m                    <path path="${run.classpath}"/>[m
[32m+[m[32m                    <map from="${build.classes.dir.resolved}" to=""/>[m
[32m+[m[32m                </pathconvert>[m
[32m+[m[32m                <pathconvert pathsep=" " property="jar.classpath">[m
[32m+[m[32m                    <path path="${run.classpath.without.build.classes.dir}"/>[m
[32m+[m[32m                    <chainedmapper>[m
[32m+[m[32m                        <flattenmapper/>[m
[32m+[m[32m                        <filtermapper>[m
[32m+[m[32m                            <replacestring from=" " to="%20"/>[m
[32m+[m[32m                        </filtermapper>[m
[32m+[m[32m                        <globmapper from="*" to="lib/*"/>[m
[32m+[m[32m                    </chainedmapper>[m
[32m+[m[32m                </pathconvert>[m
[32m+[m[32m                <taskdef classname="org.netbeans.modules.java.j2seproject.copylibstask.CopyLibs" classpath="${libs.CopyLibs.classpath}" name="copylibs"/>[m
[32m+[m[32m                <copylibs compress="${jar.compress}" excludeFromCopy="${copylibs.excludes}" index="${jar.index}" indexMetaInf="${jar.index.metainf}" jarfile="${dist.jar}" manifest="@{manifest}" rebase="${copylibs.rebase}" runtimeclasspath="${run.classpath.without.build.classes.dir}">[m
[32m+[m[32m                    <fileset dir="${build.classes.dir}" excludes="${dist.archive.excludes}"/>[m
[32m+[m[32m                    <manifest>[m
[32m+[m[32m                        <attribute name="Class-Path" value="${jar.classpath}"/>[m
[32m+[m[32m                        <customize/>[m
[32m+[m[32m                    </manifest>[m
[32m+[m[32m                </copylibs>[m
[32m+[m[32m            </sequential>[m
[32m+[m[32m        </macrodef>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target name="-init-presetdef-jar">[m
[32m+[m[32m        <presetdef name="jar" uri="http://www.netbeans.org/ns/j2se-project/1">[m
[32m+[m[32m            <jar compress="${jar.compress}" index="${jar.index}" jarfile="${dist.jar}">[m
[32m+[m[32m                <j2seproject1:fileset dir="${build.classes.dir}" excludes="${dist.archive.excludes}"/>[m
[32m+[m[32m            </jar>[m
[32m+[m[32m        </presetdef>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target name="-init-ap-cmdline-properties">[m
[32m+[m[32m        <property name="annotation.processing.enabled" value="true"/>[m
[32m+[m[32m        <property name="annotation.processing.processors.list" value=""/>[m
[32m+[m[32m        <property name="annotation.processing.processor.options" value=""/>[m
[32m+[m[32m        <property name="annotation.processing.run.all.processors" value="true"/>[m
[32m+[m[32m        <property name="javac.processorpath" value="${javac.classpath}"/>[m
[32m+[m[32m        <property name="javac.test.processorpath" value="${javac.test.classpath}"/>[m
[32m+[m[32m        <condition property="ap.supported.internal" value="true">[m
[32m+[m[32m            <not>[m
[32m+[m[32m                <matches pattern="1\.[0-5](\..*)?" string="${javac.source}"/>[m
[32m+[m[32m            </not>[m
[32m+[m[32m        </condition>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="-init-ap-cmdline-properties" if="ap.supported.internal" name="-init-ap-cmdline-supported">[m
[32m+[m[32m        <condition else="" property="ap.processors.internal" value="-processor ${annotation.processing.processors.list}">[m
[32m+[m[32m            <isfalse value="${annotation.processing.run.all.processors}"/>[m
[32m+[m[32m        </condition>[m
[32m+[m[32m        <condition else="" property="ap.proc.none.internal" value="-proc:none">[m
[32m+[m[32m            <isfalse value="${annotation.processing.enabled}"/>[m
[32m+[m[32m        </condition>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="-init-ap-cmdline-properties,-init-ap-cmdline-supported" name="-init-ap-cmdline">[m
[32m+[m[32m        <property name="ap.cmd.line.internal" value=""/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="-pre-init,-init-private,-init-user,-init-project,-do-init,-post-init,-init-check,-init-macrodef-property,-init-macrodef-javac,-init-macrodef-test,-init-macrodef-test-debug,-init-macrodef-nbjpda,-init-macrodef-debug,-init-macrodef-java,-init-presetdef-jar,-init-ap-cmdline" name="init"/>[m
[32m+[m[32m    <!--[m
[32m+[m[32m                ===================[m
[32m+[m[32m                COMPILATION SECTION[m
[32m+[m[32m                ===================[m
[32m+[m[32m            -->[m
[32m+[m[32m    <target name="-deps-jar-init" unless="built-jar.properties">[m
[32m+[m[32m        <property location="${build.dir}/built-jar.properties" name="built-jar.properties"/>[m
[32m+[m[32m        <delete file="${built-jar.properties}" quiet="true"/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target if="already.built.jar.${basedir}" name="-warn-already-built-jar">[m
[32m+[m[32m        <echo level="warn" message="Cycle detected: solitaire was already built"/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init,-deps-jar-init" name="deps-jar" unless="no.deps">[m
[32m+[m[32m        <mkdir dir="${build.dir}"/>[m
[32m+[m[32m        <touch file="${built-jar.properties}" verbose="false"/>[m
[32m+[m[32m        <property file="${built-jar.properties}" prefix="already.built.jar."/>[m
[32m+[m[32m        <antcall target="-warn-already-built-jar"/>[m
[32m+[m[32m        <propertyfile file="${built-jar.properties}">[m
[32m+[m[32m            <entry key="${basedir}" value=""/>[m
[32m+[m[32m        </propertyfile>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init,-check-automatic-build,-clean-after-automatic-build" name="-verify-automatic-build"/>[m
[32m+[m[32m    <target depends="init" name="-check-automatic-build">[m
[32m+[m[32m        <available file="${build.classes.dir}/.netbeans_automatic_build" property="netbeans.automatic.build"/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init" if="netbeans.automatic.build" name="-clean-after-automatic-build">[m
[32m+[m[32m        <antcall target="clean"/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init,deps-jar" name="-pre-pre-compile">[m
[32m+[m[32m        <mkdir dir="${build.classes.dir}"/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target name="-pre-compile">[m
[32m+[m[32m        <!-- Empty placeholder for easier customization. -->[m
[32m+[m[32m        <!-- You can override this target in the ../build.xml file. -->[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target if="do.depend.true" name="-compile-depend">[m
[32m+[m[32m        <pathconvert property="build.generated.subdirs">[m
[32m+[m[32m            <dirset dir="${build.generated.sources.dir}" erroronmissingdir="false">[m
[32m+[m[32m                <include name="*"/>[m
[32m+[m[32m            </dirset>[m
[32m+[m[32m        </pathconvert>[m
[32m+[m[32m        <j2seproject3:depend srcdir="${src.dir}:${build.generated.subdirs}"/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init,deps-jar,-pre-pre-compile,-pre-compile, -copy-persistence-xml,-compile-depend" if="have.sources" name="-do-compile">[m
[32m+[m[32m        <j2seproject3:javac gensrcdir="${build.generated.sources.dir}"/>[m
[32m+[m[32m        <copy todir="${build.classes.dir}">[m
[32m+[m[32m            <fileset dir="${src.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>[m
[32m+[m[32m        </copy>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target if="has.persistence.xml" name="-copy-persistence-xml">[m
[32m+[m[32m        <mkdir dir="${build.classes.dir}/META-INF"/>[m
[32m+[m[32m        <copy todir="${build.classes.dir}/META-INF">[m
[32m+[m[32m            <fileset dir="${meta.inf.dir}" includes="persistence.xml orm.xml"/>[m
[32m+[m[32m        </copy>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target name="-post-compile">[m
[32m+[m[32m        <!-- Empty placeholder for easier customization. -->[m
[32m+[m[32m        <!-- You can override this target in the ../build.xml file. -->[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init,deps-jar,-verify-automatic-build,-pre-pre-compile,-pre-compile,-do-compile,-post-compile" description="Compile project." name="compile"/>[m
[32m+[m[32m    <target name="-pre-compile-single">[m
[32m+[m[32m        <!-- Empty placeholder for easier customization. -->[m
[32m+[m[32m        <!-- You can override this target in the ../build.xml file. -->[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init,deps-jar,-pre-pre-compile" name="-do-compile-single">[m
[32m+[m[32m        <fail unless="javac.includes">Must select some files in the IDE or set javac.includes</fail>[m
[32m+[m[32m        <j2seproject3:force-recompile/>[m
[32m+[m[32m        <j2seproject3:javac excludes="" gensrcdir="${build.generated.sources.dir}" includes="${javac.includes}" sourcepath="${src.dir}"/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target name="-post-compile-single">[m
[32m+[m[32m        <!-- Empty placeholder for easier customization. -->[m
[32m+[m[32m        <!-- You can override this target in the ../build.xml file. -->[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init,deps-jar,-verify-automatic-build,-pre-pre-compile,-pre-compile-single,-do-compile-single,-post-compile-single" name="compile-single"/>[m
[32m+[m[32m    <!--[m
[32m+[m[32m                ====================[m
[32m+[m[32m                JAR BUILDING SECTION[m
[32m+[m[32m                ====================[m
[32m+[m[32m            -->[m
[32m+[m[32m    <target depends="init" name="-pre-pre-jar">[m
[32m+[m[32m        <dirname file="${dist.jar}" property="dist.jar.dir"/>[m
[32m+[m[32m        <mkdir dir="${dist.jar.dir}"/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target name="-pre-jar">[m
[32m+[m[32m        <!-- Empty placeholder for easier customization. -->[m
[32m+[m[32m        <!-- You can override this target in the ../build.xml file. -->[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init" if="do.archive" name="-do-jar-create-manifest" unless="manifest.available">[m
[32m+[m[32m        <tempfile deleteonexit="true" destdir="${build.dir}" property="tmp.manifest.file"/>[m
[32m+[m[32m        <touch file="${tmp.manifest.file}" verbose="false"/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init" if="do.archive+manifest.available" name="-do-jar-copy-manifest">[m
[32m+[m[32m        <tempfile deleteonexit="true" destdir="${build.dir}" property="tmp.manifest.file"/>[m
[32m+[m[32m        <copy file="${manifest.file}" tofile="${tmp.manifest.file}"/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init,-do-jar-create-manifest,-do-jar-copy-manifest" if="do.archive+main.class.available" name="-do-jar-set-mainclass">[m
[32m+[m[32m        <manifest file="${tmp.manifest.file}" mode="update">[m
[32m+[m[32m            <attribute name="Main-Class" value="${main.class}"/>[m
[32m+[m[32m        </manifest>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init,-do-jar-create-manifest,-do-jar-copy-manifest" if="do.archive+profile.available" name="-do-jar-set-profile">[m
[32m+[m[32m        <manifest file="${tmp.manifest.file}" mode="update">[m
[32m+[m[32m            <attribute name="Profile" value="${javac.profile}"/>[m
[32m+[m[32m        </manifest>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init,-do-jar-create-manifest,-do-jar-copy-manifest" if="do.archive+splashscreen.available" name="-do-jar-set-splashscreen">[m
[32m+[m[32m        <basename file="${application.splash}" property="splashscreen.basename"/>[m
[32m+[m[32m        <mkdir dir="${build.classes.dir}/META-INF"/>[m
[32m+[m[32m        <copy failonerror="false" file="${application.splash}" todir="${build.classes.dir}/META-INF"/>[m
[32m+[m[32m        <manifest file="${tmp.manifest.file}" mode="update">[m
[32m+[m[32m            <attribute name="SplashScreen-Image" value="META-INF/${splashscreen.basename}"/>[m
[32m+[m[32m        </manifest>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init,-init-macrodef-copylibs,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen" if="do.mkdist" name="-do-jar-copylibs">[m
[32m+[m[32m        <j2seproject3:copylibs manifest="${tmp.manifest.file}"/>[m
[32m+[m[32m        <echo level="info">To run this application from the command line without Ant, try:</echo>[m
[32m+[m[32m        <property location="${dist.jar}" name="dist.jar.resolved"/>[m
[32m+[m[32m        <echo level="info">java -jar "${dist.jar.resolved}"</echo>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen" if="do.archive" name="-do-jar-jar" unless="do.mkdist">[m
[32m+[m[32m        <j2seproject1:jar manifest="${tmp.manifest.file}"/>[m
[32m+[m[32m        <property location="${build.classes.dir}" name="build.classes.dir.resolved"/>[m
[32m+[m[32m        <property location="${dist.jar}" name="dist.jar.resolved"/>[m
[32m+[m[32m        <pathconvert property="run.classpath.with.dist.jar">[m
[32m+[m[32m            <path path="${run.classpath}"/>[m
[32m+[m[32m            <map from="${build.classes.dir.resolved}" to="${dist.jar.resolved}"/>[m
[32m+[m[32m        </pathconvert>[m
[32m+[m[32m        <condition else="" property="jar.usage.message" value="To run this application from the command line without Ant, try:${line.separator}${platform.java} -cp ${run.classpath.with.dist.jar} ${main.class}">[m
[32m+[m[32m            <isset property="main.class.available"/>[m
[32m+[m[32m        </condition>[m
[32m+[m[32m        <condition else="debug" property="jar.usage.level" value="info">[m
[32m+[m[32m            <isset property="main.class.available"/>[m
[32m+[m[32m        </condition>[m
[32m+[m[32m        <echo level="${jar.usage.level}" message="${jar.usage.message}"/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="-do-jar-copylibs" if="do.archive" name="-do-jar-delete-manifest">[m
[32m+[m[32m        <delete>[m
[32m+[m[32m            <fileset file="${tmp.manifest.file}"/>[m
[32m+[m[32m        </delete>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen,-do-jar-jar,-do-jar-delete-manifest" name="-do-jar-without-libraries"/>[m
[32m+[m[32m    <target depends="init,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen,-do-jar-copylibs,-do-jar-delete-manifest" name="-do-jar-with-libraries"/>[m
[32m+[m[32m    <target name="-post-jar">[m
[32m+[m[32m        <!-- Empty placeholder for easier customization. -->[m
[32m+[m[32m        <!-- You can override this target in the ../build.xml file. -->[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init,compile,-pre-jar,-do-jar-without-libraries,-do-jar-with-libraries,-post-jar" name="-do-jar"/>[m
[32m+[m[32m    <target depends="init,compile,-pre-jar,-do-jar,-post-jar" description="Build JAR." name="jar"/>[m
[32m+[m[32m    <!--[m
[32m+[m[32m                =================[m
[32m+[m[32m                EXECUTION SECTION[m
[32m+[m[32m                =================[m
[32m+[m[32m            -->[m
[32m+[m[32m    <target depends="init,compile" description="Run a main class." name="run">[m
[32m+[m[32m        <j2seproject1:java>[m
[32m+[m[32m            <customize>[m
[32m+[m[32m                <arg line="${application.args}"/>[m
[32m+[m[32m            </customize>[m
[32m+[m[32m        </j2seproject1:java>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target name="-do-not-recompile">[m
[32m+[m[32m        <property name="javac.includes.binary" value=""/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init,compile-single" name="run-single">[m
[32m+[m[32m        <fail unless="run.class">Must select one file in the IDE or set run.class</fail>[m
[32m+[m[32m        <j2seproject1:java classname="${run.class}"/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init,compile-test-single" name="run-test-with-main">[m
[32m+[m[32m        <fail unless="run.class">Must select one file in the IDE or set run.class</fail>[m
[32m+[m[32m        <j2seproject1:java classname="${run.class}" classpath="${run.test.classpath}"/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <!--[m
[32m+[m[32m                =================[m
[32m+[m[32m                DEBUGGING SECTION[m
[32m+[m[32m                =================[m
[32m+[m[32m            -->[m
[32m+[m[32m    <target depends="init" if="netbeans.home" name="-debug-start-debugger">[m
[32m+[m[32m        <j2seproject1:nbjpdastart name="${debug.class}"/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init" if="netbeans.home" name="-debug-start-debugger-main-test">[m
[32m+[m[32m        <j2seproject1:nbjpdastart classpath="${debug.test.classpath}" name="${debug.class}"/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init,compile" name="-debug-start-debuggee">[m
[32m+[m[32m        <j2seproject3:debug>[m
[32m+[m[32m            <customize>[m
[32m+[m[32m                <arg line="${application.args}"/>[m
[32m+[m[32m            </customize>[m
[32m+[m[32m        </j2seproject3:debug>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init,compile,-debug-start-debugger,-debug-start-debuggee" description="Debug project in IDE." if="netbeans.home" name="debug"/>[m
[32m+[m[32m    <target depends="init" if="netbeans.home" name="-debug-start-debugger-stepinto">[m
[32m+[m[32m        <j2seproject1:nbjpdastart stopclassname="${main.class}"/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init,compile,-debug-start-debugger-stepinto,-debug-start-debuggee" if="netbeans.home" name="debug-stepinto"/>[m
[32m+[m[32m    <target depends="init,compile-single" if="netbeans.home" name="-debug-start-debuggee-single">[m
[32m+[m[32m        <fail unless="debug.class">Must select one file in the IDE or set debug.class</fail>[m
[32m+[m[32m        <j2seproject3:debug classname="${debug.class}"/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init,compile-single,-debug-start-debugger,-debug-start-debuggee-single" if="netbeans.home" name="debug-single"/>[m
[32m+[m[32m    <target depends="init,compile-test-single" if="netbeans.home" name="-debug-start-debuggee-main-test">[m
[32m+[m[32m        <fail unless="debug.class">Must select one file in the IDE or set debug.class</fail>[m
[32m+[m[32m        <j2seproject3:debug classname="${debug.class}" classpath="${debug.test.classpath}"/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init,compile-test-single,-debug-start-debugger-main-test,-debug-start-debuggee-main-test" if="netbeans.home" name="debug-test-with-main"/>[m
[32m+[m[32m    <target depends="init" name="-pre-debug-fix">[m
[32m+[m[32m        <fail unless="fix.includes">Must set fix.includes</fail>[m
[32m+[m[32m        <property name="javac.includes" value="${fix.includes}.java"/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init,-pre-debug-fix,compile-single" if="netbeans.home" name="-do-debug-fix">[m
[32m+[m[32m        <j2seproject1:nbjpdareload/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init,-pre-debug-fix,-do-debug-fix" if="netbeans.home" name="debug-fix"/>[m
[32m+[m[32m    <!--[m
[32m+[m[32m                =================[m
[32m+[m[32m                PROFILING SECTION[m
[32m+[m[32m                =================[m
[32m+[m[32m            -->[m
[32m+[m[32m    <!--[m
[32m+[m[32m                pre NB7.2 profiler integration[m
[32m+[m[32m            -->[m
[32m+[m[32m    <target depends="profile-init,compile" description="Profile a project in the IDE." if="profiler.info.jvmargs.agent" name="-profile-pre72">[m
[32m+[m[32m        <fail unless="netbeans.home">This target only works when run from inside the NetBeans IDE.</fail>[m
[32m+[m[32m        <nbprofiledirect>[m
[32m+[m[32m            <classpath>[m
[32m+[m[32m                <path path="${run.classpath}"/>[m
[32m+[m[32m            </classpath>[m
[32m+[m[32m        </nbprofiledirect>[m
[32m+[m[32m        <profile/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="profile-init,compile-single" description="Profile a selected class in the IDE." if="profiler.info.jvmargs.agent" name="-profile-single-pre72">[m
[32m+[m[32m        <fail unless="profile.class">Must select one file in the IDE or set profile.class</fail>[m
[32m+[m[32m        <fail unless="netbeans.home">This target only works when run from inside the NetBeans IDE.</fail>[m
[32m+[m[32m        <nbprofiledirect>[m
[32m+[m[32m            <classpath>[m
[32m+[m[32m                <path path="${run.classpath}"/>[m
[32m+[m[32m            </classpath>[m
[32m+[m[32m        </nbprofiledirect>[m
[32m+[m[32m        <profile classname="${profile.class}"/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="profile-init,compile-single" if="profiler.info.jvmargs.agent" name="-profile-applet-pre72">[m
[32m+[m[32m        <fail unless="netbeans.home">This target only works when run from inside the NetBeans IDE.</fail>[m
[32m+[m[32m        <nbprofiledirect>[m
[32m+[m[32m            <classpath>[m
[32m+[m[32m                <path path="${run.classpath}"/>[m
[32m+[m[32m            </classpath>[m
[32m+[m[32m        </nbprofiledirect>[m
[32m+[m[32m        <profile classname="sun.applet.AppletViewer">[m
[32m+[m[32m            <customize>[m
[32m+[m[32m                <arg value="${applet.url}"/>[m
[32m+[m[32m            </customize>[m
[32m+[m[32m        </profile>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="profile-init,compile-test-single" if="profiler.info.jvmargs.agent" name="-profile-test-single-pre72">[m
[32m+[m[32m        <fail unless="netbeans.home">This target only works when run from inside the NetBeans IDE.</fail>[m
[32m+[m[32m        <nbprofiledirect>[m
[32m+[m[32m            <classpath>[m
[32m+[m[32m                <path path="${run.test.classpath}"/>[m
[32m+[m[32m            </classpath>[m
[32m+[m[32m        </nbprofiledirect>[m
[32m+[m[32m        <junit dir="${profiler.info.dir}" errorproperty="tests.failed" failureproperty="tests.failed" fork="true" jvm="${profiler.info.jvm}" showoutput="true">[m
[32m+[m[32m            <env key="${profiler.info.pathvar}" path="${profiler.info.agentpath}:${profiler.current.path}"/>[m
[32m+[m[32m            <jvmarg value="${profiler.info.jvmargs.agent}"/>[m
[32m+[m[32m            <jvmarg line="${profiler.info.jvmargs}"/>[m
[32m+[m[32m            <test name="${profile.class}"/>[m
[32m+[m[32m            <classpath>[m
[32m+[m[32m                <path path="${run.test.classpath}"/>[m
[32m+[m[32m            </classpath>[m
[32m+[m[32m            <syspropertyset>[m
[32m+[m[32m                <propertyref prefix="test-sys-prop."/>[m
[32m+[m[32m                <mapper from="test-sys-prop.*" to="*" type="glob"/>[m
[32m+[m[32m            </syspropertyset>[m
[32m+[m[32m            <formatter type="brief" usefile="false"/>[m
[32m+[m[32m            <formatter type="xml"/>[m
[32m+[m[32m        </junit>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <!--[m
[32m+[m[32m                end of pre NB72 profiling section[m
[32m+[m[32m            -->[m
[32m+[m[32m    <target if="netbeans.home" name="-profile-check">[m
[32m+[m[32m        <condition property="profiler.configured">[m
[32m+[m[32m            <or>[m
[32m+[m[32m                <contains casesensitive="true" string="${run.jvmargs.ide}" substring="-agentpath:"/>[m
[32m+[m[32m                <contains casesensitive="true" string="${run.jvmargs.ide}" substring="-javaagent:"/>[m
[32m+[m[32m            </or>[m
[32m+[m[32m        </condition>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="-profile-check,-profile-pre72" description="Profile a project in the IDE." if="profiler.configured" name="profile" unless="profiler.info.jvmargs.agent">[m
[32m+[m[32m        <startprofiler/>[m
[32m+[m[32m        <antcall target="run"/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="-profile-check,-profile-single-pre72" description="Profile a selected class in the IDE." if="profiler.configured" name="profile-single" unless="profiler.info.jvmargs.agent">[m
[32m+[m[32m        <fail unless="run.class">Must select one file in the IDE or set run.class</fail>[m
[32m+[m[32m        <startprofiler/>[m
[32m+[m[32m        <antcall target="run-single"/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="-profile-test-single-pre72" description="Profile a selected test in the IDE." name="profile-test-single"/>[m
[32m+[m[32m    <target depends="-profile-check" description="Profile a selected test in the IDE." if="profiler.configured" name="profile-test" unless="profiler.info.jvmargs">[m
[32m+[m[32m        <fail unless="test.includes">Must select some files in the IDE or set test.includes</fail>[m
[32m+[m[32m        <startprofiler/>[m
[32m+[m[32m        <antcall target="test-single"/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="-profile-check" description="Profile a selected class in the IDE." if="profiler.configured" name="profile-test-with-main">[m
[32m+[m[32m        <fail unless="run.class">Must select one file in the IDE or set run.class</fail>[m
[32m+[m[32m        <startprofiler/>[m
[32m+[m[32m        <antcal target="run-test-with-main"/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="-profile-check,-profile-applet-pre72" if="profiler.configured" name="profile-applet" unless="profiler.info.jvmargs.agent">[m
[32m+[m[32m        <fail unless="applet.url">Must select one file in the IDE or set applet.url</fail>[m
[32m+[m[32m        <startprofiler/>[m
[32m+[m[32m        <antcall target="run-applet"/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <!--[m
[32m+[m[32m                ===============[m
[32m+[m[32m                JAVADOC SECTION[m
[32m+[m[32m                ===============[m
[32m+[m[32m            -->[m
[32m+[m[32m    <target depends="init" if="have.sources" name="-javadoc-build">[m
[32m+[m[32m        <mkdir dir="${dist.javadoc.dir}"/>[m
[32m+[m[32m        <condition else="" property="javadoc.endorsed.classpath.cmd.line.arg" value="-J${endorsed.classpath.cmd.line.arg}">[m
[32m+[m[32m            <and>[m
[32m+[m[32m                <isset property="endorsed.classpath.cmd.line.arg"/>[m
[32m+[m[32m                <not>[m
[32m+[m[32m                    <equals arg1="${endorsed.classpath.cmd.line.arg}" arg2=""/>[m
[32m+[m[32m                </not>[m
[32m+[m[32m            </and>[m
[32m+[m[32m        </condition>[m
[32m+[m[32m        <condition else="" property="bug5101868workaround" value="*.java">[m
[32m+[m[32m            <matches pattern="1\.[56](\..*)?" string="${java.version}"/>[m
[32m+[m[32m        </condition>[m
[32m+[m[32m        <javadoc additionalparam="-J-Dfile.encoding=${file.encoding} ${javadoc.additionalparam}" author="${javadoc.author}" charset="UTF-8" destdir="${dist.javadoc.dir}" docencoding="UTF-8" encoding="${javadoc.encoding.used}" failonerror="true" noindex="${javadoc.noindex}" nonavbar="${javadoc.nonavbar}" notree="${javadoc.notree}" private="${javadoc.private}" source="${javac.source}" splitindex="${javadoc.splitindex}" use="${javadoc.use}" useexternalfile="true" version="${javadoc.version}" windowtitle="${javadoc.windowtitle}">[m
[32m+[m[32m            <classpath>[m
[32m+[m[32m                <path path="${javac.classpath}"/>[m
[32m+[m[32m            </classpath>[m
[32m+[m[32m            <fileset dir="${src.dir}" excludes="${bug5101868workaround},${excludes}" includes="${includes}">[m
[32m+[m[32m                <filename name="**/*.java"/>[m
[32m+[m[32m            </fileset>[m
[32m+[m[32m            <fileset dir="${build.generated.sources.dir}" erroronmissingdir="false">[m
[32m+[m[32m                <include name="**/*.java"/>[m
[32m+[m[32m                <exclude name="*.java"/>[m
[32m+[m[32m            </fileset>[m
[32m+[m[32m            <arg line="${javadoc.endorsed.classpath.cmd.line.arg}"/>[m
[32m+[m[32m        </javadoc>[m
[32m+[m[32m        <copy todir="${dist.javadoc.dir}">[m
[32m+[m[32m            <fileset dir="${src.dir}" excludes="${excludes}" includes="${includes}">[m
[32m+[m[32m                <filename name="**/doc-files/**"/>[m
[32m+[m[32m            </fileset>[m
[32m+[m[32m            <fileset dir="${build.generated.sources.dir}" erroronmissingdir="false">[m
[32m+[m[32m                <include name="**/doc-files/**"/>[m
[32m+[m[32m            </fileset>[m
[32m+[m[32m        </copy>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init,-javadoc-build" if="netbeans.home" name="-javadoc-browse" unless="no.javadoc.preview">[m
[32m+[m[32m        <nbbrowse file="${dist.javadoc.dir}/index.html"/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init,-javadoc-build,-javadoc-browse" description="Build Javadoc." name="javadoc"/>[m
[32m+[m[32m    <!--[m
[32m+[m[32m                =========================[m
[32m+[m[32m                TEST COMPILATION SECTION[m
[32m+[m[32m                =========================[m
[32m+[m[32m            -->[m
[32m+[m[32m    <target depends="init,compile" if="have.tests" name="-pre-pre-compile-test">[m
[32m+[m[32m        <mkdir dir="${build.test.classes.dir}"/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target name="-pre-compile-test">[m
[32m+[m[32m        <!-- Empty placeholder for easier customization. -->[m
[32m+[m[32m        <!-- You can override this target in the ../build.xml file. -->[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target if="do.depend.true" name="-compile-test-depend">[m
[32m+[m[32m        <j2seproject3:depend classpath="${javac.test.classpath}" destdir="${build.test.classes.dir}" srcdir="${test.src.dir}"/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init,deps-jar,compile,-pre-pre-compile-test,-pre-compile-test,-compile-test-depend" if="have.tests" name="-do-compile-test">[m
[32m+[m[32m        <j2seproject3:javac apgeneratedsrcdir="${build.test.classes.dir}" classpath="${javac.test.classpath}" debug="true" destdir="${build.test.classes.dir}" processorpath="${javac.test.processorpath}" srcdir="${test.src.dir}"/>[m
[32m+[m[32m        <copy todir="${build.test.classes.dir}">[m
[32m+[m[32m            <fileset dir="${test.src.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>[m
[32m+[m[32m        </copy>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target name="-post-compile-test">[m
[32m+[m[32m        <!-- Empty placeholder for easier customization. -->[m
[32m+[m[32m        <!-- You can override this target in the ../build.xml file. -->[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init,compile,-pre-pre-compile-test,-pre-compile-test,-do-compile-test,-post-compile-test" name="compile-test"/>[m
[32m+[m[32m    <target name="-pre-compile-test-single">[m
[32m+[m[32m        <!-- Empty placeholder for easier customization. -->[m
[32m+[m[32m        <!-- You can override this target in the ../build.xml file. -->[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init,deps-jar,compile,-pre-pre-compile-test,-pre-compile-test-single" if="have.tests" name="-do-compile-test-single">[m
[32m+[m[32m        <fail unless="javac.includes">Must select some files in the IDE or set javac.includes</fail>[m
[32m+[m[32m        <j2seproject3:force-recompile destdir="${build.test.classes.dir}"/>[m
[32m+[m[32m        <j2seproject3:javac apgeneratedsrcdir="${build.test.classes.dir}" classpath="${javac.test.classpath}" debug="true" destdir="${build.test.classes.dir}" excludes="" includes="${javac.includes}" processorpath="${javac.test.processorpath}" sourcepath="${test.src.dir}" srcdir="${test.src.dir}"/>[m
[32m+[m[32m        <copy todir="${build.test.classes.dir}">[m
[32m+[m[32m            <fileset dir="${test.src.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>[m
[32m+[m[32m        </copy>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target name="-post-compile-test-single">[m
[32m+[m[32m        <!-- Empty placeholder for easier customization. -->[m
[32m+[m[32m        <!-- You can override this target in the ../build.xml file. -->[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init,compile,-pre-pre-compile-test,-pre-compile-test-single,-do-compile-test-single,-post-compile-test-single" name="compile-test-single"/>[m
[32m+[m[32m    <!--[m
[32m+[m[32m                =======================[m
[32m+[m[32m                TEST EXECUTION SECTION[m
[32m+[m[32m                =======================[m
[32m+[m[32m            -->[m
[32m+[m[32m    <target depends="init" if="have.tests" name="-pre-test-run">[m
[32m+[m[32m        <mkdir dir="${build.test.results.dir}"/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init,compile-test,-pre-test-run" if="have.tests" name="-do-test-run">[m
[32m+[m[32m        <j2seproject3:test includes="${includes}" testincludes="**/*Test.java"/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init,compile-test,-pre-test-run,-do-test-run" if="have.tests" name="-post-test-run">[m
[32m+[m[32m        <fail if="tests.failed" unless="ignore.failing.tests">Some tests failed; see details above.</fail>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init" if="have.tests" name="test-report"/>[m
[32m+[m[32m    <target depends="init" if="netbeans.home+have.tests" name="-test-browse"/>[m
[32m+[m[32m    <target depends="init,compile-test,-pre-test-run,-do-test-run,test-report,-post-test-run,-test-browse" description="Run unit tests." name="test"/>[m
[32m+[m[32m    <target depends="init" if="have.tests" name="-pre-test-run-single">[m
[32m+[m[32m        <mkdir dir="${build.test.results.dir}"/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init,compile-test-single,-pre-test-run-single" if="have.tests" name="-do-test-run-single">[m
[32m+[m[32m        <fail unless="test.includes">Must select some files in the IDE or set test.includes</fail>[m
[32m+[m[32m        <j2seproject3:test excludes="" includes="${test.includes}" testincludes="${test.includes}"/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init,compile-test-single,-pre-test-run-single,-do-test-run-single" if="have.tests" name="-post-test-run-single">[m
[32m+[m[32m        <fail if="tests.failed" unless="ignore.failing.tests">Some tests failed; see details above.</fail>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init,compile-test-single,-pre-test-run-single,-do-test-run-single,-post-test-run-single" description="Run single unit test." name="test-single"/>[m
[32m+[m[32m    <target depends="init,compile-test-single,-pre-test-run-single" if="have.tests" name="-do-test-run-single-method">[m
[32m+[m[32m        <fail unless="test.class">Must select some files in the IDE or set test.class</fail>[m
[32m+[m[32m        <fail unless="test.method">Must select some method in the IDE or set test.method</fail>[m
[32m+[m[32m        <j2seproject3:test excludes="" includes="${javac.includes}" testincludes="${test.class}" testmethods="${test.method}"/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init,compile-test-single,-pre-test-run-single,-do-test-run-single-method" if="have.tests" name="-post-test-run-single-method">[m
[32m+[m[32m        <fail if="tests.failed" unless="ignore.failing.tests">Some tests failed; see details above.</fail>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init,compile-test-single,-pre-test-run-single,-do-test-run-single-method,-post-test-run-single-method" description="Run single unit test." name="test-single-method"/>[m
[32m+[m[32m    <!--[m
[32m+[m[32m                =======================[m
[32m+[m[32m                TEST DEBUGGING SECTION[m
[32m+[m[32m                =======================[m
[32m+[m[32m            -->[m
[32m+[m[32m    <target depends="init,compile-test-single,-pre-test-run-single" if="have.tests" name="-debug-start-debuggee-test">[m
[32m+[m[32m        <fail unless="test.class">Must select one file in the IDE or set test.class</fail>[m
[32m+[m[32m        <j2seproject3:test-debug excludes="" includes="${javac.includes}" testClass="${test.class}" testincludes="${javac.includes}"/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init,compile-test-single,-pre-test-run-single" if="have.tests" name="-debug-start-debuggee-test-method">[m
[32m+[m[32m        <fail unless="test.class">Must select one file in the IDE or set test.class</fail>[m
[32m+[m[32m        <fail unless="test.method">Must select some method in the IDE or set test.method</fail>[m
[32m+[m[32m        <j2seproject3:test-debug excludes="" includes="${javac.includes}" testClass="${test.class}" testMethod="${test.method}" testincludes="${test.class}" testmethods="${test.method}"/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init,compile-test" if="netbeans.home+have.tests" name="-debug-start-debugger-test">[m
[32m+[m[32m        <j2seproject1:nbjpdastart classpath="${debug.test.classpath}" name="${test.class}"/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init,compile-test-single,-debug-start-debugger-test,-debug-start-debuggee-test" name="debug-test"/>[m
[32m+[m[32m    <target depends="init,compile-test-single,-debug-start-debugger-test,-debug-start-debuggee-test-method" name="debug-test-method"/>[m
[32m+[m[32m    <target depends="init,-pre-debug-fix,compile-test-single" if="netbeans.home" name="-do-debug-fix-test">[m
[32m+[m[32m        <j2seproject1:nbjpdareload dir="${build.test.classes.dir}"/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init,-pre-debug-fix,-do-debug-fix-test" if="netbeans.home" name="debug-fix-test"/>[m
[32m+[m[32m    <!--[m
[32m+[m[32m                =========================[m
[32m+[m[32m                APPLET EXECUTION SECTION[m
[32m+[m[32m                =========================[m
[32m+[m[32m            -->[m
[32m+[m[32m    <target depends="init,compile-single" name="run-applet">[m
[32m+[m[32m        <fail unless="applet.url">Must select one file in the IDE or set applet.url</fail>[m
[32m+[m[32m        <j2seproject1:java classname="sun.applet.AppletViewer">[m
[32m+[m[32m            <customize>[m
[32m+[m[32m                <arg value="${applet.url}"/>[m
[32m+[m[32m            </customize>[m
[32m+[m[32m        </j2seproject1:java>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <!--[m
[32m+[m[32m                =========================[m
[32m+[m[32m                APPLET DEBUGGING  SECTION[m
[32m+[m[32m                =========================[m
[32m+[m[32m            -->[m
[32m+[m[32m    <target depends="init,compile-single" if="netbeans.home" name="-debug-start-debuggee-applet">[m
[32m+[m[32m        <fail unless="applet.url">Must select one file in the IDE or set applet.url</fail>[m
[32m+[m[32m        <j2seproject3:debug classname="sun.applet.AppletViewer">[m
[32m+[m[32m            <customize>[m
[32m+[m[32m                <arg value="${applet.url}"/>[m
[32m+[m[32m            </customize>[m
[32m+[m[32m        </j2seproject3:debug>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init,compile-single,-debug-start-debugger,-debug-start-debuggee-applet" if="netbeans.home" name="debug-applet"/>[m
[32m+[m[32m    <!--[m
[32m+[m[32m                ===============[m
[32m+[m[32m                CLEANUP SECTION[m
[32m+[m[32m                ===============[m
[32m+[m[32m            -->[m
[32m+[m[32m    <target name="-deps-clean-init" unless="built-clean.properties">[m
[32m+[m[32m        <property location="${build.dir}/built-clean.properties" name="built-clean.properties"/>[m
[32m+[m[32m        <delete file="${built-clean.properties}" quiet="true"/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target if="already.built.clean.${basedir}" name="-warn-already-built-clean">[m
[32m+[m[32m        <echo level="warn" message="Cycle detected: solitaire was already built"/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init,-deps-clean-init" name="deps-clean" unless="no.deps">[m
[32m+[m[32m        <mkdir dir="${build.dir}"/>[m
[32m+[m[32m        <touch file="${built-clean.properties}" verbose="false"/>[m
[32m+[m[32m        <property file="${built-clean.properties}" prefix="already.built.clean."/>[m
[32m+[m[32m        <antcall target="-warn-already-built-clean"/>[m
[32m+[m[32m        <propertyfile file="${built-clean.properties}">[m
[32m+[m[32m            <entry key="${basedir}" value=""/>[m
[32m+[m[32m        </propertyfile>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init" name="-do-clean">[m
[32m+[m[32m        <delete dir="${build.dir}"/>[m
[32m+[m[32m        <delete dir="${dist.dir}" followsymlinks="false" includeemptydirs="true"/>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target name="-post-clean">[m
[32m+[m[32m        <!-- Empty placeholder for easier customization. -->[m
[32m+[m[32m        <!-- You can override this target in the ../build.xml file. -->[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="init,deps-clean,-do-clean,-post-clean" description="Clean build products." name="clean"/>[m
[32m+[m[32m    <target name="-check-call-dep">[m
[32m+[m[32m        <property file="${call.built.properties}" prefix="already.built."/>[m
[32m+[m[32m        <condition property="should.call.dep">[m
[32m+[m[32m            <and>[m
[32m+[m[32m                <not>[m
[32m+[m[32m                    <isset property="already.built.${call.subproject}"/>[m
[32m+[m[32m                </not>[m
[32m+[m[32m                <available file="${call.script}"/>[m
[32m+[m[32m            </and>[m
[32m+[m[32m        </condition>[m
[32m+[m[32m    </target>[m
[32m+[m[32m    <target depends="-check-call-dep" if="should.call.dep" name="-maybe-call-dep">[m
[32m+[m[32m        <ant antfile="${call.script}" inheritall="false" target="${call.target}">[m
[32m+[m[32m            <propertyset>[m
[32m+[m[32m                <propertyref prefix="transfer."/>[m
[32m+[m[32m                <mapper from="transfer.*" to="*" type="glob"/>[m
[32m+[m[32m            </propertyset>[m
[32m+[m[32m        </ant>[m
[32m+[m[32m    </target>[m
[32m+[m[32m</project>[m
[1mdiff --git a/nbproject/genfiles.properties b/nbproject/genfiles.properties[m
[1mnew file mode 100644[m
[1mindex 0000000..abad6b6[m
[1m--- /dev/null[m
[1m+++ b/nbproject/genfiles.properties[m
[36m@@ -0,0 +1,8 @@[m
[32m+[m[32mbuild.xml.data.CRC32=362ae2a5[m
[32m+[m[32mbuild.xml.script.CRC32=23f851c9[m
[32m+[m[32mbuild.xml.stylesheet.CRC32=8064a381@1.75.1.48[m
[32m+[m[32m# This file is used by a NetBeans-based IDE to track changes in generated files such as build-impl.xml.[m
[32m+[m[32m# Do not edit this file. You may delete it but then the IDE will never regenerate such files for you.[m
[32m+[m[32mnbproject/build-impl.xml.data.CRC32=362ae2a5[m
[32m+[m[32mnbproject/build-impl.xml.script.CRC32=df149ac0[m
[32m+[m[32mnbproject/build-impl.xml.stylesheet.CRC32=876e7a8f@1.75.1.48[m
[1mdiff --git a/nbproject/private/config.properties b/nbproject/private/config.properties[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/nbproject/private/private.properties b/nbproject/private/private.properties[m
[1mnew file mode 100644[m
[1mindex 0000000..015c398[m
[1m--- /dev/null[m
[1m+++ b/nbproject/private/private.properties[m
[36m@@ -0,0 +1,6 @@[m
[32m+[m[32mcompile.on.save=true[m
[32m+[m[32mdo.depend=false[m
[32m+[m[32mdo.jar=true[m
[32m+[m[32mjavac.debug=true[m
[32m+[m[32mjavadoc.preview=true[m
[32m+[m[32muser.properties.file=C:\\Users\\Alan\\AppData\\Roaming\\NetBeans\\8.0.2\\build.properties[m
[1mdiff --git a/nbproject/private/private.xml b/nbproject/private/private.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..af4505d[m
[1m--- /dev/null[m
[1m+++ b/nbproject/private/private.xml[m
[36m@@ -0,0 +1,14 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<project-private xmlns="http://www.netbeans.org/ns/project-private/1">[m
[32m+[m[32m    <editor-bookmarks xmlns="http://www.netbeans.org/ns/editor-bookmarks/2" lastBookmarkId="0"/>[m
[32m+[m[32m    <open-files xmlns="http://www.netbeans.org/ns/projectui-open-files/2">[m
[32m+[m[32m        <group>[m
[32m+[m[32m            <file>file:/C:/Users/Alan/Dev/NetBeansProjects/solitaire/src/model/list/CircularList.java</file>[m
[32m+[m[32m            <file>file:/C:/Users/Alan/Dev/NetBeansProjects/solitaire/src/model/CardDeck.java</file>[m
[32m+[m[32m            <file>file:/C:/Users/Alan/Dev/NetBeansProjects/solitaire/src/model/Card.java</file>[m
[32m+[m[32m            <file>file:/C:/Users/Alan/Dev/NetBeansProjects/solitaire/src/view/CardLabel.java</file>[m
[32m+[m[32m            <file>file:/C:/Users/Alan/Dev/NetBeansProjects/solitaire/src/controller/Solitaire.java</file>[m
[32m+[m[32m            <file>file:/C:/Users/Alan/Dev/NetBeansProjects/solitaire/src/view/MainFrame.java</file>[m
[32m+[m[32m        </group>[m
[32m+[m[32m    </open-files>[m
[32m+[m[32m</project-private>[m
[1mdiff --git a/nbproject/project.properties b/nbproject/project.properties[m
[1mnew file mode 100644[m
[1mindex 0000000..472b344[m
[1m--- /dev/null[m
[1m+++ b/nbproject/project.properties[m
[36m@@ -0,0 +1,76 @@[m
[32m+[m[32mannotation.processing.enabled=true[m
[32m+[m[32mannotation.processing.enabled.in.editor=false[m
[32m+[m[32mannotation.processing.processors.list=[m
[32m+[m[32mannotation.processing.run.all.processors=true[m
[32m+[m[32mannotation.processing.source.output=${build.generated.sources.dir}/ap-source-output[m
[32m+[m[32mapplication.title=solitaire[m
[32m+[m[32mapplication.vendor=Alan[m
[32m+[m[32mbuild.classes.dir=${build.dir}/classes[m
[32m+[m[32mbuild.classes.excludes=**/*.java,**/*.form[m
[32m+[m[32m# This directory is removed when the project is cleaned:[m
[32m+[m[32mbuild.dir=build[m
[32m+[m[32mbuild.generated.dir=${build.dir}/generated[m
[32m+[m[32mbuild.generated.sources.dir=${build.dir}/generated-sources[m
[32m+[m[32m# Only compile against the classpath explicitly listed here:[m
[32m+[m[32mbuild.sysclasspath=ignore[m
[32m+[m[32mbuild.test.classes.dir=${build.dir}/test/classes[m
[32m+[m[32mbuild.test.results.dir=${build.dir}/test/results[m
[32m+[m[32m# Uncomment to specify the preferred debugger connection transport:[m
[32m+[m[32m#debug.transport=dt_socket[m
[32m+[m[32mdebug.classpath=\[m
[32m+[m[32m    ${run.classpath}[m
[32m+[m[32mdebug.test.classpath=\[m
[32m+[m[32m    ${run.test.classpath}[m
[32m+[m[32m# Files in build.classes.dir which should be excluded from distribution jar[m
[32m+[m[32mdist.archive.excludes=[m
[32m+[m[32m# This directory is removed when the project is cleaned:[m
[32m+[m[32mdist.dir=dist[m
[32m+[m[32mdist.jar=${dist.dir}/solitaire.jar[m
[32m+[m[32mdist.javadoc.dir=${dist.dir}/javadoc[m
[32m+[m[32mendorsed.classpath=[m
[32m+[m[32mexcludes=[m
[32m+[m[32mincludes=**[m
[32m+[m[32mjar.compress=false[m
[32m+[m[32mjavac.classpath=[m
[32m+[m[32m# Space-separated list of extra javac options[m
[32m+[m[32mjavac.compilerargs=[m
[32m+[m[32mjavac.deprecation=false[m
[32m+[m[32mjavac.processorpath=\[m
[32m+[m[32m    ${javac.classpath}[m
[32m+[m[32mjavac.source=1.8[m
[32m+[m[32mjavac.target=1.8[m
[32m+[m[32mjavac.test.classpath=\[m
[32m+[m[32m    ${javac.classpath}:\[m
[32m+[m[32m    ${build.classes.dir}:\[m
[32m+[m[32m    ${libs.junit_4.classpath}[m
[32m+[m[32mjavac.test.processorpath=\[m
[32m+[m[32m    ${javac.test.classpath}[m
[32m+[m[32mjavadoc.additionalparam=[m
[32m+[m[32mjavadoc.author=false[m
[32m+[m[32mjavadoc.encoding=${source.encoding}[m
[32m+[m[32mjavadoc.noindex=false[m
[32m+[m[32mjavadoc.nonavbar=false[m
[32m+[m[32mjavadoc.notree=false[m
[32m+[m[32mjavadoc.private=false[m
[32m+[m[32mjavadoc.splitindex=true[m
[32m+[m[32mjavadoc.use=true[m
[32m+[m[32mjavadoc.version=false[m
[32m+[m[32mjavadoc.windowtitle=[m
[32m+[m[32mmain.class=controller.Solitaire[m
[32m+[m[32mmanifest.file=manifest.mf[m
[32m+[m[32mmeta.inf.dir=${src.dir}/META-INF[m
[32m+[m[32mmkdist.disabled=false[m
[32m+[m[32mplatform.active=default_platform[m
[32m+[m[32mrun.classpath=\[m
[32m+[m[32m    ${javac.classpath}:\[m
[32m+[m[32m    ${build.classes.dir}[m
[32m+[m[32m# Space-separated list of JVM arguments used when running the project.[m
[32m+[m[32m# You may also define separate properties like run-sys-prop.name=value instead of -Dname=value.[m
[32m+[m[32m# To set system properties for unit tests define test-sys-prop.name=value:[m
[32m+[m[32mrun.jvmargs=[m
[32m+[m[32mrun.test.classpath=\[m
[32m+[m[32m    ${javac.test.classpath}:\[m
[32m+[m[32m    ${build.test.classes.dir}[m
[32m+[m[32msource.encoding=UTF-8[m
[32m+[m[32msrc.dir=src[m
[32m+[m[32mtest.src.dir=test[m
[1mdiff --git a/nbproject/project.xml b/nbproject/project.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..924cd90[m
[1m--- /dev/null[m
[1m+++ b/nbproject/project.xml[m
[36m@@ -0,0 +1,15 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<project xmlns="http://www.netbeans.org/ns/project/1">[m
[32m+[m[32m    <type>org.netbeans.modules.java.j2seproject</type>[m
[32m+[m[32m    <configuration>[m
[32m+[m[32m        <data xmlns="http://www.netbeans.org/ns/j2se-project/3">[m
[32m+[m[32m            <name>solitaire</name>[m
[32m+[m[32m            <source-roots>[m
[32m+[m[32m                <root id="src.dir"/>[m
[32m+[m[32m            </source-roots>[m
[32m+[m[32m            <test-roots>[m
[32m+[m[32m                <root id="test.src.dir"/>[m
[32m+[m[32m            </test-roots>[m
[32m+[m[32m        </data>[m
[32m+[m[32m    </configuration>[m
[32m+[m[32m</project>[m
[1mdiff --git a/src/controller/Solitaire.java b/src/controller/Solitaire.java[m
[1mnew file mode 100644[m
[1mindex 0000000..65042e8[m
[1m--- /dev/null[m
[1m+++ b/src/controller/Solitaire.java[m
[36m@@ -0,0 +1,119 @@[m
[32m+[m[32m/*[m
[32m+[m[32m * To change this license header, choose License Headers in Project Properties.[m
[32m+[m[32m * To change this template file, choose Tools | Templates[m
[32m+[m[32m * and open the template in the editor.[m
[32m+[m[32m */[m
[32m+[m[32mpackage controller;[m
[32m+[m
[32m+[m[32mimport java.awt.event.ActionEvent;[m
[32m+[m[32mimport java.awt.event.ActionListener;[m
[32m+[m[32mimport java.io.PrintStream;[m
[32m+[m[32mimport java.util.Scanner;[m
[32m+[m[32mimport javafx.beans.InvalidationListener;[m
[32m+[m[32mimport javafx.beans.Observable;[m
[32m+[m[32mimport model.Card;[m
[32m+[m[32mimport model.CardDeck;[m
[32m+[m[32mimport model.CardList;[m
[32m+[m[32mimport model.CardStack;[m
[32m+[m[32mimport model.Suit;[m
[32m+[m[32mimport model.list.CircularList;[m
[32m+[m[32mimport view.GameCui;[m
[32m+[m[32mimport view.MainFrame;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *[m
[32m+[m[32m * @author cvg2836[m
[32m+[m[32m */[m
[32m+[m[32mpublic class Solitaire implements ActionListener {[m
[32m+[m[32m    public static final int LIST_NUM = 7;[m
[32m+[m[32m    public static final int STACK_NUM = 4;[m
[32m+[m
[32m+[m[32m    public CardDeck deck;[m
[32m+[m[32m    public CardStack[] stacks;[m
[32m+[m[32m    public CardList[] lists;[m
[32m+[m
[32m+[m[32m    public Solitaire() {[m
[32m+[m[32m        stacks = new CardStack[STACK_NUM];[m
[32m+[m[32m        lists = new CardList[LIST_NUM];[m
[32m+[m[32m        initSolitaire();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @param args the command line arguments[m
[32m+[m[32m     */[m
[32m+[m[32m    public static void main(String[] args) {[m
[32m+[m
[32m+[m[32m        Solitaire game = new Solitaire();[m
[32m+[m[32m        showGui(game);[m
[32m+[m[32m        game.startGame();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public static void showGui(Solitaire game) {[m
[32m+[m[32m        MainFrame mainFrame = new MainFrame(game);[m
[32m+[m[32m        mainFrame.setVisible(true);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void startGame() {[m
[32m+[m[32m        // start the game CUI[m
[32m+[m[32m//        GameCui cui = new GameCui(this);[m
[32m+[m[32m//        cui.startGame();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void initSolitaire() {[m
[32m+[m[32m        Card[] cardSet = new Card[52];[m
[32m+[m[32m        for (int i = 0; i < cardSet.length; i++) {[m
[32m+[m[32m            cardSet[i] = new Card(i + 1);[m
[32m+[m[32m        }[m
[32m+[m[41m        [m
[32m+[m[32m        shuffle(cardSet);[m
[32m+[m[32m//        cui.showCardSet(cardSet);[m
[32m+[m
[32m+[m[32m        deck = new CardDeck();[m
[32m+[m[32m        for (int i = 0; i < lists.length; i++) {[m
[32m+[m[32m            lists[i] = new CardList();[m
[32m+[m[32m        }[m
[32m+[m[41m        [m
[32m+[m[32m        for (int i = 0; i < stacks.length; i++) {[m
[32m+[m[32m            stacks[i] = new CardStack();[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        int c = 0;[m
[32m+[m
[32m+[m[32m        for (int i = 0; i < LIST_NUM; i++) {[m
[32m+[m[32m            for (int j = 0; j < i + 1; j++) {[m
[32m+[m[32m                lists[i].add(cardSet[c]);[m
[32m+[m[32m                c++;[m
[32m+[m[32m            }[m
[32m+[m[32m            lists[i].setOpenIndex(lists[i].size() - 1);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        for (int i = c; i < cardSet.length; i++) {[m
[32m+[m[32m            deck.add(cardSet[i]);[m
[32m+[m[32m        }[m
[32m+[m[32m        deck.setCurCard(deck.size()-1);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /* Rearranges an array of objects in uniformly random order[m
[32m+[m[32m     * (under the assumption that <tt>Math.random()</tt> generates independent[m
[32m+[m[32m     * and uniformly distributed numbers between 0 and 1).[m
[32m+[m[32m     * @param a the array to be shuffled[m
[32m+[m[32m     * @see StdRandom[m
[32m+[m[32m     */[m
[32m+[m[32m    public static void shuffle(Object[] a) {[m
[32m+[m[32m        int N = a.length;[m
[32m+[m[32m        for (int i = 0; i < N; i++) {[m
[32m+[m[32m            // choose index uniformly in [i, N-1][m
[32m+[m[32m            int r = i + (int) (Math.random() * (N - i));[m
[32m+[m[32m            Object swap = a[r];[m
[32m+[m[32m            a[r] = a[i];[m
[32m+[m[32m            a[i] = swap;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void actionPerformed(ActionEvent e) {[m
[32m+[m[32m        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/src/model/Card.java b/src/model/Card.java[m
[1mnew file mode 100644[m
[1mindex 0000000..5f47759[m
[1m--- /dev/null[m
[1m+++ b/src/model/Card.java[m
[36m@@ -0,0 +1,153 @@[m
[32m+[m[32m/*[m
[32m+[m[32m * To change this license header, choose License Headers in Project Properties.[m
[32m+[m[32m * To change this template file, choose Tools | Templates[m
[32m+[m[32m * and open the template in the editor.[m
[32m+[m[32m */[m
[32m+[m[32mpackage model;[m
[32m+[m
[32m+[m[32mimport java.awt.Dimension;[m
[32m+[m[32mimport java.awt.Image;[m
[32m+[m[32mimport java.awt.image.BufferedImage;[m
[32m+[m[32mimport java.io.File;[m
[32m+[m[32mimport java.io.IOException;[m
[32m+[m[32mimport javax.imageio.ImageIO;[m
[32m+[m[32mimport javax.swing.Icon;[m
[32m+[m[32mimport javax.swing.ImageIcon;[m
[32m+[m[32mimport javax.swing.JOptionPane;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *[m
[32m+[m[32m * @author Alan Tian[m
[32m+[m[32m */[m
[32m+[m[32mpublic class Card implements Comparable<Card> {[m
[32m+[m
[32m+[m[32m    public static final int SPADE = 4;[m
[32m+[m[32m    public static final int HEART = 3;[m
[32m+[m[32m    public static final int CLUB = 2;[m
[32m+[m[32m    public static final int DIAMOND = 1;[m
[32m+[m
[32m+[m[32m    public static final int PREVIOUS = 1;[m
[32m+[m[32m    public static final int ABOVE = 2;[m
[32m+[m[32m    public static final int OTHER = -1;[m
[32m+[m
[32m+[m[32m    private static final int INVALID_SUIT = -1;[m
[32m+[m[32m    public static final int INVALID_CARD_INDEX = -1;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * [1..52] order by [A, 2, 3, ..., 10, J, Q, K] with Diamond, Club, Heart, Spade[m
[32m+[m[32m     */[m
[32m+[m[32m    private int cardIndex;[m
[32m+[m
[32m+[m[32m    public Card(int index) {[m
[32m+[m[32m        if (index > 52 || index < 1) {[m
[32m+[m[32m            throw new IllegalArgumentException("number should within 1 to 13");[m
[32m+[m[32m        }[m
[32m+[m[32m        this.cardIndex = index;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public int getValue() {[m
[32m+[m[32m        return (cardIndex-1) % 13 +1;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public int getSuit() {[m
[32m+[m[32m        return (cardIndex-1) / 13 + 1;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public int getColor() {[m
[32m+[m[32m        return getSuit() % 2;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public static int mapSuitChar(char suitChar){[m
[32m+[m[32m        int suit = INVALID_SUIT;[m
[32m+[m[32m        if (suitChar == 'S'||suitChar == 's')[m
[32m+[m[32m            suit = SPADE;[m
[32m+[m[32m        else if (suitChar == 'H'||suitChar == 'h')[m
[32m+[m[32m            suit = HEART;[m
[32m+[m[32m        else if (suitChar == 'C'||suitChar == 'c')[m
[32m+[m[32m            suit = CLUB;[m
[32m+[m[32m        else if (suitChar == 'D'||suitChar == 'd')[m
[32m+[m[32m            suit = DIAMOND;[m
[32m+[m[32m        return suit;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    public static int mapCardName(String cardName){[m
[32m+[m[32m        int index = -1;[m
[32m+[m[32m        if (cardName.length()!=3)[m
[32m+[m[32m            return INVALID_CARD_INDEX;[m
[32m+[m[32m        int suit = mapSuitChar(cardName.charAt(0));[m
[32m+[m[32m        if (suit == INVALID_SUIT)[m
[32m+[m[32m            return INVALID_CARD_INDEX;[m
[32m+[m[32m        if(cardName.charAt(1) == '_')[m
[32m+[m[32m            index = Integer.valueOf(cardName.substring(2)) + (suit-1)*13;[m
[32m+[m[32m        else[m
[32m+[m[32m            index = Integer.valueOf(cardName.substring(1)) + (suit-1)*13;[m
[32m+[m[32m        return index;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public char getSuitChar(){[m
[32m+[m[32m        int suit = getSuit();[m
[32m+[m[32m        char suitName;[m
[32m+[m[32m        if(suit == SPADE)[m
[32m+[m[32m            suitName = 'S';[m[41m [m
[32m+[m[32m        else if(suit == HEART)[m
[32m+[m[32m            suitName = 'H';[m[41m [m
[32m+[m[32m        else if(suit == CLUB)[m
[32m+[m[32m            suitName = 'C';[m[41m [m
[32m+[m[32m        else if(suit == DIAMOND)[m
[32m+[m[32m            suitName = 'D';[m[41m [m
[32m+[m[32m        else[m
[32m+[m[32m            suitName = 'N';[m
[32m+[m[32m        return suitName;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * compare the order of cards[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param target the card to compare with[m
[32m+[m[32m     * @return PREVIOUS if they have same suit and target is 1 rank greater[m
[32m+[m[32m than this card ABOVE if the target can be put on top of this card (1[m
[32m+[m[32m rank greater and different color) OTHER if not the above result[m
[32m+[m[32m     */[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public int compareTo(Card target) {[m
[32m+[m[32m        if (target.getValue() - getValue() == 1) {[m
[32m+[m[32m            if (target.getColor() != getColor()) {[m
[32m+[m[32m                return ABOVE;[m
[32m+[m[32m            } else if (target.getSuit() == getSuit()) {[m
[32m+[m[32m                return PREVIOUS;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        return OTHER;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public String toString() {[m
[32m+[m[32m//            return String.format("%d_%d_%d", cardIndex, getSuit(), getValue());[m
[32m+[m[32m        if (getValue() < 10) {[m
[32m+[m[32m            return String.format("%c_%d", getSuitChar(), getValue());[m
[32m+[m[32m        } else {[m
[32m+[m[32m            return String.format("%c%d", getSuitChar(), getValue());[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public int getIndex() {[m
[32m+[m[32m        return cardIndex;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public Icon getImage(Dimension dim) {[m
[32m+[m[32m        try {[m
[32m+[m[32m            BufferedImage img = ImageIO.read(new File("images\\" + getImageFileName()));[m
[32m+[m[32m            Image dimImg = img.getScaledInstance((int) dim.getWidth(), (int) dim.getHeight(), Image.SCALE_SMOOTH);[m
[32m+[m[32m            return new ImageIcon(dimImg);[m
[32m+[m[32m        } catch (IOException e) {[m
[32m+[m[32m            JOptionPane.showMessageDialog(null, e.getMessage());[m
[32m+[m[32m            return null;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    public String getImageFileName() {[m
[32m+[m[32m        String fileName;[m
[32m+[m[32m        fileName = String.format("%d%02d.gif", getSuit(), getValue());[m
[32m+[m[32m        return fileName;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/src/model/CardDeck.java b/src/model/CardDeck.java[m
[1mnew file mode 100644[m
[1mindex 0000000..8661773[m
[1m--- /dev/null[m
[1m+++ b/src/model/CardDeck.java[m
[36m@@ -0,0 +1,76 @@[m
[32m+[m[32m/*[m
[32m+[m[32m * To change this license header, choose License Headers in Project Properties.[m
[32m+[m[32m * To change this template file, choose Tools | Templates[m
[32m+[m[32m * and open the template in the editor.[m
[32m+[m[32m */[m
[32m+[m[32mpackage model;[m
[32m+[m
[32m+[m[32mimport model.list.CircularList;[m
[32m+[m[32mimport model.list.CircularNode;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *[m
[32m+[m[32m * @author Alan Tian[m
[32m+[m[32m */[m
[32m+[m[32mpublic class CardDeck extends CircularList<Card> {[m
[32m+[m[32m//    private Card curCard;[m
[32m+[m
[32m+[m[32m    private CircularNode<Card> curCardNode;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Open the next card, if this is the tail card, return the first card[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return[m
[32m+[m[32m     */[m
[32m+[m[32m    public Card drawCard() {[m
[32m+[m[32m//        int i = indexOf(curCard);[m
[32m+[m[32m//        if (i == 0) {[m
[32m+[m[32m//            curCard = get(size() - 1);[m
[32m+[m[32m//        } else {[m
[32m+[m[32m//            curCard = get(i - 1);[m
[32m+[m[32m//        }[m
[32m+[m[32m        Card curCard = curCardNode.value();[m
[32m+[m[32m        curCardNode = curCardNode.prev();[m
[32m+[m[32m        return curCard;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Delete and return the current card (so we can place it in a list or a[m
[32m+[m[32m     * stack)[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return the deleted card[m
[32m+[m[32m     */[m
[32m+[m[32m    public Card takeCard() {[m
[32m+[m[32m        Card card = curCardNode.value();[m
[32m+[m
[32m+[m[32m        CircularNode<Card> node = curCardNode;[m
[32m+[m[32m        if (curCardNode == tail.next()) {[m
[32m+[m[32m            curCardNode = curCardNode.prev();[m
[32m+[m[32m        } else {[m
[32m+[m[32m            curCardNode = curCardNode.next();[m
[32m+[m[32m        }[m
[32m+[m[32m        remove(node);[m
[32m+[m[32m//        if (card != null) {[m
[32m+[m[32m//            if (index <= size() - 1) {[m
[32m+[m[32m//                curCard = getNode(index).value();[m
[32m+[m[32m//            } else if (index > 0) {[m
[32m+[m[32m//                curCard = getNode(index - 1).value();[m
[32m+[m[32m//            } else {[m
[32m+[m[32m//                curCard = null;[m
[32m+[m[32m//            }[m
[32m+[m[32m//        }[m
[32m+[m[32m        return card;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setCurCard(int cardIndex) {[m
[32m+[m[32m        curCardNode = getNode(cardIndex);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public Card getCurCard() {[m
[32m+[m[32m        return curCardNode.value();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public boolean isFirst() {[m
[32m+[m[32m        return curCardNode == tail.next().next();[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/src/model/CardList.java b/src/model/CardList.java[m
[1mnew file mode 100644[m
[1mindex 0000000..e954b00[m
[1m--- /dev/null[m
[1m+++ b/src/model/CardList.java[m
[36m@@ -0,0 +1,185 @@[m
[32m+[m[32m/*[m
[32m+[m[32m * To change this license header, choose License Headers in Project Properties.[m
[32m+[m[32m * To change this template file, choose Tools | Templates[m
[32m+[m[32m * and open the template in the editor.[m
[32m+[m[32m */[m
[32m+[m[32mpackage model;[m
[32m+[m
[32m+[m[32mimport model.list.CircularList;[m
[32m+[m[32mimport model.list.CircularNode;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *[m
[32m+[m[32m * @author Alan Tian[m
[32m+[m[32m */[m
[32m+[m[32mpublic class CardList extends CircularList<Card> {[m
[32m+[m
[32m+[m[32m    private Card tailCard;[m
[32m+[m[32m    private int openIndex;[m
[32m+[m
[32m+[m[32m    public CardList() {[m
[32m+[m[32m        super();[m
[32m+[m[32m        tailCard = null;[m
[32m+[m[32m        openIndex = -1;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * create a card list with at least 1 card[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param tailNode[m
[32m+[m[32m     * @param nodeCount[m
[32m+[m[32m     * @param tailCard[m
[32m+[m[32m     * @param openIndex[m
[32m+[m[32m     */[m
[32m+[m[32m    private CardList(CircularNode<Card> tailNode, int nodeCount, int openIndex) {[m
[32m+[m[32m        super(tailNode, nodeCount);[m
[32m+[m[32m        this.tailCard = tailNode.next().value();[m
[32m+[m[32m        this.openIndex = openIndex;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public Card getTailCard() {[m
[32m+[m[32m        return tailCard;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public int getOpenIndex() {[m
[32m+[m[32m        return openIndex;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Separate the list into two: [0..(i-1)] and [i..count]; Open the card at[m
[32m+[m[32m     * (i-1) if necessary[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param index >=0 and &lt nodeCount[m
[32m+[m[32m     * @return the second list[m
[32m+[m[32m     */[m
[32m+[m[32m    public CardList cut(int index) {[m
[32m+[m[32m        CardList list2;[m
[32m+[m
[32m+[m[32m        if (index == 0) {[m
[32m+[m[32m            list2 = new CardList(tail, size(), openIndex);[m
[32m+[m[32m            // initiate the list 1 since it's empty now[m
[32m+[m[32m            tail = null;[m
[32m+[m[32m            nodeCount = 0;[m
[32m+[m[32m            tailCard = null;[m
[32m+[m[32m            openIndex = -1;[m
[32m+[m[32m        } else {[m
[32m+[m[32m            CircularNode<Card> tailNode_L2 = new CircularNode<Card>(null, null, null);[m
[32m+[m
[32m+[m[32m            CircularNode<Card> tailCard_L2 = tail.next();[m
[32m+[m[32m            CircularNode<Card> headCard_L1 = tailCard_L2.next();[m
[32m+[m
[32m+[m[32m            CircularNode<Card> headCard_L2 = getNode(index);[m
[32m+[m[32m            CircularNode<Card> tailCard_L1 = headCard_L2.prev();[m
[32m+[m
[32m+[m[32m            // reset links for list 1[m
[32m+[m[32m            headCard_L1.setPrev(tailCard_L1);[m
[32m+[m[32m            tailCard_L1.setNext(headCard_L1);[m
[32m+[m[32m            tail.setNext(tailCard_L1);[m
[32m+[m
[32m+[m[32m            // reset links for list 2[m
[32m+[m[32m            headCard_L2.setPrev(tailCard_L2);[m
[32m+[m[32m            tailCard_L2.setNext(headCard_L2);[m
[32m+[m[32m            tailNode_L2.setNext(tailCard_L2);[m
[32m+[m
[32m+[m[32m            // set the tailCard and openIndex[m
[32m+[m[32m            list2 = new CardList(tailNode_L2, size() - index, 0);[m
[32m+[m[32m            tailCard = tailCard_L1.value();[m
[32m+[m[32m            tail.setNext(tailCard_L1);[m
[32m+[m[32m            nodeCount = index;[m
[32m+[m[41m            [m
[32m+[m[32m            if (openIndex == index) {[m
[32m+[m[32m                openIndex--;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        return list2;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Join this list to the tail of the other list, if the rules allow this;[m
[32m+[m[32m     * have to check the rules before calling this method; the first card of this[m
[32m+[m[32m     * list is 'ABOVE' the tail card of the other list[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param list1 the list that linked to, this list would be list2[m
[32m+[m[32m     */[m
[32m+[m[32m    public void link(CardList list1) {[m
[32m+[m[32m        CircularNode<Card> tailCard_L1 = list1.getTailNode().next();[m
[32m+[m[32m        CircularNode<Card> headCard_L1 = tailCard_L1.next();[m
[32m+[m[32m        CircularNode<Card> tailCard_L2 = tail.next();[m
[32m+[m[32m        CircularNode<Card> headCard_L2 = tailCard_L2.next();[m
[32m+[m
[32m+[m[32m        // reset links for the list 1[m
[32m+[m[32m        tailCard_L1.setNext(headCard_L2);[m
[32m+[m[32m        headCard_L1.setPrev(tailCard_L2);[m
[32m+[m
[32m+[m[32m        // reset links for the list 2[m
[32m+[m[32m        tailCard_L2.setNext(headCard_L1);[m
[32m+[m[32m        headCard_L2.setPrev(tailCard_L1);[m
[32m+[m
[32m+[m[32m        list1.setTailCard((Card)tail.next().value());[m
[32m+[m[32m        list1.setTailNode(tail);[m
[32m+[m[32m        list1.setSize(list1.size() + size());[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Add c as the new tail card, check the rules before calling this method[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param newCard[m
[32m+[m[32m     */[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void add(Card newCard) {[m
[32m+[m[32m        add(size(), newCard);[m
[32m+[m[32m        tailCard = newCard;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Delete and return the tail card Set the card beneath it as the new tail[m
[32m+[m[32m     * card Open the new tail card if necessary.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return the old tail card[m
[32m+[m[32m     */[m
[32m+[m[32m    public Card moveTail() {[m
[32m+[m[32m        if (size() > 1) {[m
[32m+[m[32m            tailCard = get(size() - 2);[m
[32m+[m[32m        } else {[m
[32m+[m[32m            tailCard = null;[m
[32m+[m[32m        }[m
[32m+[m[32m        if (openIndex == size() - 1) {[m
[32m+[m[32m            openIndex--;[m
[32m+[m[32m        }[m
[32m+[m[32m        return remove(size() - 1);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * find card from list's open cards[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param cardIndex the index of a card ([1..52])[m
[32m+[m[32m     * @return the card in the list, otherwise null[m
[32m+[m[32m     */[m
[32m+[m[32m    public Card findCard(int cardIndex) {[m
[32m+[m[32m        if (isEmpty()) {[m
[32m+[m[32m            return null;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        int nodeIndex = openIndex;[m
[32m+[m[32m        CircularNode<Card> finger = getNode(nodeIndex);[m
[32m+[m[32m        while (nodeIndex < nodeCount) {[m
[32m+[m[32m            Card card = finger.value();[m
[32m+[m[32m            if (card.getIndex() == cardIndex) {[m
[32m+[m[32m                return card;[m
[32m+[m[32m            } else {[m
[32m+[m[32m                finger = finger.next();[m
[32m+[m[32m                nodeIndex++;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        return null;[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setOpenIndex(int i) {[m
[32m+[m[32m        openIndex = i;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private void setTailCard(Card tailCard) {[m
[32m+[m[32m        this.tailCard = tailCard;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/src/model/CardStack.java b/src/model/CardStack.java[m
[1mnew file mode 100644[m
[1mindex 0000000..0139976[m
[1m--- /dev/null[m
[1m+++ b/src/model/CardStack.java[m
[36m@@ -0,0 +1,28 @@[m
[32m+[m[32m/*[m
[32m+[m[32m * To change this license header, choose License Headers in Project Properties.[m
[32m+[m[32m * To change this template file, choose Tools | Templates[m
[32m+[m[32m * and open the template in the editor.[m
[32m+[m[32m */[m
[32m+[m[32mpackage model;[m
[32m+[m
[32m+[m[32mimport model.list.SinglyStack;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *[m
[32m+[m[32m * @author Alan Tian[m
[32m+[m[32m */[m
[32m+[m[32mpublic class CardStack extends SinglyStack<Card>{[m
[32m+[m
[32m+[m[32m//    private SinglyStack<Card> stack;[m
[32m+[m[41m    [m
[32m+[m[32m//    public CardStack(){[m
[32m+[m[32m//        stack = new SinglyStack<Card>();[m
[32m+[m[32m//    }[m
[32m+[m
[32m+[m[32m    public boolean add(Card card) {[m
[32m+[m[32m        push(card);[m
[32m+[m[32m        return true;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[41m    [m
[32m+[m[32m}[m
[1mdiff --git a/src/model/Suit.java b/src/model/Suit.java[m
[1mnew file mode 100644[m
[1mindex 0000000..ff4f88e[m
[1m--- /dev/null[m
[1m+++ b/src/model/Suit.java[m
[36m@@ -0,0 +1,27 @@[m
[32m+[m[32mpackage model;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *[m
[32m+[m[32m * @author Alan Tian[m[41m [m
[32m+[m[32m * @version 1.0.0 2014.8[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mpublic enum Suit[m
[32m+[m[32m{[m
[32m+[m[32m    SPADE(1, "S"), HEART(2, "H"), CLUB(3, "C"), DIAMOND(4, "D");[m
[32m+[m[32m    private int index;[m
[32m+[m[32m    private String name;[m
[32m+[m[32m    private Suit(int index, String name){[m
[32m+[m[32m        this.name = name;[m
[32m+[m[32m        this.index = index;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    public int toInt(){[m
[32m+[m[32m        return index;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    @Override[m
[32m+[m[32m    public String toString(){[m
[32m+[m[32m        return name;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/src/model/list/AbstractList.java b/src/model/list/AbstractList.java[m
[1mnew file mode 100644[m
[1mindex 0000000..4d5fc4b[m
[1m--- /dev/null[m
[1m+++ b/src/model/list/AbstractList.java[m
[36m@@ -0,0 +1,31 @@[m
[32m+[m[32m/*[m
[32m+[m[32m * To change this license header, choose License Headers in Project Properties.[m
[32m+[m[32m * To change this template file, choose Tools | Templates[m
[32m+[m[32m * and open the template in the editor.[m
[32m+[m[32m */[m
[32m+[m[32mpackage model.list;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *[m
[32m+[m[32m * @author Alan Tian[m
[32m+[m[32m */[m
[32m+[m[32mpublic interface AbstractList<E> {[m
[32m+[m
[32m+[m[32m    public int indexOf(E e);[m
[32m+[m
[32m+[m[32m    public int size();[m
[32m+[m
[32m+[m[32m    public boolean isEmpty();[m
[32m+[m
[32m+[m[32m    public E get(int i);[m
[32m+[m
[32m+[m[32m    public boolean set(int i, E e);[m
[32m+[m
[32m+[m[32m    public boolean add(int i, E e);[m
[32m+[m
[32m+[m[32m    public boolean contains(E e);[m
[32m+[m[41m    [m
[32m+[m[32m    public E remove(E e);[m
[32m+[m[41m    [m
[32m+[m[32m    public E remove(int i);[m
[32m+[m[32m}[m
[1mdiff --git a/src/model/list/CircularList.java b/src/model/list/CircularList.java[m
[1mnew file mode 100644[m
[1mindex 0000000..54f6dad[m
[1m--- /dev/null[m
[1m+++ b/src/model/list/CircularList.java[m
[36m@@ -0,0 +1,212 @@[m
[32m+[m[32m/*[m
[32m+[m[32m * To change this license header, choose License Headers in Project Properties.[m
[32m+[m[32m * To change this template file, choose Tools | Templates[m
[32m+[m[32m * and open the template in the editor.[m
[32m+[m[32m */[m
[32m+[m[32mpackage model.list;[m
[32m+[m
[32m+[m[32mimport model.Card;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *[m
[32m+[m[32m * @author Alan Tian[m
[32m+[m[32m */[m
[32m+[m[32mpublic class CircularList<E> implements AbstractList<E> {[m
[32m+[m
[32m+[m[32m    protected CircularNode tail;[m
[32m+[m[32m    protected int nodeCount;[m
[32m+[m
[32m+[m[32m    public CircularList() {[m
[32m+[m[32m        tail = null;[m
[32m+[m[32m        nodeCount = 0;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public CircularList(CircularNode tail, int nodeCount) {[m
[32m+[m[32m        this.tail = tail;[m
[32m+[m[32m        this.nodeCount = nodeCount;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public CircularNode<E> getTailNode() {[m
[32m+[m[32m        return tail;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setSize(int nodeCount) {[m
[32m+[m[32m        this.nodeCount = nodeCount;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public CircularNode<E> getNode(int i) {[m
[32m+[m[32m        if (i < 0 || i >= nodeCount) {[m
[32m+[m[32m            return null;[m
[32m+[m[32m        }[m
[32m+[m[32m        CircularNode<E> currentNode = tail.next();[m
[32m+[m[32m        while (i > 0) {[m
[32m+[m[32m            currentNode = currentNode.next();[m
[32m+[m[32m            i--;[m
[32m+[m[32m        }[m
[32m+[m[32m        return currentNode.next();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public int indexOf(E e) {[m
[32m+[m[32m        if (tail == null) {[m
[32m+[m[32m            return -1;[m
[32m+[m[32m        } else {[m
[32m+[m[32m            CircularNode<E> finger = getHead();[m
[32m+[m[32m            int index = 0;[m
[32m+[m[32m            while (index < nodeCount) {[m
[32m+[m[32m                if (finger.value() == e) {[m
[32m+[m[32m                    return index;[m
[32m+[m[32m                } else {[m
[32m+[m[32m                    finger = finger.next();[m
[32m+[m[32m                    index++;[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m            return -1;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public int size() {[m
[32m+[m[32m        return nodeCount;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public boolean isEmpty() {[m
[32m+[m[32m        return nodeCount == 0;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public E get(int i) {[m
[32m+[m[32m        if (i < 0 || i >= nodeCount) {[m
[32m+[m[32m            return null;[m
[32m+[m[32m        } else {[m
[32m+[m[32m            return (E) getNode(i).value();[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public boolean set(int i, E e) {[m
[32m+[m[32m        if (i < 0 || i >= nodeCount) {[m
[32m+[m[32m            return false;[m
[32m+[m[32m        } else {[m
[32m+[m[32m            getNode(i).setValue(e);[m
[32m+[m[32m            return true;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public boolean add(int i, E e) {[m
[32m+[m[32m        if (i < 0 || i > nodeCount) {[m
[32m+[m[32m            return false;[m
[32m+[m[32m        } else {[m
[32m+[m[32m            if (tail == null) {[m
[32m+[m[32m                if (i > 0) {[m
[32m+[m[32m                    return false;[m
[32m+[m[32m                } else {[m
[32m+[m[32m                    CircularNode<E> newNode = new CircularNode<E>(e, null, null);[m
[32m+[m[32m                    newNode.setNext(newNode);[m
[32m+[m[32m                    newNode.setPrev(newNode);[m
[32m+[m[32m                    tail = new CircularNode<E>(null, null, newNode);[m
[32m+[m[32m                }[m
[32m+[m[32m            } else {[m
[32m+[m[32m                if (i < nodeCount) {[m
[32m+[m[32m                    CircularNode<E> finger = getNode(i);[m
[32m+[m[32m                    CircularNode<E> newNode = new CircularNode<E>(e, finger.prev(), finger);[m
[32m+[m[32m                    finger.prev().setNext(newNode);[m
[32m+[m[32m                    finger.setPrev(newNode);[m
[32m+[m[32m                } else {[m
[32m+[m[32m                    CircularNode<E> newNode = new CircularNode<E>(e, tail.next(), getHead());[m
[32m+[m[32m                    getHead().setPrev(newNode);[m
[32m+[m[32m                    tail.next().setNext(newNode);[m
[32m+[m[32m                    tail.setNext(newNode);[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m            nodeCount++;[m
[32m+[m[32m            return true;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public boolean contains(E e) {[m
[32m+[m[32m        CircularNode<E> finger = tail;[m
[32m+[m[32m        while (finger != null) {[m
[32m+[m[32m            if (finger.value() == e) {[m
[32m+[m[32m                return true;[m
[32m+[m[32m            } else {[m
[32m+[m[32m                finger = finger.prev();[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        return false;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    protected CircularNode<E> getHead() {[m
[32m+[m[32m        if (nodeCount > 0) {[m
[32m+[m[32m            return tail.next().next();[m
[32m+[m[32m        } else {[m
[32m+[m[32m            return null;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    protected void remove(CircularNode<E> node){[m
[32m+[m[32m        if(nodeCount == 1)[m
[32m+[m[32m            tail.setNext(null);[m
[32m+[m[32m        else{[m
[32m+[m[32m            node.prev().setNext(node.next());[m
[32m+[m[32m            node.next().setPrev(node.prev());[m
[32m+[m[32m            if (node == tail.next())[m
[32m+[m[32m                tail.setNext(node.prev());[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public E remove(E e) {[m
[32m+[m[32m        CircularNode<E> finger = getHead();[m
[32m+[m[32m        int index = 0;[m
[32m+[m[32m        while (index < nodeCount) {[m
[32m+[m[32m            if (finger.value() == e) {[m
[32m+[m[32m                break;[m
[32m+[m[32m            } else {[m
[32m+[m[32m                finger = finger.next();[m
[32m+[m[32m                index++;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        if (index == nodeCount) {[m
[32m+[m[32m            return null;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        nodeCount--;[m
[32m+[m[32m        if (nodeCount == 0) {[m
[32m+[m[32m            tail = null;[m
[32m+[m[32m        } else {[m
[32m+[m[32m            finger.prev().setNext(finger.next());[m
[32m+[m[32m            finger.next().setPrev(finger.prev());[m
[32m+[m[32m        }[m
[32m+[m[32m        return e;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public E remove(int i) {[m
[32m+[m[32m        if (i < 0 || i >= nodeCount) {[m
[32m+[m[32m            return null;[m
[32m+[m[32m        }[m
[32m+[m[32m        CircularNode<E> finger = getNode(i);[m
[32m+[m[32m        E e = finger.value();[m
[32m+[m[32m        if (nodeCount > 1) {[m
[32m+[m[32m            tail.setNext(finger.prev());[m
[32m+[m[32m            finger.prev().setNext(finger.next());[m
[32m+[m[32m            finger.next().setPrev(finger.prev());[m
[32m+[m[32m        } else {[m
[32m+[m[32m            tail = null;[m
[32m+[m[32m        }[m
[32m+[m[32m        nodeCount--;[m
[32m+[m[32m        return e;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void add(E e) {[m
[32m+[m[32m        add(nodeCount, e);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setTailNode(CircularNode tail) {[m
[32m+[m[32m        this.tail = tail;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/src/model/list/CircularNode.java b/src/model/list/CircularNode.java[m
[1mnew file mode 100644[m
[1mindex 0000000..3783932[m
[1m--- /dev/null[m
[1m+++ b/src/model/list/CircularNode.java[m
[36m@@ -0,0 +1,47 @@[m
[32m+[m[32m/*[m
[32m+[m[32m * To change this license header, choose License Headers in Project Properties.[m
[32m+[m[32m * To change this template file, choose Tools | Templates[m
[32m+[m[32m * and open the template in the editor.[m
[32m+[m[32m */[m
[32m+[m[32mpackage model.list;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *[m
[32m+[m[32m * @author Alan Tian[m
[32m+[m[32m */[m
[32m+[m[32mpublic class CircularNode<E> {[m
[32m+[m
[32m+[m[32m        private E data;[m
[32m+[m[32m        private CircularNode<E> nextElement;[m
[32m+[m[32m        private CircularNode<E> prevElement;[m
[32m+[m
[32m+[m[32m        public CircularNode(E value, CircularNode<E> prev, CircularNode<E> next) {[m
[32m+[m[32m            data = value;[m
[32m+[m[32m            nextElement = next;[m
[32m+[m[32m            prevElement = prev;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        public CircularNode<E> next() {[m
[32m+[m[32m            return nextElement;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        public void setNext(CircularNode<E> next) {[m
[32m+[m[32m            nextElement = next;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        public CircularNode<E> prev() {[m
[32m+[m[32m            return prevElement;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        public void setPrev(CircularNode<E> prev) {[m
[32m+[m[32m            prevElement = prev;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        public E value() {[m
[32m+[m[32m            return data;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        public void setValue(E value) {[m
[32m+[m[32m            data = value;[m
[32m+[m[32m        }[m
[32m+[m[32m}[m
[1mdiff --git a/src/model/list/SinglyList.java b/src/model/list/SinglyList.java[m
[1mnew file mode 100644[m
[1mindex 0000000..3430ae6[m
[1m--- /dev/null[m
[1m+++ b/src/model/list/SinglyList.java[m
[36m@@ -0,0 +1,129 @@[m
[32m+[m[32m/*[m
[32m+[m[32m * To change this license header, choose License Headers in Project Properties.[m
[32m+[m[32m * To change this template file, choose Tools | Templates[m
[32m+[m[32m * and open the template in the editor.[m
[32m+[m[32m */[m
[32m+[m[32mpackage model.list;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *[m
[32m+[m[32m * @author cvg2836[m
[32m+[m[32m */[m
[32m+[m[32mpublic class SinglyList<E> implements AbstractList<E> {[m
[32m+[m
[32m+[m[32m    protected SinglyNode head;[m
[32m+[m[32m    protected int nodeCount;[m
[32m+[m
[32m+[m[32m    public SinglyList() {[m
[32m+[m[32m        head = null;[m
[32m+[m[32m        nodeCount = 0;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    protected SinglyNode<E> locate(int i) {[m
[32m+[m[32m        SinglyNode<E> currentNode = head;[m
[32m+[m[32m        while (i > 0) {[m
[32m+[m[32m            currentNode = currentNode.next();[m
[32m+[m[32m            i--;[m
[32m+[m[32m        }[m
[32m+[m[32m        return currentNode.next();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public int indexOf(E e) {[m
[32m+[m[32m        SinglyNode<E> finger = head;[m
[32m+[m[32m        int index = -1;[m
[32m+[m[32m        while (finger != null) {[m
[32m+[m[32m            if (finger.value() == e) {[m
[32m+[m[32m                break;[m
[32m+[m[32m            } else {[m
[32m+[m[32m                finger = finger.next();[m
[32m+[m[32m                index++;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        if (finger != null) {[m
[32m+[m[32m            return index;[m
[32m+[m[32m        } else {[m
[32m+[m[32m            return -1;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public int size() {[m
[32m+[m[32m        return nodeCount;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public boolean isEmpty() {[m
[32m+[m[32m        return nodeCount == 0;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public E get(int i) {[m
[32m+[m[32m        if (i < 0 || i > nodeCount) {[m
[32m+[m[32m            return null;[m
[32m+[m[32m        } else {[m
[32m+[m[32m            return (E) locate(i).value();[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public boolean set(int i, E e) {[m
[32m+[m[32m        if (i < 0 || i > nodeCount) {[m
[32m+[m[32m            return false;[m
[32m+[m[32m        } else {[m
[32m+[m[32m            locate(i).setValue(e);[m
[32m+[m[32m            return true;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public boolean add(int i, E e) {[m
[32m+[m[32m        if (i < 0 || i > nodeCount) {[m
[32m+[m[32m            return false;[m
[32m+[m[32m        } else {[m
[32m+[m[32m            if (head == null) {[m
[32m+[m[32m                if (i > 0) {[m
[32m+[m[32m                    return false;[m
[32m+[m[32m                } else {[m
[32m+[m[32m                    SinglyNode<E> newNode = new SinglyNode<E>(e, null);[m
[32m+[m[32m                    head = new SinglyNode<E>(null, newNode);[m
[32m+[m[32m                }[m
[32m+[m[32m            } else {[m
[32m+[m[32m                if (i == 0) {[m
[32m+[m[32m                    SinglyNode<E> newNode = new SinglyNode<E>(e, head);[m
[32m+[m[32m                    head.setNext(newNode);[m
[32m+[m[32m                } else {[m
[32m+[m[32m                    SinglyNode<E> prevNode = locate(i - 1);[m
[32m+[m[32m                    SinglyNode<E> newNode = new SinglyNode<E>(e, prevNode.next());[m
[32m+[m[32m                    prevNode.setNext(newNode);[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m            nodeCount++;[m
[32m+[m[32m            return true;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public boolean contains(E e) {[m
[32m+[m[32m        SinglyNode<E> finger = head;[m
[32m+[m[32m        while (finger != null) {[m
[32m+[m[32m            if (finger.value() == e) {[m
[32m+[m[32m                return true;[m
[32m+[m[32m            } else {[m
[32m+[m[32m                finger = finger.next();[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        return false;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public E remove(E e) {[m
[32m+[m[32m        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public E remove(int i) {[m
[32m+[m[32m        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/src/model/list/SinglyNode.java b/src/model/list/SinglyNode.java[m
[1mnew file mode 100644[m
[1mindex 0000000..fa5bd6e[m
[1m--- /dev/null[m
[1m+++ b/src/model/list/SinglyNode.java[m
[36m@@ -0,0 +1,37 @@[m
[32m+[m[32m/*[m
[32m+[m[32m * To change this license header, choose License Headers in Project Properties.[m
[32m+[m[32m * To change this template file, choose Tools | Templates[m
[32m+[m[32m * and open the template in the editor.[m
[32m+[m[32m */[m
[32m+[m[32mpackage model.list;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *[m
[32m+[m[32m * @author cvg2836[m
[32m+[m[32m */[m
[32m+[m[32mpublic class SinglyNode<E> {[m
[32m+[m
[32m+[m[32m        private E data;[m
[32m+[m[32m        private SinglyNode<E> nextElement;[m
[32m+[m
[32m+[m[32m        public SinglyNode(E value, SinglyNode<E> next) {[m
[32m+[m[32m            data = value;[m
[32m+[m[32m            nextElement = next;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        public SinglyNode<E> next() {[m
[32m+[m[32m            return nextElement;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        public void setNext(SinglyNode<E> next) {[m
[32m+[m[32m            nextElement = next;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        public E value() {[m
[32m+[m[32m            return data;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        public void setValue(E value) {[m
[32m+[m[32m            data = value;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
\ No newline at end of file[m
[1mdiff --git a/src/model/list/SinglyStack.java b/src/model/list/SinglyStack.java[m
[1mnew file mode 100644[m
[1mindex 0000000..a28f0a8[m
[1m--- /dev/null[m
[1m+++ b/src/model/list/SinglyStack.java[m
[36m@@ -0,0 +1,42 @@[m
[32m+[m[32m/*[m
[32m+[m[32m * To change this license header, choose License Headers in Project Properties.[m
[32m+[m[32m * To change this template file, choose Tools | Templates[m
[32m+[m[32m * and open the template in the editor.[m
[32m+[m[32m */[m
[32m+[m[32mpackage model.list;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *[m
[32m+[m[32m * @author Alan Tian[m
[32m+[m[32m */[m
[32m+[m[32mpublic class SinglyStack<E> extends SinglyList<E> {[m
[32m+[m
[32m+[m[32m    public void push(E e) {[m
[32m+[m[32m        add(nodeCount, e);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public E peek() {[m
[32m+[m[32m        if (nodeCount == 0) {[m
[32m+[m[32m            return null;[m
[32m+[m[32m        } else {[m
[32m+[m[32m            return locate(nodeCount - 1).value();[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public E pop() {[m
[32m+[m[32m        if (nodeCount == 0) {[m
[32m+[m[32m            return null;[m
[32m+[m[32m        } else {[m
[32m+[m[32m            if (nodeCount == 1) {[m
[32m+[m[32m                E e = (E) head.next().value();[m
[32m+[m[32m                head.setNext(null);[m
[32m+[m[32m                return e;[m
[32m+[m[32m            } else {[m
[32m+[m[32m                SinglyNode<E> preNode = locate(nodeCount - 2);[m
[32m+[m[32m                E e = preNode.next().value();[m
[32m+[m[32m                preNode.setNext(null);[m
[32m+[m[32m                return e;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/src/view/CardLabel.java b/src/view/CardLabel.java[m
[1mnew file mode 100644[m
[1mindex 0000000..3361d0b[m
[1m--- /dev/null[m
[1m+++ b/src/view/CardLabel.java[m
[36m@@ -0,0 +1,70 @@[m
[32m+[m[32m/*[m
[32m+[m[32m * To change this license header, choose License Headers in Project Properties.[m
[32m+[m[32m * To change this template file, choose Tools | Templates[m
[32m+[m[32m * and open the template in the editor.[m
[32m+[m[32m */[m
[32m+[m[32mpackage view;[m
[32m+[m
[32m+[m[32mimport java.awt.Dimension;[m
[32m+[m[32mimport java.awt.event.MouseEvent;[m
[32m+[m[32mimport java.awt.event.MouseListener;[m
[32m+[m[32mimport java.awt.event.MouseMotionListener;[m
[32m+[m[32mimport javax.swing.JLabel;[m
[32m+[m[32mimport model.Card;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *[m
[32m+[m[32m * @author Alan Tian[m
[32m+[m[32m */[m
[32m+[m[32mpublic class CardLabel extends JLabel implements MouseListener, MouseMotionListener{[m
[32m+[m[32m    private Card card;[m
[32m+[m[32m    public CardLabel(Card card, Dimension dim){[m
[32m+[m[32m        super("", JLabel.CENTER);[m
[32m+[m[32m        this.card = card;[m
[32m+[m[32m        setPreferredSize(dim);[m
[32m+[m[32m        setIcon(card.getImage(dim));[m
[32m+[m[32m        addMouseListener(this);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m        public CardLabel(){[m
[32m+[m[32m        super("", JLabel.CENTER);[m
[32m+[m[32m        this.card = null;[m
[32m+[m[32m//        setPreferredSize(dim);[m
[32m+[m[32m//        setIcon(card.getImage(dim));[m
[32m+[m[32m//        addMouseListener(this);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void mouseClicked(MouseEvent e) {[m
[32m+[m[32m        System.out.println(card.toString());[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void mousePressed(MouseEvent e) {[m
[32m+[m[32m        addMouseMotionListener(this);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void mouseReleased(MouseEvent e) {[m
[32m+[m[32m        removeMouseMotionListener(this);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void mouseEntered(MouseEvent e) {[m
[32m+[m[32m        System.out.println("entered:"+card.toString());[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void mouseExited(MouseEvent e) {[m
[32m+[m[32m        System.out.println("exit:"+card.toString());[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void mouseDragged(MouseEvent e) {[m
[32m+[m[32m        System.out.println("draged:"+card.toString());[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void mouseMoved(MouseEvent e) {[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/src/view/GameCui.java b/src/view/GameCui.java[m
[1mnew file mode 100644[m
[1mindex 0000000..ee0047a[m
[1m--- /dev/null[m
[1m+++ b/src/view/GameCui.java[m
[36m@@ -0,0 +1,326 @@[m
[32m+[m[32m/*[m
[32m+[m[32m * To change this license header, choose License Headers in Project Properties.[m
[32m+[m[32m * To change this template file, choose Tools | Templates[m
[32m+[m[32m * and open the template in the editor.[m
[32m+[m[32m */[m
[32m+[m[32mpackage view;[m
[32m+[m
[32m+[m[32mimport controller.Solitaire;[m
[32m+[m[32mimport static controller.Solitaire.LIST_NUM;[m
[32m+[m[32mimport java.io.PrintStream;[m
[32m+[m[32mimport java.util.Scanner;[m
[32m+[m[32mimport model.Card;[m
[32m+[m[32mimport model.CardDeck;[m
[32m+[m[32mimport model.CardList;[m
[32m+[m[32mimport model.CardStack;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *[m
[32m+[m[32m * @author Alan Tian[m
[32m+[m[32m */[m
[32m+[m[32mpublic class GameCui {[m
[32m+[m
[32m+[m[32m    public static final String ERR_INVALID_LIST = "invalid list.";[m
[32m+[m[32m    public static final String ERR_INVALID_MOVE = "invalid move.";[m
[32m+[m[32m    public static final String ERR_INVALID_CMD = "invalid command.";[m
[32m+[m[32m    public static final String ERR_INVALID_CARD = "invalid card.";[m
[32m+[m
[32m+[m[32m    Solitaire game;[m
[32m+[m[32m    Scanner input = new Scanner(System.in);[m
[32m+[m[32m    PrintStream output = new PrintStream(System.out);[m
[32m+[m
[32m+[m[32m    public void setOutput(PrintStream output) {[m
[32m+[m[32m        this.output = output;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public GameCui(Solitaire game) {[m
[32m+[m[32m        this.game = game;[m
[32m+[m[32m        input.useDelimiter("\n");[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void startGame() {[m
[32m+[m[32m        output.println("  ---  Welcome to Solitaire Game  ---");[m
[32m+[m[32m        String cmd = "";[m
[32m+[m[32m        while (cmd.compareTo("quit") != 0) {[m
[32m+[m[32m            showGame();[m
[32m+[m[32m            output.print("Your next move: ");[m
[32m+[m[32m            cmd = input.next().toLowerCase();[m
[32m+[m[32m//            output.println(cmd);[m
[32m+[m[32m            if (executeCommand(cmd)) {[m
[32m+[m[32m                output.println("success");[m
[32m+[m[32m            } else {[m
[32m+[m[32m                output.println("failed");[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public boolean executeCommand(String command) {[m
[32m+[m[32m        boolean result = false;[m
[32m+[m[32m        String[] cmd = command.split(" ");[m
[32m+[m[32m        if (cmd[0].compareTo("drawcard") == 0) {[m
[32m+[m
[32m+[m[32m            result = drawCard();[m
[32m+[m[32m        } else if (cmd[0].compareTo("deckto") == 0) {[m
[32m+[m[32m            deckTo(cmd);[m
[32m+[m[32m        } else if (cmd[0].compareTo("link") == 0) {[m
[32m+[m[32m            link(cmd);[m
[32m+[m[32m        } else if (cmd[0].compareTo("send") == 0) {[m
[32m+[m[32m            send(cmd);[m
[32m+[m[32m        } else if (cmd[0].compareTo("restart") == 0) {[m
[32m+[m[32m            game.initSolitaire();[m
[32m+[m[32m        } else if (cmd[0].compareTo("quit") != 0) {[m
[32m+[m[32m            output.println(ERR_INVALID_CMD);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return true;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void showGame() {[m
[32m+[m[32m        showCardListAll();[m
[32m+[m[32m        showCardDeckAll();[m
[32m+[m
[32m+[m[32m        showDeck();[m
[32m+[m[32m        showStack();[m
[32m+[m[32m        showList();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private void showDeck() {[m
[32m+[m[32m        CardDeck deck = game.deck;[m
[32m+[m[32m        if (deck.isEmpty()) {[m
[32m+[m[32m            output.println("Card Deck: Empty");[m
[32m+[m[32m        } else {[m
[32m+[m[32m            output.println("Card Deck: Not Empty  Open Card: " + deck.getCurCard().toString());[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private void showStack() {[m
[32m+[m[32m        CardStack stack;[m
[32m+[m[32m        String stackCards = "";[m
[32m+[m[32m        for (int i = 0; i < 4; i++) {[m
[32m+[m[32m            stack = game.stacks[i];[m
[32m+[m[32m            if (stack.peek() != null) {[m
[32m+[m[32m                stackCards += stack.peek().toString() + " ";[m
[32m+[m[32m            } else {[m
[32m+[m[32m                stackCards += "none ";[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        output.println("Card Stack: " + stackCards);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private void showList() {[m
[32m+[m[32m        output.println("Card Lists: ");[m
[32m+[m[32m        CardList list;[m
[32m+[m[32m        for (int i = 0; i < Solitaire.LIST_NUM; i++) {[m
[32m+[m[32m            String listCards = "";[m
[32m+[m[32m            list = game.lists[i];[m
[32m+[m[32m            for (int j = 0; j < list.size(); j++) {[m
[32m+[m[32m                if (j >= list.getOpenIndex()) {[m
[32m+[m[32m                    listCards += list.get(j).toString() + " ";[m
[32m+[m[32m                } else {[m
[32m+[m[32m                    listCards += "Back ";[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m            output.println((i + 1) + ": " + listCards);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void showCardListAll() {[m
[32m+[m[32m        output.println("Card Lists: ");[m
[32m+[m[32m        CardList list;[m
[32m+[m[32m        for (int i = 0; i < Solitaire.LIST_NUM; i++) {[m
[32m+[m[32m            String listCards = "";[m
[32m+[m[32m            list = game.lists[i];[m
[32m+[m[32m            for (int j = 0; j < list.size(); j++) {[m
[32m+[m[32m                listCards += list.get(j).toString() + " ";[m
[32m+[m[32m            }[m
[32m+[m[32m            output.println((i + 1) + ": " + listCards);[m
[32m+[m[32m        }[m
[32m+[m[32m        output.println();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void showCardSet(Card[] cardSet) {[m
[32m+[m[32m        output.println("\ncard set");[m
[32m+[m[32m        for (int i = 0; i < 4; i++) {[m
[32m+[m[32m            String cards13 = "";[m
[32m+[m[32m            for (int j = 0; j < 13; j++) {[m
[32m+[m[32m                cards13 += cardSet[i * 13 + j] + " ";[m
[32m+[m[32m            }[m
[32m+[m[32m            output.println(cards13);[m
[32m+[m[32m        }[m
[32m+[m[32m        output.println();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void showCardDeckAll() {[m
[32m+[m[32m        String deckCards = "";[m
[32m+[m[32m        CardDeck deck = game.deck;[m
[32m+[m[32m        for (int i = 0; i < deck.size(); i++) {[m
[32m+[m[32m            deckCards += deck.get(i).toString() + " ";[m
[32m+[m[32m        }[m
[32m+[m[32m        output.println("deck: " + deckCards);[m
[32m+[m[32m        output.println();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private boolean drawCard() {[m
[32m+[m[32m        if (game.deck.isEmpty()) {[m
[32m+[m[32m            return false;[m
[32m+[m[32m        }[m
[32m+[m[32m        game.deck.drawCard();[m
[32m+[m[32m        return true;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * deckto l: take the open card from deck to a list l. deckto: if no[m
[32m+[m[32m     * argument, then take the card to stack.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param cmd[m
[32m+[m[32m     */[m
[32m+[m[32m    private boolean deckTo(String[] cmd) {[m
[32m+[m[32m        if (cmd.length == 1) {[m
[32m+[m[32m            Card card = game.deck.getCurCard();[m
[32m+[m[32m            for (int s = 0; s < game.stacks.length; s++) {[m
[32m+[m[32m                CardStack stack = game.stacks[s];[m
[32m+[m[32m                if(stack.isEmpty())[m
[32m+[m[32m                    continue;[m
[32m+[m[32m                Card stackCard = stack.peek();[m
[32m+[m[41m                [m
[32m+[m[32m                if (stackCard.compareTo(card) == Card.PREVIOUS) {[m
[32m+[m[32m                    game.stacks[s].add(card);[m
[32m+[m[32m                    game.deck.takeCard();[m
[32m+[m[32m                    return true;[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m            // none stack is available for this card[m
[32m+[m[32m            return false;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        if (cmd.length != 2) {[m
[32m+[m[32m            output.println(ERR_INVALID_CMD);[m
[32m+[m[32m            return false;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        int listIndex = Integer.valueOf(cmd[1]);[m
[32m+[m[32m        if (!validListIndex(listIndex)) {[m
[32m+[m[32m            return false;[m
[32m+[m[32m        }[m
[32m+[m[32m        if (game.deck.getCurCard().compareTo(game.lists[listIndex-1].getTailCard()) == Card.ABOVE) {[m
[32m+[m[32m            game.lists[listIndex-1].add(game.deck.takeCard());[m
[32m+[m[32m            return true;[m
[32m+[m[32m        } else {[m
[32m+[m[32m            output.println(ERR_INVALID_MOVE);[m
[32m+[m[32m            return false;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * link c x: Suppose c is a revealed card in a card list, and 1 ≤x≤ 7 This[m
[32m+[m[32m     * command moves all cards below and including c in the same list to the xth[m
[32m+[m[32m     * list For example the command 'Link Spade9 6' moves all card below and[m
[32m+[m[32m     * including Spade9 to the 6th card list[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param cmd[m
[32m+[m[32m     */[m
[32m+[m[32m    private boolean link(String[] cmd) {[m
[32m+[m[32m        if (cmd.length != 3) {[m
[32m+[m[32m            output.println(ERR_INVALID_CMD);[m
[32m+[m[32m            return false;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        int listIndex = Integer.valueOf(cmd[2]);[m
[32m+[m[32m        if (!validListIndex(listIndex)) {[m
[32m+[m[32m            return false;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        int cardIndex = Card.mapCardName(cmd[1]);[m
[32m+[m[32m        if (cardIndex == Card.INVALID_CARD_INDEX) {[m
[32m+[m[32m            output.println(ERR_INVALID_CARD);[m
[32m+[m[32m            return false;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        CardList list;[m
[32m+[m[32m        for (int l = 0; l < Solitaire.LIST_NUM; l++) {[m
[32m+[m[32m            list = game.lists[l];[m
[32m+[m[32m            // looking for card[m
[32m+[m[32m            Card card = list.findCard(cardIndex);[m
[32m+[m
[32m+[m[32m            if (card != null) {[m
[32m+[m[32m                CardList targetList = game.lists[listIndex - 1];[m
[32m+[m[32m                Card tailCard = targetList.getTailCard();[m
[32m+[m[32m                // check if linkable[m[41m [m
[32m+[m[32m                if (card.compareTo(tailCard) == Card.ABOVE) {[m
[32m+[m[32m                    CardList newList = list.cut(list.indexOf(card));[m
[32m+[m[32m                    newList.link(targetList);[m
[32m+[m[32m                    return true;[m
[32m+[m[32m                } else {[m
[32m+[m[32m                    output.println(ERR_INVALID_MOVE);[m
[32m+[m[32m                    return false;[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        output.println(ERR_INVALID_CARD);[m
[32m+[m[32m        return false;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * send c: Suppose c is a tail card of a card list, or open card of deck,[m
[32m+[m[32m     * this command moves the card c to the stack that corresponds to its suit[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param cmd[m
[32m+[m[32m     */[m
[32m+[m[32m    private boolean send(String[] cmd) {[m
[32m+[m[32m        if (cmd.length != 2) {[m
[32m+[m[32m            output.println(ERR_INVALID_CMD);[m
[32m+[m[32m            return false;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        int cardIndex = Card.mapCardName(cmd[1]);[m
[32m+[m[32m        if (cardIndex == Card.INVALID_CARD_INDEX) {[m
[32m+[m[32m            output.println(ERR_INVALID_CARD);[m
[32m+[m[32m            return false;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        // locate list[m
[32m+[m[32m        for (int listIndex = 0; listIndex < LIST_NUM; listIndex++) {[m
[32m+[m[32m            if (game.lists[listIndex].isEmpty()) {[m
[32m+[m[32m                continue;[m
[32m+[m[32m            }[m
[32m+[m[32m            Card card = game.lists[listIndex].getTailCard();[m
[32m+[m[32m            if (card.getIndex() == cardIndex) {[m
[32m+[m[32m                // find stack[m
[32m+[m[32m                CardStack stack = game.stacks[card.getSuit() - 1];[m
[32m+[m[32m                if (stack.isEmpty()) {[m
[32m+[m[32m                    if (card.getValue() != 1) {[m
[32m+[m[32m                        output.println(ERR_INVALID_MOVE);[m
[32m+[m[32m                        return false;[m
[32m+[m[32m                    }[m
[32m+[m[32m                } else if (stack.peek().compareTo(card) != Card.PREVIOUS) {[m
[32m+[m[32m                    output.println(ERR_INVALID_MOVE);[m
[32m+[m[32m                    return false;[m
[32m+[m[32m                }[m
[32m+[m[32m                stack.add(card);[m
[32m+[m[32m                game.lists[listIndex].moveTail();[m
[32m+[m[32m                return true;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        output.println(ERR_INVALID_CARD);[m
[32m+[m[32m        return false;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private boolean validListIndex(int index) {[m
[32m+[m[32m        boolean valid = (1 <= index) && (index <= Solitaire.LIST_NUM);[m
[32m+[m[32m        if (!valid) {[m
[32m+[m[32m            output.println(ERR_INVALID_LIST);[m
[32m+[m[32m        }[m
[32m+[m[32m        return valid;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public int locateListByTail(int tailCardIndex) {[m
[32m+[m[32m        for (int l = 0; l < LIST_NUM; l++) {[m
[32m+[m[32m            if (game.lists[l].getTailCard().getIndex() == tailCardIndex) {[m
[32m+[m[32m                return l;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        output.println(ERR_INVALID_CARD);[m
[32m+[m[32m        return -1;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/src/view/ImagePanel.java b/src/view/ImagePanel.java[m
[1mnew file mode 100644[m
[1mindex 0000000..879f79a[m
[1m--- /dev/null[m
[1m+++ b/src/view/ImagePanel.java[m
[36m@@ -0,0 +1,50 @@[m
[32m+[m[32mpackage view;[m
[32m+[m
[32m+[m[32mimport java.awt.Graphics;[m
[32m+[m[32mimport java.awt.Image;[m
[32m+[m[32mimport java.awt.LayoutManager;[m
[32m+[m[32mimport java.awt.event.ComponentAdapter;[m
[32m+[m[32mimport java.awt.event.ComponentEvent;[m
[32m+[m[32mimport javax.swing.JPanel;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *[m
[32m+[m[32m * @author Alan Tian <alan.tian at aut.ac.nz>[m
[32m+[m[32m */[m
[32m+[m[32mpublic class ImagePanel extends JPanel {[m
[32m+[m
[32m+[m[32m    private static final long serialVersionUID = 1L;[m
[32m+[m[32m    private Image imageOrg = null;[m
[32m+[m[32m    private Image image = null;[m
[32m+[m
[32m+[m[32m    {[m
[32m+[m[32m        addComponentListener(new ComponentAdapter() {[m
[32m+[m[32m            @Override[m
[32m+[m[32m            public void componentResized(final ComponentEvent e) {[m
[32m+[m[32m                final int w = ImagePanel.this.getWidth();[m
[32m+[m[32m                final int h = ImagePanel.this.getHeight();[m
[32m+[m[32m                image = w > 0 && h > 0 ? imageOrg.getScaledInstance(w, h, Image.SCALE_SMOOTH) : imageOrg;[m
[32m+[m[32m                ImagePanel.this.repaint();[m
[32m+[m[32m            }[m
[32m+[m[32m        });[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public ImagePanel(LayoutManager layout, final Image image) {[m
[32m+[m[32m        super(layout);[m
[32m+[m[32m        imageOrg = image;[m
[32m+[m[32m        this.image = image;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setImage(Image image) {[m
[32m+[m[32m        this.image = image;[m
[32m+[m[32m        imageOrg = image;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void paintComponent(final Graphics g) {[m
[32m+[m[32m        super.paintComponent(g);[m
[32m+[m[32m        if (image != null) {[m
[32m+[m[32m            g.drawImage(image, 0, 0, null);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/src/view/MainFrame.java b/src/view/MainFrame.java[m
[1mnew file mode 100644[m
[1mindex 0000000..32d6c13[m
[1m--- /dev/null[m
[1m+++ b/src/view/MainFrame.java[m
[36m@@ -0,0 +1,259 @@[m
[32m+[m[32mpackage view;[m
[32m+[m
[32m+[m[32mimport controller.Solitaire;[m
[32m+[m[32mimport java.awt.BorderLayout;[m
[32m+[m[32mimport java.awt.Color;[m
[32m+[m[32mimport java.awt.Component;[m
[32m+[m[32mimport java.awt.Container;[m
[32m+[m[32mimport java.awt.Dimension;[m
[32m+[m[32mimport java.awt.Font;[m
[32m+[m[32mimport java.awt.Image;[m
[32m+[m[32mimport java.awt.Rectangle;[m
[32m+[m[32mimport java.awt.Toolkit;[m
[32m+[m[32mimport java.awt.event.ActionEvent;[m
[32m+[m[32mimport java.awt.event.ActionListener;[m
[32m+[m[32mimport java.awt.event.MouseEvent;[m
[32m+[m[32mimport java.awt.event.MouseListener;[m
[32m+[m[32mimport java.awt.event.MouseMotionListener;[m
[32m+[m[32mimport java.awt.image.BufferedImage;[m
[32m+[m[32mimport java.io.File;[m
[32m+[m[32mimport java.io.IOException;[m
[32m+[m[32mimport javax.imageio.ImageIO;[m
[32m+[m[32mimport javax.swing.BorderFactory;[m
[32m+[m[32mimport javax.swing.Icon;[m
[32m+[m[32mimport javax.swing.ImageIcon;[m
[32m+[m[32mimport javax.swing.JButton;[m
[32m+[m[32mimport javax.swing.JFrame;[m
[32m+[m[32mimport javax.swing.JLabel;[m
[32m+[m[32mimport javax.swing.JLayeredPane;[m
[32m+[m[32mimport javax.swing.JOptionPane;[m
[32m+[m[32mimport javax.swing.JPanel;[m
[32m+[m[32mimport javax.swing.JTextArea;[m
[32m+[m[32mimport javax.swing.border.TitledBorder;[m
[32m+[m[32mimport model.*;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *[m
[32m+[m[32m * @author Alan Tian <alan.tian at aut.ac.nz>[m
[32m+[m[32m */[m
[32m+[m[32mpublic class MainFrame extends JFrame implements ActionListener, MouseListener, MouseMotionListener{[m
[32m+[m
[32m+[m[32m    // game panel[m
[32m+[m[32m    public static final String NEW_GAME = "New Game";[m
[32m+[m
[32m+[m[32m    private JPanel pnlGame = new JPanel();[m
[32m+[m[32m    private JButton btnNewGame = new JButton(NEW_GAME);[m
[32m+[m[32m    private JTextArea txtGameInfor = new JTextArea();[m
[32m+[m[32m    // desk panel[m
[32m+[m[32m    private JPanel pnlDesk = new JPanel();[m
[32m+[m[32m    private JPanel pnlUpperDesk = new JPanel();[m
[32m+[m[32m    private JPanel pnlLowerDesk = new JPanel();[m
[32m+[m[32m    private JLabel lblUserAction = new JLabel("User Play: ");[m
[32m+[m[32m    private JLayeredPane[] pnlCardList = new JLayeredPane[7];[m
[32m+[m[32m    private JLabel lblDeck = new JLabel();[m
[32m+[m[32m    private CardLabel lblDeckCur = new CardLabel();[m
[32m+[m[32m//    private CardLabel lblDeckPre = new CardLabel();[m
[32m+[m[32m    private JLabel[] lblStack = new JLabel[4];[m
[32m+[m[32m    private ImagePanel pnlUserDesk;[m
[32m+[m
[32m+[m[32m    //[m[41m [m
[32m+[m[32m    private static Color COLOR_HOMETEAM = new Color(255, 100, 100);[m
[32m+[m[32m    private static Color COLOR_GUESTTEAM = new Color(100, 100, 255);[m
[32m+[m[32m    private static Dimension DIM_BUTTON = new Dimension(100, 40);[m
[32m+[m[32m    private static Font FONT_MONO = new java.awt.Font("Courier New", 0, 11);[m
[32m+[m[32m    private static Dimension DIM_CARD = new Dimension(142, 192);[m
[32m+[m
[32m+[m[32m    private Solitaire game;[m
[32m+[m
[32m+[m[32m    private void initGamePanel() {[m
[32m+[m[32m        pnlGame.setBorder(BorderFactory.createTitledBorder("Game Information"));[m
[32m+[m[32m        pnlGame.setPreferredSize(new Dimension(250, 600));[m
[32m+[m
[32m+[m[32m        btnNewGame.setPreferredSize(DIM_BUTTON);[m
[32m+[m[32m        txtGameInfor.setPreferredSize(new Dimension(200, 200));[m
[32m+[m
[32m+[m[32m        pnlGame.add(btnNewGame);[m
[32m+[m[32m        pnlGame.add(txtGameInfor);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private void initDeskPanel() {[m
[32m+[m[32m        Image imgDesk = Toolkit.getDefaultToolkit().createImage("images\\summit.png");[m
[32m+[m[32m        pnlUserDesk = new ImagePanel(new BorderLayout(), imgDesk);[m
[32m+[m
[32m+[m[32m        for (int i = 0; i < 7; i++) {[m
[32m+[m[32m            pnlCardList[i] = new JLayeredPane();[m
[32m+[m[32m            pnlLowerDesk.add(pnlCardList[i], BorderLayout.WEST);[m
[32m+[m[32m        }[m
[32m+[m[32m        lblDeck.setPreferredSize(DIM_CARD);[m
[32m+[m[32m        pnlUpperDesk.add(lblDeck, BorderLayout.WEST);[m
[32m+[m[32m        pnlUpperDesk.add(lblDeckCur, BorderLayout.WEST);[m
[32m+[m[32m        for (int i = 0; i < 4; i++) {[m
[32m+[m[32m            lblStack[i] = new JLabel();[m
[32m+[m[32m            pnlUpperDesk.add(lblStack[i], BorderLayout.WEST);[m
[32m+[m[32m            lblStack[i].setPreferredSize(DIM_CARD);[m
[32m+[m[32m        }[m
[32m+[m[32m        lblDeck.setPreferredSize(DIM_CARD);[m
[32m+[m[32m        lblDeckCur.setPreferredSize(DIM_CARD);[m
[32m+[m
[32m+[m[32m        lblUserAction.setPreferredSize(new Dimension(200, 200));[m
[32m+[m[32m        lblUserAction.setAlignmentY(Component.BOTTOM_ALIGNMENT);[m
[32m+[m
[32m+[m[32m        pnlLowerDesk.setBorder(BorderFactory.createTitledBorder(null, "Card Lists", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, new Color(255, 255, 255)));[m
[32m+[m[32m        pnlUpperDesk.setBorder(BorderFactory.createTitledBorder(null, "Card Deck and Stacks", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, new Color(255, 255, 255)));[m
[32m+[m
[32m+[m[32m        pnlUserDesk.add(pnlUpperDesk, BorderLayout.NORTH);[m
[32m+[m[32m        pnlUserDesk.add(pnlLowerDesk, BorderLayout.CENTER);[m
[32m+[m
[32m+[m[32m        pnlDesk.add(pnlUserDesk);[m
[32m+[m
[32m+[m[32m        showGame();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public MainFrame(Solitaire game) {[m
[32m+[m[32m        this.game = game;[m
[32m+[m
[32m+[m[32m        Container contentPane = getContentPane();[m
[32m+[m[32m        contentPane.setLayout(new BorderLayout());[m
[32m+[m
[32m+[m[32m        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);[m
[32m+[m[32m        this.setTitle("Solitaire Game");[m
[32m+[m
[32m+[m[32m        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();[m
[32m+[m[32m        int frameWidth = dim.width * 2 / 3;[m
[32m+[m[32m        int frameHeight = dim.height * 2 / 3;[m
[32m+[m[32m        this.setSize(frameWidth, frameHeight);[m
[32m+[m
[32m+[m[32m        this.setLocation((dim.width - frameWidth) / 2,[m
[32m+[m[32m                (dim.height - frameHeight) / 2);[m
[32m+[m
[32m+[m[32m        initDeskPanel();[m
[32m+[m[32m        initGamePanel();[m
[32m+[m
[32m+[m[32m        this.add(pnlGame, BorderLayout.EAST);[m
[32m+[m[32m        this.add(pnlDesk, BorderLayout.CENTER);[m
[32m+[m
[32m+[m[32m        addListener();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private void addListener() {[m
[32m+[m[32m        btnNewGame.addActionListener(this);[m
[32m+[m[32m        lblDeck.addMouseListener(this);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private void showGame() {[m
[32m+[m[32m        showDeck();[m
[32m+[m[32m        showStacks();[m
[32m+[m[32m        showCardLists();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private void showDeck() {[m
[32m+[m[32m        String deckCardName;[m
[32m+[m[32m        if (game.deck.isEmpty() || game.deck.isFirst()) {[m
[32m+[m[32m            deckCardName = "images\\empty.gif";[m
[32m+[m[32m        } else {[m
[32m+[m[32m            deckCardName = "images\\back.png";[m
[32m+[m[32m        }[m
[32m+[m[32m        lblDeck.setIcon(getImageIcon(deckCardName, DIM_CARD));[m
[32m+[m
[32m+[m[32m        if (game.deck.isEmpty()) {[m
[32m+[m[32m            lblDeckCur.setIcon(getImageIcon("images\\empty.gif", DIM_CARD));[m
[32m+[m[32m        } else {[m
[32m+[m[32m            lblDeckCur.setIcon(game.deck.getCurCard().getImage(DIM_CARD));[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private void showStacks() {[m
[32m+[m[32m        for (int s = 0; s < game.stacks.length; s++) {[m
[32m+[m[32m            CardStack stack = game.stacks[s];[m
[32m+[m[32m            if (stack.isEmpty()) {[m
[32m+[m[32m                lblStack[s].setIcon(getImageIcon("images\\empty.gif", DIM_CARD));[m
[32m+[m[32m            } else {[m
[32m+[m[32m                lblStack[s].setIcon(stack.peek().getImage(DIM_CARD));[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public Icon getImageIcon(String fileName, Dimension dim) {[m
[32m+[m[32m        try {[m
[32m+[m[32m            BufferedImage img = ImageIO.read(new File(fileName));[m
[32m+[m[32m            Image dimImg = img.getScaledInstance((int) dim.getWidth(), (int) dim.getHeight(), Image.SCALE_SMOOTH);[m
[32m+[m[32m            return new ImageIcon(dimImg);[m
[32m+[m[32m        } catch (IOException e) {[m
[32m+[m[32m            JOptionPane.showMessageDialog(null, e.getMessage());[m
[32m+[m[32m            return null;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private void showCardLists() {[m
[32m+[m[32m        int maxListSize = 0;[m
[32m+[m[32m        for (int l = 0; l < game.lists.length; l++) {[m
[32m+[m[32m            pnlCardList[l].removeAll();[m
[32m+[m[32m            Rectangle rec = new Rectangle(10, 10, DIM_CARD.width, DIM_CARD.height);[m
[32m+[m[32m            CardList list = game.lists[l];[m
[32m+[m[32m            for (int i = 0; i < list.size(); i++) {[m
[32m+[m[32m                CardLabel lblCardImg = new CardLabel(list.get(i), DIM_CARD);[m
[32m+[m[32m                lblCardImg.setBounds(rec);[m
[32m+[m[32m                pnlCardList[l].add(lblCardImg, new Integer(i));[m
[32m+[m[32m                rec.y += 40;[m
[32m+[m[32m            }[m
[32m+[m[32m            if (maxListSize < list.size()) {[m
[32m+[m[32m                maxListSize = list.size();[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        for (int l = 0; l < game.lists.length; l++) {[m
[32m+[m[32m            pnlCardList[l].setPreferredSize(new Dimension(DIM_CARD.width + 10, DIM_CARD.height + 40 * maxListSize - 1));[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void actionPerformed(ActionEvent e) {[m
[32m+[m
[32m+[m[32m        if (e.getActionCommand().equalsIgnoreCase(NEW_GAME)) {[m
[32m+[m[32m            game.initSolitaire();[m
[32m+[m[32m            showGame();[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void mouseClicked(MouseEvent e) {[m
[32m+[m[32m        if (e.getSource() == lblDeck) {[m
[32m+[m[32m            game.deck.drawCard();[m
[32m+[m[32m            showDeck();[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void mousePressed(MouseEvent e) {[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void mouseReleased(MouseEvent e) {[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void mouseEntered(MouseEvent e) {[m
[32m+[m[32m        if (e.getSource() == lblDeck) {[m
[32m+[m[32m            lblDeck.setBackground(COLOR_HOMETEAM);[m
[32m+[m[32m        }[m
[32m+[m[32m        else if(e.getSource() == lblDeckCur){[m
[32m+[m[32m            lblDeck.setBackground(COLOR_HOMETEAM);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void mouseExited(MouseEvent e) {[m
[32m+[m[32m        if (e.getSource() == lblDeck) {[m
[32m+[m[32m            lblDeck.setBackground(COLOR_GUESTTEAM);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void mouseDragged(MouseEvent e) {[m
[32m+[m[41m        [m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void mouseMoved(MouseEvent e) {[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/test/model/CardDeckTest.java b/test/model/CardDeckTest.java[m
[1mnew file mode 100644[m
[1mindex 0000000..91a0913[m
[1m--- /dev/null[m
[1m+++ b/test/model/CardDeckTest.java[m
[36m@@ -0,0 +1,75 @@[m
[32m+[m[32m/*[m
[32m+[m[32m * To change this license header, choose License Headers in Project Properties.[m
[32m+[m[32m * To change this template file, choose Tools | Templates[m
[32m+[m[32m * and open the template in the editor.[m
[32m+[m[32m */[m
[32m+[m[32mpackage model;[m
[32m+[m
[32m+[m[32mimport org.junit.After;[m
[32m+[m[32mimport static org.junit.Assert.assertEquals;[m
[32m+[m[32mimport org.junit.Before;[m
[32m+[m[32mimport org.junit.Test;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *[m
[32m+[m[32m * @author Alan Tian[m
[32m+[m[32m */[m
[32m+[m[32mpublic class CardDeckTest {[m
[32m+[m[32m    CardList list;[m
[32m+[m[32m    CardDeck deck;[m
[32m+[m[41m    [m
[32m+[m[32m    @Before[m
[32m+[m[32m    public void setUp() {[m
[32m+[m[32m        list = new CardList();[m
[32m+[m[32m        deck = new CardDeck();[m
[32m+[m
[32m+[m[32m        deck.add(new Card(Card.mapCardName("D_1")));[m
[32m+[m[32m        deck.add(new Card(Card.mapCardName("D_2")));[m
[32m+[m[32m        deck.add(new Card(Card.mapCardName("D_3")));[m
[32m+[m[32m        deck.add(new Card(Card.mapCardName("D_4")));[m
[32m+[m[32m//        deck.setCurCard(deck.get(deck.size()-1));[m
[32m+[m[32m        deck.setCurCard(deck.size()-1);[m
[32m+[m[41m        [m
[32m+[m[32m        list.add(new Card(Card.mapCardName("S_1")));[m
[32m+[m[32m        list.add(new Card(Card.mapCardName("S_2")));[m
[32m+[m[32m        list.add(new Card(Card.mapCardName("S_3")));[m
[32m+[m[32m        list.add(new Card(Card.mapCardName("S_4")));[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    @After[m
[32m+[m[32m    public void tearDown() {[m
[32m+[m[32m        list = null;[m
[32m+[m[32m        deck = null;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Test[m
[32m+[m[32m    public void testCardDeckDrawCard() {[m
[32m+[m[32m        assertEquals(4, deck.size());[m
[32m+[m[32m        assertEquals("D_4", deck.getCurCard().toString());[m
[32m+[m
[32m+[m[32m        Card card = deck.drawCard();[m
[32m+[m[32m        assertEquals("D_4", card.toString());[m
[32m+[m
[32m+[m[32m        deck.drawCard();[m
[32m+[m[32m        deck.drawCard();[m
[32m+[m[32m        card= deck.drawCard();[m
[32m+[m[32m        assertEquals("D_1", card.toString());[m
[32m+[m[32m        card= deck.drawCard();[m
[32m+[m[32m        assertEquals("D_4", card.toString());[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Test[m
[32m+[m[32m    public void testCardDeck() {[m
[32m+[m[32m        assertEquals(4, deck.size());[m
[32m+[m[32m        Card card = deck.takeCard();[m
[32m+[m[32m        assertEquals("D_4", card.toString());[m
[32m+[m[32m        deck.drawCard();[m
[32m+[m[32m        card = deck.takeCard();[m
[32m+[m[32m        assertEquals("D_2", card.toString());[m
[32m+[m[32m        card= deck.drawCard();[m
[32m+[m[32m        assertEquals("D_3", card.toString());[m
[32m+[m[32m        card = deck.takeCard();[m
[32m+[m[32m        assertEquals("D_1", card.toString());[m
[32m+[m[32m        assertEquals("D_3", deck.getCurCard().toString());[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/test/model/CardListTest.java b/test/model/CardListTest.java[m
[1mnew file mode 100644[m
[1mindex 0000000..7f4ae01[m
[1m--- /dev/null[m
[1m+++ b/test/model/CardListTest.java[m
[36m@@ -0,0 +1,143 @@[m
[32m+[m[32m/*[m
[32m+[m[32m * To change this license header, choose License Headers in Project Properties.[m
[32m+[m[32m * To change this template file, choose Tools | Templates[m
[32m+[m[32m * and open the template in the editor.[m
[32m+[m[32m */[m
[32m+[m[32mpackage model;[m
[32m+[m
[32m+[m[32mimport org.junit.After;[m
[32m+[m[32mimport static org.junit.Assert.*;[m
[32m+[m[32mimport org.junit.Before;[m
[32m+[m[32mimport org.junit.Test;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *[m
[32m+[m[32m * @author Alan Tian[m
[32m+[m[32m */[m
[32m+[m[32mpublic class CardListTest {[m
[32m+[m[32m    CardList list;[m
[32m+[m[41m    [m
[32m+[m[32m    @Before[m
[32m+[m[32m    public void setUp() {[m
[32m+[m[32m        list = new CardList();[m
[32m+[m
[32m+[m[32m        list.add(new Card(Card.mapCardName("S_1")));[m
[32m+[m[32m        list.add(new Card(Card.mapCardName("S_2")));[m
[32m+[m[32m        list.add(new Card(Card.mapCardName("S_3")));[m
[32m+[m[32m        list.add(new Card(Card.mapCardName("S_4")));[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    @After[m
[32m+[m[32m    public void tearDown() {[m
[32m+[m[32m        list = null;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Test[m
[32m+[m[32m    public void testCardListCut0() {[m
[32m+[m[32m        assertEquals(4, list.size());[m
[32m+[m[32m        CardList newList = list.cut(0);[m
[32m+[m[41m        [m
[32m+[m[32m        assertEquals(0, list.size());[m
[32m+[m[32m        assertEquals(null, list.getTailNode());[m
[32m+[m
[32m+[m[32m        assertEquals(4, newList.size());[m
[32m+[m[32m        assertEquals("S_4", newList.getTailCard().toString());[m
[32m+[m[32m        assertEquals("S_1", newList.get(0).toString());[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    @Test[m
[32m+[m[32m    public void testCardListCutMiddle() {[m
[32m+[m[32m        assertEquals(4, list.size());[m
[32m+[m[32m        CardList newList = list.cut(2);[m
[32m+[m[41m        [m
[32m+[m[32m        assertEquals(2, list.size());[m
[32m+[m[32m        assertEquals("S_2", list.getTailNode().next().value().toString());[m
[32m+[m[32m        assertEquals("S_2", list.getTailCard().toString());[m
[32m+[m[32m        assertEquals("S_1", list.get(0).toString());[m
[32m+[m
[32m+[m[32m        assertEquals(2, newList.size());[m
[32m+[m[32m        assertEquals("S_4", newList.getTailCard().toString());[m
[32m+[m[32m        assertEquals("S_4", newList.getTailNode().next().value().toString());[m
[32m+[m[32m        assertEquals("S_3", newList.get(0).toString());[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Test[m
[32m+[m[32m    public void testCardListCutLast() {[m
[32m+[m[32m        assertEquals(4, list.size());[m
[32m+[m[32m        list.setOpenIndex(list.size()-1);[m
[32m+[m[32m        CardList newList = list.cut(list.size()-1);[m
[32m+[m[41m        [m
[32m+[m[32m        assertEquals(3, list.size());[m
[32m+[m[32m        assertEquals("S_3", list.getTailNode().next().value().toString());[m
[32m+[m[32m        assertEquals("S_3", list.getTailCard().toString());[m
[32m+[m[32m        assertEquals("S_1", list.get(0).toString());[m
[32m+[m
[32m+[m[32m        assertEquals(1, newList.size());[m
[32m+[m[32m        assertEquals("S_4", newList.getTailCard().toString());[m
[32m+[m[32m        assertEquals("S_4", newList.getTailNode().next().value().toString());[m
[32m+[m[32m        assertEquals("S_4", newList.get(0).toString());[m
[32m+[m[32m        assertEquals(2, list.getOpenIndex());[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Test[m
[32m+[m[32m    public void testCardListMoveTail() {[m
[32m+[m[32m        assertEquals(4, list.size());[m
[32m+[m[32m        list.setOpenIndex(list.size()-1);[m
[32m+[m[32m        assertEquals(3, list.getOpenIndex());[m
[32m+[m
[32m+[m[32m        Card card = list.moveTail();[m
[32m+[m[41m        [m
[32m+[m[32m        assertEquals(3, list.size());[m
[32m+[m[32m        assertEquals("S_3", list.getTailNode().next().value().toString());[m
[32m+[m[32m        assertEquals("S_3", list.getTailCard().toString());[m
[32m+[m[32m        assertEquals("S_1", list.get(0).toString());[m
[32m+[m[32m        assertEquals(2, list.getOpenIndex());[m
[32m+[m[41m        [m
[32m+[m[32m        assertEquals("S_4", card.toString());[m
[32m+[m[32m        list.moveTail();[m
[32m+[m[32m        list.moveTail();[m
[32m+[m[32m        card = list.moveTail();[m
[32m+[m[32m        assertEquals("S_1", card.toString());[m
[32m+[m[41m        [m
[32m+[m[32m        card = list.moveTail();[m
[32m+[m[32m        assertEquals(null, card);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Test[m
[32m+[m[32m    public void testCardListLink_1to1() {[m
[32m+[m[32m        CardList list1 = new CardList();[m
[32m+[m[32m        CardList list2 = new CardList();[m
[32m+[m
[32m+[m[32m        list1.add(new Card(Card.mapCardName("D_3")));[m
[32m+[m[32m        list2.add(new Card(Card.mapCardName("S_2")));[m
[32m+[m[41m        [m
[32m+[m[32m        list1.setOpenIndex(0);[m
[32m+[m[32m        list2.link(list1);[m
[32m+[m[41m        [m
[32m+[m[32m        assertEquals("D_3", list1.get(0).toString());[m
[32m+[m[32m        assertEquals("S_2", list1.getTailCard().toString());[m
[32m+[m[32m        assertEquals("S_2", list1.getTailNode().next().value().toString());[m
[32m+[m[32m        assertEquals(2, list1.size());[m
[32m+[m[32m        assertEquals(0, list1.getOpenIndex());[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Test[m
[32m+[m[32m    public void testCardListLink_1to3() {[m
[32m+[m[32m        CardList list1 = new CardList();[m
[32m+[m[32m        CardList list2 = new CardList();[m
[32m+[m
[32m+[m[32m        list1.add(new Card(Card.mapCardName("S_8")));[m
[32m+[m[32m        list1.add(new Card(Card.mapCardName("S_4")));[m
[32m+[m[32m        list1.add(new Card(Card.mapCardName("D_3")));[m
[32m+[m[32m        list2.add(new Card(Card.mapCardName("S_2")));[m
[32m+[m[41m        [m
[32m+[m[32m        list1.setOpenIndex(1);[m
[32m+[m[32m        list2.link(list1);[m
[32m+[m[41m        [m
[32m+[m[32m        assertEquals("S_8", list1.get(0).toString());[m
[32m+[m[32m        assertEquals("S_2", list1.getTailCard().toString());[m
[32m+[m[32m        assertEquals("S_2", list1.getTailNode().next().value().toString());[m
[32m+[m[32m        assertEquals(4, list1.size());[m
[32m+[m[32m        assertEquals(1, list1.getOpenIndex());[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/test/model/GameTest.java b/test/model/GameTest.java[m
[1mnew file mode 100644[m
[1mindex 0000000..64cefcd[m
[1m--- /dev/null[m
[1m+++ b/test/model/GameTest.java[m
[36m@@ -0,0 +1,134 @@[m
[32m+[m[32m/*[m
[32m+[m[32m * To change this license header, choose License Headers in Project Properties.[m
[32m+[m[32m * To change this template file, choose Tools | Templates[m
[32m+[m[32m * and open the template in the editor.[m
[32m+[m[32m */[m
[32m+[m[32mpackage model;[m
[32m+[m
[32m+[m[32mimport controller.Solitaire;[m
[32m+[m[32mimport static controller.Solitaire.LIST_NUM;[m
[32m+[m[32mimport java.io.ByteArrayOutputStream;[m
[32m+[m[32mimport java.io.PrintStream;[m
[32m+[m[32mimport java.util.ArrayList;[m
[32m+[m[32mimport org.junit.After;[m
[32m+[m[32mimport org.junit.AfterClass;[m
[32m+[m[32mimport org.junit.Before;[m
[32m+[m[32mimport org.junit.BeforeClass;[m
[32m+[m[32mimport org.junit.Test;[m
[32m+[m[32mimport static org.junit.Assert.*;[m
[32m+[m[32mimport view.GameCui;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *[m
[32m+[m[32m * @author Alan Tian[m
[32m+[m[32m */[m
[32m+[m[32mpublic class GameTest {[m
[32m+[m[32m    private final ByteArrayOutputStream outContent = new ByteArrayOutputStream();[m
[32m+[m[41m    [m
[32m+[m[32m    Solitaire game;[m
[32m+[m[32m    Card[] cardSet;[m
[32m+[m[32m    public GameTest() {[m
[32m+[m[32m        game = new Solitaire();[m
[32m+[m
[32m+[m[32m        cardSet = new Card[52];[m
[32m+[m[32m        for (int i = 0; i < cardSet.length; i++) {[m
[32m+[m[32m            cardSet[i] = new Card(i + 1);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    @BeforeClass[m
[32m+[m[32m    public static void setUpClass() {[m
[32m+[m[41m        [m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    @AfterClass[m
[32m+[m[32m    public static void tearDownClass() {[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    @Before[m
[32m+[m[32m    public void setUp() {[m
[32m+[m[32m        System.out.println("setup");[m
[32m+[m[32m        game.deck = new CardDeck();[m
[32m+[m[32m        for (int i = 0; i < game.lists.length; i++) {[m
[32m+[m[32m            game.lists[i] = new CardList();[m
[32m+[m[32m        }[m
[32m+[m[41m        [m
[32m+[m[32m        for (int i = 0; i < game.stacks.length; i++) {[m
[32m+[m[32m            game.stacks[i] = new CardStack();[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        int c = 0;[m
[32m+[m
[32m+[m[32m        for (int i = 0; i < LIST_NUM; i++) {[m
[32m+[m[32m            for (int j = 0; j < i + 1; j++) {[m
[32m+[m[32m                game.lists[i].add(cardSet[c]);[m
[32m+[m[32m                c++;[m
[32m+[m[32m            }[m
[32m+[m[32m            game.lists[i].setOpenIndex(game.lists[i].size() - 1);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        for (int i = c; i < cardSet.length; i++) {[m
[32m+[m[32m            game.deck.add(cardSet[i]);[m
[32m+[m[32m        }[m
[32m+[m[32m//        game.deck.setCurCard(cardSet[cardSet.length-1]);[m
[32m+[m[32m        game.deck.setCurCard(game.deck.size()-1);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    @After[m
[32m+[m[32m    public void tearDown() {[m
[32m+[m[32m        game.deck = null;[m
[32m+[m[32m        for (int i = 0; i < game.lists.length; i++) {[m
[32m+[m[32m            game.lists[i] = null;[m
[32m+[m[32m        }[m
[32m+[m[41m        [m
[32m+[m[32m        for (int i = 0; i < game.stacks.length; i++) {[m
[32m+[m[32m            game.stacks[i] = null;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Test[m
[32m+[m[32m    public void testCardListCut() {[m
[32m+[m[32m        CardList list = new CardList();[m
[32m+[m[32m        list.add(new Card(Card.mapCardName("S_1")));[m
[32m+[m[32m        list.add(new Card(Card.mapCardName("S_2")));[m
[32m+[m[32m        list.add(new Card(Card.mapCardName("S_3")));[m
[32m+[m[32m        list.add(new Card(Card.mapCardName("S_4")));[m
[32m+[m[32m        list.cut(0);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    @Test[m
[32m+[m[32m    public void testCui() {[m
[32m+[m[32m        System.out.println("test CUI");[m
[32m+[m
[32m+[m[32m        GameCui cui = new GameCui(game);[m
[32m+[m[32m        cui.showGame();[m
[32m+[m[41m        [m
[32m+[m[32m//        cui.setOutput(new PrintStream(outContent));[m
[32m+[m[32m        cui.executeCommand("deckto 0");[m
[32m+[m
[32m+[m[32m        for (int i=1; i<=4; i++)[m
[32m+[m[32m            cui.executeCommand("drawcard");[m
[32m+[m[41m        [m
[32m+[m[32m        cui.executeCommand("deckto 1");[m
[32m+[m[32m        cui.executeCommand("deckto 4");[m
[32m+[m[41m        [m
[32m+[m[32m        cui.showGame();[m
[32m+[m
[32m+[m[32m//        cui.executeCommand("send D_4");[m
[32m+[m[32m//        cui.executeCommand("send D_1");[m
[32m+[m[32m//        cui.executeCommand("send D_3");[m
[32m+[m[32m//        cui.executeCommand("send S_9");[m
[32m+[m[32m//        cui.showGame();[m
[32m+[m[32m//[m[41m        [m
[32m+[m[32m//        cui.executeCommand("link S_9 3");[m
[32m+[m[32m//        cui.executeCommand("link C_2 2");[m
[32m+[m[32m//        cui.showGame();[m
[32m+[m[41m        [m
[32m+[m[32m        game.lists[1].set(game.lists[1].size()-1, new Card(Card.mapCardName("S_1")));[m
[32m+[m[32m        cui.executeCommand("link S_1 7");[m
[32m+[m[32m//        game.lists[1].set(game.lists[1].size()-1, new Card(40));[m
[32m+[m[32m//        cui.executeCommand("link S_1 7");[m
[32m+[m[32m        cui.showGame();[m
[32m+[m[32m//        assertEquals(GameCui.ERR_INVALID_LIST+"\n", outContent);[m
[32m+[m[32m    }[m[41m    [m
[32m+[m[32m}[m
